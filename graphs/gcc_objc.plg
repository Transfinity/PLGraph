Terminals unused in grammar

   PTR_VALUE
   PTR_BASE
   PTR_EXTENT
   STRING_FUNC_NAME


Rules useless in parser due to conflicts

  607 optparmlist: ',' ELLIPSIS


State 88 conflicts: 2 shift/reduce
State 89 conflicts: 1 shift/reduce
State 92 conflicts: 1 shift/reduce, 1 reduce/reduce
State 105 conflicts: 1 shift/reduce
State 183 conflicts: 1 shift/reduce
State 185 conflicts: 1 shift/reduce
State 187 conflicts: 1 shift/reduce
State 258 conflicts: 1 shift/reduce
State 298 conflicts: 1 shift/reduce
State 304 conflicts: 1 shift/reduce
State 316 conflicts: 1 shift/reduce
State 320 conflicts: 1 shift/reduce
State 335 conflicts: 1 shift/reduce
State 404 conflicts: 1 shift/reduce
State 452 conflicts: 1 shift/reduce
State 458 conflicts: 1 shift/reduce
State 464 conflicts: 2 shift/reduce
State 465 conflicts: 2 shift/reduce
State 466 conflicts: 2 shift/reduce
State 467 conflicts: 2 shift/reduce
State 501 conflicts: 1 shift/reduce
State 506 conflicts: 1 shift/reduce
State 512 conflicts: 3 reduce/reduce
State 584 conflicts: 1 shift/reduce
State 708 conflicts: 2 shift/reduce
State 806 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: /* empty */
    2        | extdefs

    3 extdefs: extdef
    4        | extdefs extdef

    5 extdef: extdef_1

    6 extdef_1: fndef
    7         | datadef
    8         | objcdef
    9         | ASM_KEYWORD '(' expr ')' ';'
   10         | extension extdef

   11 datadef: setspecs notype_initdecls ';'
   12        | declspecs_nots setspecs notype_initdecls ';'
   13        | declspecs_ts setspecs initdecls ';'
   14        | declspecs ';'
   15        | error ';'
   16        | error '}'
   17        | ';'

   18 fndef: declspecs_ts setspecs declarator old_style_parm_decls save_filename save_lineno compstmt_or_error
   19      | declspecs_ts setspecs declarator error
   20      | declspecs_nots setspecs notype_declarator old_style_parm_decls save_filename save_lineno compstmt_or_error
   21      | declspecs_nots setspecs notype_declarator error
   22      | setspecs notype_declarator old_style_parm_decls save_filename save_lineno compstmt_or_error
   23      | setspecs notype_declarator error

   24 identifier: IDENTIFIER
   25           | TYPENAME
   26           | OBJECTNAME
   27           | CLASSNAME

   28 unop: '&'
   29     | '-'
   30     | '+'
   31     | PLUSPLUS
   32     | MINUSMINUS
   33     | '~'
   34     | '!'

   35 expr: nonnull_exprlist

   36 exprlist: /* empty */
   37         | nonnull_exprlist

   38 nonnull_exprlist: expr_no_commas
   39                 | nonnull_exprlist ',' expr_no_commas

   40 unary_expr: primary
   41           | '*' cast_expr
   42           | extension cast_expr
   43           | unop cast_expr
   44           | ANDAND identifier
   45           | sizeof unary_expr
   46           | sizeof '(' typename ')'
   47           | alignof unary_expr
   48           | alignof '(' typename ')'
   49           | REALPART cast_expr
   50           | IMAGPART cast_expr

   51 sizeof: SIZEOF

   52 alignof: ALIGNOF

   53 typeof: TYPEOF

   54 cast_expr: unary_expr
   55          | '(' typename ')' cast_expr

   56 expr_no_commas: cast_expr
   57               | expr_no_commas '+' expr_no_commas
   58               | expr_no_commas '-' expr_no_commas
   59               | expr_no_commas '*' expr_no_commas
   60               | expr_no_commas '/' expr_no_commas
   61               | expr_no_commas '%' expr_no_commas
   62               | expr_no_commas LSHIFT expr_no_commas
   63               | expr_no_commas RSHIFT expr_no_commas
   64               | expr_no_commas ARITHCOMPARE expr_no_commas
   65               | expr_no_commas EQCOMPARE expr_no_commas
   66               | expr_no_commas '&' expr_no_commas
   67               | expr_no_commas '|' expr_no_commas
   68               | expr_no_commas '^' expr_no_commas
   69               | expr_no_commas ANDAND expr_no_commas
   70               | expr_no_commas OROR expr_no_commas
   71               | expr_no_commas '?' expr ':' expr_no_commas
   72               | expr_no_commas '?' ':' expr_no_commas
   73               | expr_no_commas '=' expr_no_commas
   74               | expr_no_commas ASSIGN expr_no_commas

   75 primary: IDENTIFIER
   76        | CONSTANT
   77        | STRING
   78        | VAR_FUNC_NAME
   79        | '(' typename ')' '{' initlist_maybe_comma '}'
   80        | '(' expr ')'
   81        | '(' error ')'
   82        | compstmt_primary_start compstmt_nostart ')'
   83        | compstmt_primary_start error ')'
   84        | primary '(' exprlist ')'
   85        | VA_ARG '(' expr_no_commas ',' typename ')'
   86        | CHOOSE_EXPR '(' expr_no_commas ',' expr_no_commas ',' expr_no_commas ')'
   87        | TYPES_COMPATIBLE_P '(' typename ',' typename ')'
   88        | primary '[' expr ']'
   89        | primary '.' identifier
   90        | primary POINTSAT identifier
   91        | primary PLUSPLUS
   92        | primary MINUSMINUS
   93        | objcmessageexpr
   94        | objcselectorexpr
   95        | objcprotocolexpr
   96        | objcencodeexpr
   97        | objc_string

   98 objc_string: '@' STRING
   99            | objc_string '@' STRING

  100 old_style_parm_decls: old_style_parm_decls_1

  101 old_style_parm_decls_1: /* empty */
  102                       | datadecls

  103 lineno_datadecl: save_filename save_lineno datadecl

  104 datadecls: lineno_datadecl
  105          | errstmt
  106          | datadecls lineno_datadecl
  107          | lineno_datadecl errstmt

  108 datadecl: declspecs_ts_nosa setspecs initdecls ';'
  109         | declspecs_nots_nosa setspecs notype_initdecls ';'
  110         | declspecs_ts_nosa ';'
  111         | declspecs_nots_nosa ';'

  112 lineno_decl: save_filename save_lineno decl

  113 setspecs: /* empty */

  114 maybe_resetattrs: maybe_attribute

  115 decl: declspecs_ts setspecs initdecls ';'
  116     | declspecs_nots setspecs notype_initdecls ';'
  117     | declspecs_ts setspecs nested_function
  118     | declspecs_nots setspecs notype_nested_function
  119     | declspecs ';'
  120     | extension decl

  121 declspecs_nosc_nots_nosa_noea: TYPE_QUAL
  122                              | declspecs_nosc_nots_nosa_noea TYPE_QUAL
  123                              | declspecs_nosc_nots_nosa_ea TYPE_QUAL

  124 declspecs_nosc_nots_nosa_ea: declspecs_nosc_nots_nosa_noea attributes

  125 declspecs_nosc_nots_sa_noea: declspecs_nosc_nots_sa_noea TYPE_QUAL
  126                            | declspecs_nosc_nots_sa_ea TYPE_QUAL

  127 declspecs_nosc_nots_sa_ea: attributes
  128                          | declspecs_nosc_nots_sa_noea attributes

  129 declspecs_nosc_ts_nosa_noea: typespec_nonattr
  130                            | declspecs_nosc_ts_nosa_noea TYPE_QUAL
  131                            | declspecs_nosc_ts_nosa_ea TYPE_QUAL
  132                            | declspecs_nosc_ts_nosa_noea typespec_reserved_nonattr
  133                            | declspecs_nosc_ts_nosa_ea typespec_reserved_nonattr
  134                            | declspecs_nosc_nots_nosa_noea typespec_nonattr
  135                            | declspecs_nosc_nots_nosa_ea typespec_nonattr

  136 declspecs_nosc_ts_nosa_ea: typespec_attr
  137                          | declspecs_nosc_ts_nosa_noea attributes
  138                          | declspecs_nosc_ts_nosa_noea typespec_reserved_attr
  139                          | declspecs_nosc_ts_nosa_ea typespec_reserved_attr
  140                          | declspecs_nosc_nots_nosa_noea typespec_attr
  141                          | declspecs_nosc_nots_nosa_ea typespec_attr

  142 declspecs_nosc_ts_sa_noea: declspecs_nosc_ts_sa_noea TYPE_QUAL
  143                          | declspecs_nosc_ts_sa_ea TYPE_QUAL
  144                          | declspecs_nosc_ts_sa_noea typespec_reserved_nonattr
  145                          | declspecs_nosc_ts_sa_ea typespec_reserved_nonattr
  146                          | declspecs_nosc_nots_sa_noea typespec_nonattr
  147                          | declspecs_nosc_nots_sa_ea typespec_nonattr

  148 declspecs_nosc_ts_sa_ea: declspecs_nosc_ts_sa_noea attributes
  149                        | declspecs_nosc_ts_sa_noea typespec_reserved_attr
  150                        | declspecs_nosc_ts_sa_ea typespec_reserved_attr
  151                        | declspecs_nosc_nots_sa_noea typespec_attr
  152                        | declspecs_nosc_nots_sa_ea typespec_attr

  153 declspecs_sc_nots_nosa_noea: scspec
  154                            | declspecs_sc_nots_nosa_noea TYPE_QUAL
  155                            | declspecs_sc_nots_nosa_ea TYPE_QUAL
  156                            | declspecs_nosc_nots_nosa_noea scspec
  157                            | declspecs_nosc_nots_nosa_ea scspec
  158                            | declspecs_sc_nots_nosa_noea scspec
  159                            | declspecs_sc_nots_nosa_ea scspec

  160 declspecs_sc_nots_nosa_ea: declspecs_sc_nots_nosa_noea attributes

  161 declspecs_sc_nots_sa_noea: declspecs_sc_nots_sa_noea TYPE_QUAL
  162                          | declspecs_sc_nots_sa_ea TYPE_QUAL
  163                          | declspecs_nosc_nots_sa_noea scspec
  164                          | declspecs_nosc_nots_sa_ea scspec
  165                          | declspecs_sc_nots_sa_noea scspec
  166                          | declspecs_sc_nots_sa_ea scspec

  167 declspecs_sc_nots_sa_ea: declspecs_sc_nots_sa_noea attributes

  168 declspecs_sc_ts_nosa_noea: declspecs_sc_ts_nosa_noea TYPE_QUAL
  169                          | declspecs_sc_ts_nosa_ea TYPE_QUAL
  170                          | declspecs_sc_ts_nosa_noea typespec_reserved_nonattr
  171                          | declspecs_sc_ts_nosa_ea typespec_reserved_nonattr
  172                          | declspecs_sc_nots_nosa_noea typespec_nonattr
  173                          | declspecs_sc_nots_nosa_ea typespec_nonattr
  174                          | declspecs_nosc_ts_nosa_noea scspec
  175                          | declspecs_nosc_ts_nosa_ea scspec
  176                          | declspecs_sc_ts_nosa_noea scspec
  177                          | declspecs_sc_ts_nosa_ea scspec

  178 declspecs_sc_ts_nosa_ea: declspecs_sc_ts_nosa_noea attributes
  179                        | declspecs_sc_ts_nosa_noea typespec_reserved_attr
  180                        | declspecs_sc_ts_nosa_ea typespec_reserved_attr
  181                        | declspecs_sc_nots_nosa_noea typespec_attr
  182                        | declspecs_sc_nots_nosa_ea typespec_attr

  183 declspecs_sc_ts_sa_noea: declspecs_sc_ts_sa_noea TYPE_QUAL
  184                        | declspecs_sc_ts_sa_ea TYPE_QUAL
  185                        | declspecs_sc_ts_sa_noea typespec_reserved_nonattr
  186                        | declspecs_sc_ts_sa_ea typespec_reserved_nonattr
  187                        | declspecs_sc_nots_sa_noea typespec_nonattr
  188                        | declspecs_sc_nots_sa_ea typespec_nonattr
  189                        | declspecs_nosc_ts_sa_noea scspec
  190                        | declspecs_nosc_ts_sa_ea scspec
  191                        | declspecs_sc_ts_sa_noea scspec
  192                        | declspecs_sc_ts_sa_ea scspec

  193 declspecs_sc_ts_sa_ea: declspecs_sc_ts_sa_noea attributes
  194                      | declspecs_sc_ts_sa_noea typespec_reserved_attr
  195                      | declspecs_sc_ts_sa_ea typespec_reserved_attr
  196                      | declspecs_sc_nots_sa_noea typespec_attr
  197                      | declspecs_sc_nots_sa_ea typespec_attr

  198 declspecs_ts: declspecs_nosc_ts_nosa_noea
  199             | declspecs_nosc_ts_nosa_ea
  200             | declspecs_nosc_ts_sa_noea
  201             | declspecs_nosc_ts_sa_ea
  202             | declspecs_sc_ts_nosa_noea
  203             | declspecs_sc_ts_nosa_ea
  204             | declspecs_sc_ts_sa_noea
  205             | declspecs_sc_ts_sa_ea

  206 declspecs_nots: declspecs_nosc_nots_nosa_noea
  207               | declspecs_nosc_nots_nosa_ea
  208               | declspecs_nosc_nots_sa_noea
  209               | declspecs_nosc_nots_sa_ea
  210               | declspecs_sc_nots_nosa_noea
  211               | declspecs_sc_nots_nosa_ea
  212               | declspecs_sc_nots_sa_noea
  213               | declspecs_sc_nots_sa_ea

  214 declspecs_ts_nosa: declspecs_nosc_ts_nosa_noea
  215                  | declspecs_nosc_ts_nosa_ea
  216                  | declspecs_sc_ts_nosa_noea
  217                  | declspecs_sc_ts_nosa_ea

  218 declspecs_nots_nosa: declspecs_nosc_nots_nosa_noea
  219                    | declspecs_nosc_nots_nosa_ea
  220                    | declspecs_sc_nots_nosa_noea
  221                    | declspecs_sc_nots_nosa_ea

  222 declspecs_nosc_ts: declspecs_nosc_ts_nosa_noea
  223                  | declspecs_nosc_ts_nosa_ea
  224                  | declspecs_nosc_ts_sa_noea
  225                  | declspecs_nosc_ts_sa_ea

  226 declspecs_nosc_nots: declspecs_nosc_nots_nosa_noea
  227                    | declspecs_nosc_nots_nosa_ea
  228                    | declspecs_nosc_nots_sa_noea
  229                    | declspecs_nosc_nots_sa_ea

  230 declspecs_nosc: declspecs_nosc_ts_nosa_noea
  231               | declspecs_nosc_ts_nosa_ea
  232               | declspecs_nosc_ts_sa_noea
  233               | declspecs_nosc_ts_sa_ea
  234               | declspecs_nosc_nots_nosa_noea
  235               | declspecs_nosc_nots_nosa_ea
  236               | declspecs_nosc_nots_sa_noea
  237               | declspecs_nosc_nots_sa_ea

  238 declspecs: declspecs_nosc_nots_nosa_noea
  239          | declspecs_nosc_nots_nosa_ea
  240          | declspecs_nosc_nots_sa_noea
  241          | declspecs_nosc_nots_sa_ea
  242          | declspecs_nosc_ts_nosa_noea
  243          | declspecs_nosc_ts_nosa_ea
  244          | declspecs_nosc_ts_sa_noea
  245          | declspecs_nosc_ts_sa_ea
  246          | declspecs_sc_nots_nosa_noea
  247          | declspecs_sc_nots_nosa_ea
  248          | declspecs_sc_nots_sa_noea
  249          | declspecs_sc_nots_sa_ea
  250          | declspecs_sc_ts_nosa_noea
  251          | declspecs_sc_ts_nosa_ea
  252          | declspecs_sc_ts_sa_noea
  253          | declspecs_sc_ts_sa_ea

  254 maybe_type_quals_attrs: /* empty */
  255                       | declspecs_nosc_nots

  256 typespec_nonattr: typespec_reserved_nonattr
  257                 | typespec_nonreserved_nonattr

  258 typespec_attr: typespec_reserved_attr

  259 typespec_reserved_nonattr: TYPESPEC
  260                          | structsp_nonattr

  261 typespec_reserved_attr: structsp_attr

  262 typespec_nonreserved_nonattr: TYPENAME
  263                             | CLASSNAME protocolrefs
  264                             | OBJECTNAME protocolrefs
  265                             | non_empty_protocolrefs
  266                             | typeof '(' expr ')'
  267                             | typeof '(' typename ')'

  268 initdecls: initdcl
  269          | initdecls ',' maybe_resetattrs initdcl

  270 notype_initdecls: notype_initdcl
  271                 | notype_initdecls ',' maybe_resetattrs notype_initdcl

  272 maybeasm: /* empty */
  273         | ASM_KEYWORD '(' STRING ')'

  274 initdcl: declarator maybeasm maybe_attribute '=' init
  275        | declarator maybeasm maybe_attribute

  276 notype_initdcl: notype_declarator maybeasm maybe_attribute '=' init
  277               | notype_declarator maybeasm maybe_attribute

  278 maybe_attribute: /* empty */
  279                | attributes

  280 attributes: attribute
  281           | attributes attribute

  282 attribute: ATTRIBUTE '(' '(' attribute_list ')' ')'

  283 attribute_list: attrib
  284               | attribute_list ',' attrib

  285 attrib: /* empty */
  286       | any_word
  287       | any_word '(' IDENTIFIER ')'
  288       | any_word '(' IDENTIFIER ',' nonnull_exprlist ')'
  289       | any_word '(' exprlist ')'

  290 any_word: identifier
  291         | scspec
  292         | TYPESPEC
  293         | TYPE_QUAL

  294 scspec: STATIC
  295       | SCSPEC

  296 init: expr_no_commas
  297     | '{' initlist_maybe_comma '}'
  298     | error

  299 initlist_maybe_comma: /* empty */
  300                     | initlist1 maybecomma

  301 initlist1: initelt
  302          | initlist1 ',' initelt

  303 initelt: designator_list '=' initval
  304        | designator initval
  305        | identifier ':' initval
  306        | initval

  307 initval: '{' initlist_maybe_comma '}'
  308        | expr_no_commas
  309        | error

  310 designator_list: designator
  311                | designator_list designator

  312 designator: '.' identifier
  313           | '[' expr_no_commas ELLIPSIS expr_no_commas ']'
  314           | '[' expr_no_commas ']'

  315 nested_function: declarator old_style_parm_decls save_filename save_lineno compstmt

  316 notype_nested_function: notype_declarator old_style_parm_decls save_filename save_lineno compstmt

  317 declarator: after_type_declarator
  318           | notype_declarator

  319 after_type_declarator: '(' maybe_attribute after_type_declarator ')'
  320                      | after_type_declarator '(' parmlist_or_identifiers
  321                      | after_type_declarator array_declarator
  322                      | '*' maybe_type_quals_attrs after_type_declarator
  323                      | TYPENAME
  324                      | OBJECTNAME

  325 parm_declarator: parm_declarator_starttypename
  326                | parm_declarator_nostarttypename

  327 parm_declarator_starttypename: parm_declarator_starttypename '(' parmlist_or_identifiers
  328                              | parm_declarator_starttypename array_declarator
  329                              | TYPENAME
  330                              | OBJECTNAME

  331 parm_declarator_nostarttypename: parm_declarator_nostarttypename '(' parmlist_or_identifiers
  332                                | parm_declarator_nostarttypename array_declarator
  333                                | '*' maybe_type_quals_attrs parm_declarator_starttypename
  334                                | '*' maybe_type_quals_attrs parm_declarator_nostarttypename
  335                                | '(' maybe_attribute parm_declarator_nostarttypename ')'

  336 notype_declarator: notype_declarator '(' parmlist_or_identifiers
  337                  | '(' maybe_attribute notype_declarator ')'
  338                  | '*' maybe_type_quals_attrs notype_declarator
  339                  | notype_declarator array_declarator
  340                  | IDENTIFIER

  341 struct_head: STRUCT
  342            | STRUCT attributes

  343 union_head: UNION
  344           | UNION attributes

  345 enum_head: ENUM
  346          | ENUM attributes

  347 structsp_attr: struct_head identifier '{' component_decl_list '}' maybe_attribute
  348              | struct_head '{' component_decl_list '}' maybe_attribute
  349              | union_head identifier '{' component_decl_list '}' maybe_attribute
  350              | union_head '{' component_decl_list '}' maybe_attribute
  351              | enum_head identifier '{' enumlist maybecomma_warn '}' maybe_attribute
  352              | enum_head '{' enumlist maybecomma_warn '}' maybe_attribute

  353 structsp_nonattr: struct_head identifier
  354                 | union_head identifier
  355                 | enum_head identifier

  356 maybecomma: /* empty */
  357           | ','

  358 maybecomma_warn: /* empty */
  359                | ','

  360 component_decl_list: component_decl_list2
  361                    | component_decl_list2 component_decl

  362 component_decl_list2: /* empty */
  363                     | component_decl_list2 component_decl ';'
  364                     | component_decl_list2 ';'
  365                     | DEFS '(' CLASSNAME ')'

  366 component_decl: declspecs_nosc_ts setspecs components
  367               | declspecs_nosc_ts setspecs save_filename save_lineno
  368               | declspecs_nosc_nots setspecs components_notype
  369               | declspecs_nosc_nots
  370               | error
  371               | extension component_decl

  372 components: component_declarator
  373           | components ',' maybe_resetattrs component_declarator

  374 components_notype: component_notype_declarator
  375                  | components_notype ',' maybe_resetattrs component_notype_declarator

  376 component_declarator: save_filename save_lineno declarator maybe_attribute
  377                     | save_filename save_lineno declarator ':' expr_no_commas maybe_attribute
  378                     | save_filename save_lineno ':' expr_no_commas maybe_attribute

  379 component_notype_declarator: save_filename save_lineno notype_declarator maybe_attribute
  380                            | save_filename save_lineno notype_declarator ':' expr_no_commas maybe_attribute
  381                            | save_filename save_lineno ':' expr_no_commas maybe_attribute

  382 enumlist: enumerator
  383         | enumlist ',' enumerator
  384         | error

  385 enumerator: identifier
  386           | identifier '=' expr_no_commas

  387 typename: declspecs_nosc absdcl

  388 absdcl: /* empty */
  389       | absdcl1

  390 absdcl_maybe_attribute: /* empty */
  391                       | absdcl1
  392                       | absdcl1_noea attributes

  393 absdcl1: absdcl1_ea
  394        | absdcl1_noea

  395 absdcl1_noea: direct_absdcl1
  396             | '*' maybe_type_quals_attrs absdcl1_noea

  397 absdcl1_ea: '*' maybe_type_quals_attrs
  398           | '*' maybe_type_quals_attrs absdcl1_ea

  399 direct_absdcl1: '(' maybe_attribute absdcl1 ')'
  400               | direct_absdcl1 '(' parmlist
  401               | direct_absdcl1 array_declarator
  402               | '(' parmlist
  403               | array_declarator

  404 array_declarator: '[' maybe_type_quals_attrs expr ']'
  405                 | '[' maybe_type_quals_attrs ']'
  406                 | '[' maybe_type_quals_attrs '*' ']'
  407                 | '[' STATIC maybe_type_quals_attrs expr ']'
  408                 | '[' declspecs_nosc_nots STATIC expr ']'

  409 stmts_and_decls: lineno_stmt_decl_or_labels_ending_stmt
  410                | lineno_stmt_decl_or_labels_ending_decl
  411                | lineno_stmt_decl_or_labels_ending_label
  412                | lineno_stmt_decl_or_labels_ending_error

  413 lineno_stmt_decl_or_labels_ending_stmt: lineno_stmt
  414                                       | lineno_stmt_decl_or_labels_ending_stmt lineno_stmt
  415                                       | lineno_stmt_decl_or_labels_ending_decl lineno_stmt
  416                                       | lineno_stmt_decl_or_labels_ending_label lineno_stmt
  417                                       | lineno_stmt_decl_or_labels_ending_error lineno_stmt

  418 lineno_stmt_decl_or_labels_ending_decl: lineno_decl
  419                                       | lineno_stmt_decl_or_labels_ending_stmt lineno_decl
  420                                       | lineno_stmt_decl_or_labels_ending_decl lineno_decl
  421                                       | lineno_stmt_decl_or_labels_ending_error lineno_decl

  422 lineno_stmt_decl_or_labels_ending_label: lineno_label
  423                                        | lineno_stmt_decl_or_labels_ending_stmt lineno_label
  424                                        | lineno_stmt_decl_or_labels_ending_decl lineno_label
  425                                        | lineno_stmt_decl_or_labels_ending_label lineno_label
  426                                        | lineno_stmt_decl_or_labels_ending_error lineno_label

  427 lineno_stmt_decl_or_labels_ending_error: errstmt
  428                                        | lineno_stmt_decl_or_labels errstmt

  429 lineno_stmt_decl_or_labels: lineno_stmt_decl_or_labels_ending_stmt
  430                           | lineno_stmt_decl_or_labels_ending_decl
  431                           | lineno_stmt_decl_or_labels_ending_label
  432                           | lineno_stmt_decl_or_labels_ending_error

  433 errstmt: error ';'

  434 pushlevel: /* empty */

  435 poplevel: /* empty */

  436 c99_block_start: /* empty */

  437 c99_block_end: /* empty */

  438 maybe_label_decls: /* empty */
  439                  | label_decls

  440 label_decls: label_decl
  441            | label_decls label_decl

  442 label_decl: LABEL identifiers_or_typenames ';'

  443 compstmt_or_error: compstmt
  444                  | error compstmt

  445 compstmt_start: '{'

  446 compstmt_nostart: '}'
  447                 | pushlevel maybe_label_decls compstmt_contents_nonempty '}' poplevel

  448 compstmt_contents_nonempty: stmts_and_decls
  449                           | error

  450 compstmt_primary_start: '(' '{'

  451 compstmt: compstmt_start compstmt_nostart

  452 simple_if: if_prefix c99_block_lineno_labeled_stmt
  453          | if_prefix error

  454 if_prefix: IF '(' expr ')'

  455 do_stmt_start: DO c99_block_lineno_labeled_stmt WHILE

  456 save_filename: /* empty */

  457 save_lineno: /* empty */

  458 lineno_labeled_stmt: lineno_stmt
  459                    | lineno_label lineno_labeled_stmt

  460 c99_block_lineno_labeled_stmt: c99_block_start lineno_labeled_stmt c99_block_end

  461 lineno_stmt: save_filename save_lineno stmt

  462 lineno_label: save_filename save_lineno label

  463 select_or_iter_stmt: simple_if ELSE c99_block_lineno_labeled_stmt
  464                    | simple_if
  465                    | simple_if ELSE error
  466                    | WHILE '(' expr ')' c99_block_lineno_labeled_stmt
  467                    | do_stmt_start '(' expr ')' ';'
  468                    | do_stmt_start error
  469                    | FOR '(' for_init_stmt xexpr ';' xexpr ')' c99_block_lineno_labeled_stmt
  470                    | SWITCH '(' expr ')' c99_block_lineno_labeled_stmt

  471 for_init_stmt: xexpr ';'
  472              | decl

  473 stmt: compstmt
  474     | expr ';'
  475     | c99_block_start select_or_iter_stmt c99_block_end
  476     | BREAK ';'
  477     | CONTINUE ';'
  478     | RETURN ';'
  479     | RETURN expr ';'
  480     | ASM_KEYWORD maybe_type_qual '(' expr ')' ';'
  481     | ASM_KEYWORD maybe_type_qual '(' expr ':' asm_operands ')' ';'
  482     | ASM_KEYWORD maybe_type_qual '(' expr ':' asm_operands ':' asm_operands ')' ';'
  483     | ASM_KEYWORD maybe_type_qual '(' expr ':' asm_operands ':' asm_operands ':' asm_clobbers ')' ';'
  484     | GOTO identifier ';'
  485     | GOTO '*' expr ';'
  486     | ';'

  487 label: CASE expr_no_commas ':'
  488      | CASE expr_no_commas ELLIPSIS expr_no_commas ':'
  489      | DEFAULT ':'
  490      | identifier save_filename save_lineno ':' maybe_attribute

  491 maybe_type_qual: /* empty */
  492                | TYPE_QUAL

  493 xexpr: /* empty */
  494      | expr

  495 asm_operands: /* empty */
  496             | nonnull_asm_operands

  497 nonnull_asm_operands: asm_operand
  498                     | nonnull_asm_operands ',' asm_operand

  499 asm_operand: STRING '(' expr ')'
  500            | '[' identifier ']' STRING '(' expr ')'

  501 asm_clobbers: STRING
  502             | asm_clobbers ',' STRING

  503 parmlist: maybe_attribute parmlist_1

  504 parmlist_1: parmlist_2 ')'
  505           | parms ';' maybe_attribute parmlist_1
  506           | error ')'

  507 parmlist_2: /* empty */
  508           | ELLIPSIS
  509           | parms
  510           | parms ',' ELLIPSIS

  511 parms: firstparm
  512      | parms ',' parm

  513 parm: declspecs_ts setspecs parm_declarator maybe_attribute
  514     | declspecs_ts setspecs notype_declarator maybe_attribute
  515     | declspecs_ts setspecs absdcl_maybe_attribute
  516     | declspecs_nots setspecs notype_declarator maybe_attribute
  517     | declspecs_nots setspecs absdcl_maybe_attribute

  518 firstparm: declspecs_ts_nosa setspecs_fp parm_declarator maybe_attribute
  519          | declspecs_ts_nosa setspecs_fp notype_declarator maybe_attribute
  520          | declspecs_ts_nosa setspecs_fp absdcl_maybe_attribute
  521          | declspecs_nots_nosa setspecs_fp notype_declarator maybe_attribute
  522          | declspecs_nots_nosa setspecs_fp absdcl_maybe_attribute

  523 setspecs_fp: setspecs

  524 parmlist_or_identifiers: maybe_attribute parmlist_or_identifiers_1

  525 parmlist_or_identifiers_1: parmlist_1
  526                          | identifiers ')'

  527 identifiers: IDENTIFIER
  528            | identifiers ',' IDENTIFIER

  529 identifiers_or_typenames: identifier
  530                         | identifiers_or_typenames ',' identifier

  531 extension: EXTENSION

  532 objcdef: classdef
  533        | classdecl
  534        | aliasdecl
  535        | protocoldef
  536        | methoddef
  537        | END

  538 identifier_list: identifier
  539                | identifier_list ',' identifier

  540 classdecl: CLASS identifier_list ';'

  541 aliasdecl: ALIAS identifier identifier ';'

  542 classdef: INTERFACE identifier protocolrefs '{' ivar_decl_list '}' methodprotolist END
  543         | INTERFACE identifier protocolrefs methodprotolist END
  544         | INTERFACE identifier ':' identifier protocolrefs '{' ivar_decl_list '}' methodprotolist END
  545         | INTERFACE identifier ':' identifier protocolrefs methodprotolist END
  546         | IMPLEMENTATION identifier '{' ivar_decl_list '}'
  547         | IMPLEMENTATION identifier
  548         | IMPLEMENTATION identifier ':' identifier '{' ivar_decl_list '}'
  549         | IMPLEMENTATION identifier ':' identifier
  550         | INTERFACE identifier '(' identifier ')' protocolrefs methodprotolist END
  551         | IMPLEMENTATION identifier '(' identifier ')'

  552 protocoldef: PROTOCOL identifier protocolrefs methodprotolist END
  553            | PROTOCOL identifier_list ';'

  554 protocolrefs: /* empty */
  555             | non_empty_protocolrefs

  556 non_empty_protocolrefs: ARITHCOMPARE identifier_list ARITHCOMPARE

  557 ivar_decl_list: ivar_decl_list visibility_spec ivar_decls
  558               | ivar_decls

  559 visibility_spec: PRIVATE
  560                | PROTECTED
  561                | PUBLIC

  562 ivar_decls: /* empty */
  563           | ivar_decls ivar_decl ';'
  564           | ivar_decls ';'

  565 ivar_decl: declspecs_nosc_ts setspecs ivars
  566          | declspecs_nosc_nots setspecs ivars
  567          | error

  568 ivars: /* empty */
  569      | ivar_declarator
  570      | ivars ',' maybe_resetattrs ivar_declarator

  571 ivar_declarator: declarator
  572                | declarator ':' expr_no_commas
  573                | ':' expr_no_commas

  574 methodtype: '+'
  575           | '-'

  576 methoddef: methodtype methoddecl optarglist compstmt_or_error

  577 methodprotolist: /* empty */
  578                | methodprotolist2

  579 methodprotolist2: methodproto
  580                 | datadef
  581                 | methodprotolist2 methodproto
  582                 | methodprotolist2 datadef

  583 semi_or_error: ';'
  584              | error

  585 methodproto: methodtype methoddecl semi_or_error

  586 methoddecl: '(' typename ')' unaryselector
  587           | unaryselector
  588           | '(' typename ')' keywordselector optparmlist
  589           | keywordselector optparmlist

  590 optarglist: /* empty */
  591           | ';' myxdecls

  592 myxdecls: /* empty */
  593         | mydecls

  594 mydecls: mydecl
  595        | errstmt
  596        | mydecls mydecl
  597        | mydecl errstmt

  598 mydecl: declspecs_ts setspecs myparms ';'
  599       | declspecs_ts ';'
  600       | declspecs_nots ';'

  601 myparms: myparm
  602        | myparms ',' myparm

  603 myparm: parm_declarator maybe_attribute
  604       | notype_declarator maybe_attribute
  605       | absdcl_maybe_attribute

  606 optparmlist: /* empty */
  607            | ',' ELLIPSIS
  608            | ',' parmlist_2

  609 unaryselector: selector

  610 keywordselector: keyworddecl
  611                | keywordselector keyworddecl

  612 selector: IDENTIFIER
  613         | TYPENAME
  614         | CLASSNAME
  615         | OBJECTNAME
  616         | reservedwords

  617 reservedwords: ENUM
  618              | STRUCT
  619              | UNION
  620              | IF
  621              | ELSE
  622              | WHILE
  623              | DO
  624              | FOR
  625              | SWITCH
  626              | CASE
  627              | DEFAULT
  628              | BREAK
  629              | CONTINUE
  630              | RETURN
  631              | GOTO
  632              | ASM_KEYWORD
  633              | SIZEOF
  634              | TYPEOF
  635              | ALIGNOF
  636              | TYPESPEC
  637              | TYPE_QUAL

  638 keyworddecl: selector ':' '(' typename ')' identifier
  639            | selector ':' identifier
  640            | ':' '(' typename ')' identifier
  641            | ':' identifier

  642 messageargs: selector
  643            | keywordarglist

  644 keywordarglist: keywordarg
  645               | keywordarglist keywordarg

  646 keywordexpr: nonnull_exprlist

  647 keywordarg: selector ':' keywordexpr
  648           | ':' keywordexpr

  649 receiver: expr
  650         | CLASSNAME

  651 objcmessageexpr: '[' receiver messageargs ']'

  652 selectorarg: selector
  653            | keywordnamelist

  654 keywordnamelist: keywordname
  655                | keywordnamelist keywordname

  656 keywordname: selector ':'
  657            | ':'

  658 objcselectorexpr: SELECTOR '(' selectorarg ')'

  659 objcprotocolexpr: PROTOCOL '(' identifier ')'

  660 objcencodeexpr: ENCODE '(' typename ')'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 34
'%' (37) 61
'&' (38) 28 66
'(' (40) 9 46 48 55 79 80 81 84 85 86 87 266 267 273 282 287 288 289
    319 320 327 331 335 336 337 365 399 400 402 450 454 466 467 469
    470 480 481 482 483 499 500 550 551 586 588 638 640 658 659 660
')' (41) 9 46 48 55 79 80 81 82 83 84 85 86 87 266 267 273 282 287
    288 289 319 335 337 365 399 454 466 467 469 470 480 481 482 483
    499 500 504 506 526 550 551 586 588 638 640 658 659 660
'*' (42) 41 59 322 333 334 338 396 397 398 406 485
'+' (43) 30 57 574
',' (44) 39 85 86 87 269 271 284 288 302 357 359 373 375 383 498 502
    510 512 528 530 539 570 602 607 608
'-' (45) 29 58 575
'.' (46) 89 312
'/' (47) 60
':' (58) 71 72 305 377 378 380 381 481 482 483 487 488 489 490 544
    545 548 549 572 573 638 639 640 641 647 648 656 657
';' (59) 9 11 12 13 14 15 17 108 109 110 111 115 116 119 363 364 433
    442 467 469 471 474 476 477 478 479 480 481 482 483 484 485 486
    505 540 541 553 563 564 583 591 598 599 600
'=' (61) 73 274 276 303 386
'?' (63) 71 72
'@' (64) 98 99
'[' (91) 88 313 314 404 405 406 407 408 500 651
']' (93) 88 313 314 404 405 406 407 408 500 651
'^' (94) 68
'{' (123) 79 297 307 347 348 349 350 351 352 445 450 542 544 546 548
'|' (124) 67
'}' (125) 16 79 297 307 347 348 349 350 351 352 446 447 542 544 546
    548
'~' (126) 33
error (256) 15 16 19 21 23 81 83 298 309 370 384 433 444 449 453 465
    468 506 567 584
IDENTIFIER (258) 24 75 287 288 340 527 528 612
TYPENAME (259) 25 262 323 329 613
SCSPEC (260) 295
STATIC (261) 294 407 408
TYPESPEC (262) 259 292 636
TYPE_QUAL (263) 121 122 123 125 126 130 131 142 143 154 155 161 162
    168 169 183 184 293 492 637
CONSTANT (264) 76
STRING (265) 77 98 99 273 499 500 501 502
ELLIPSIS (266) 313 488 508 510 607
SIZEOF (267) 51 633
ENUM (268) 345 346 617
STRUCT (269) 341 342 618
UNION (270) 343 344 619
IF (271) 454 620
ELSE (272) 463 465 621
WHILE (273) 455 466 622
DO (274) 455 623
FOR (275) 469 624
SWITCH (276) 470 625
CASE (277) 487 488 626
DEFAULT (278) 489 627
BREAK (279) 476 628
CONTINUE (280) 477 629
RETURN (281) 478 479 630
GOTO (282) 484 485 631
ASM_KEYWORD (283) 9 273 480 481 482 483 632
TYPEOF (284) 53 634
ALIGNOF (285) 52 635
ATTRIBUTE (286) 282
EXTENSION (287) 531
LABEL (288) 442
REALPART (289) 49
IMAGPART (290) 50
VA_ARG (291) 85
CHOOSE_EXPR (292) 86
TYPES_COMPATIBLE_P (293) 87
PTR_VALUE (294)
PTR_BASE (295)
PTR_EXTENT (296)
STRING_FUNC_NAME (297)
VAR_FUNC_NAME (298) 78
ASSIGN (299) 74
OROR (300) 70
ANDAND (301) 44 69
EQCOMPARE (302) 65
ARITHCOMPARE (303) 64 556
RSHIFT (304) 63
LSHIFT (305) 62
MINUSMINUS (306) 32 92
PLUSPLUS (307) 31 91
UNARY (308)
HYPERUNARY (309)
POINTSAT (310) 90
INTERFACE (311) 542 543 544 545 550
IMPLEMENTATION (312) 546 547 548 549 551
END (313) 537 542 543 544 545 550 552
SELECTOR (314) 658
DEFS (315) 365
ENCODE (316) 660
CLASSNAME (317) 27 263 365 614 650
PUBLIC (318) 561
PRIVATE (319) 559
PROTECTED (320) 560
PROTOCOL (321) 552 553 659
OBJECTNAME (322) 26 264 324 330 615
CLASS (323) 540
ALIAS (324) 541


Nonterminals, with rules where they appear

$accept (93)
    on left: 0
program (94)
    on left: 1 2, on right: 0
extdefs (95)
    on left: 3 4, on right: 2 4
extdef (96)
    on left: 5, on right: 3 4 10
extdef_1 (97)
    on left: 6 7 8 9 10, on right: 5
datadef (98)
    on left: 11 12 13 14 15 16 17, on right: 7 580 582
fndef (99)
    on left: 18 19 20 21 22 23, on right: 6
identifier (100)
    on left: 24 25 26 27, on right: 44 89 90 290 305 312 347 349 351
    353 354 355 385 386 484 490 500 529 530 538 539 541 542 543 544
    545 546 547 548 549 550 551 552 638 639 640 641 659
unop (101)
    on left: 28 29 30 31 32 33 34, on right: 43
expr (102)
    on left: 35, on right: 9 71 80 88 266 404 407 408 454 466 467 470
    474 479 480 481 482 483 485 494 499 500 649
exprlist (103)
    on left: 36 37, on right: 84 289
nonnull_exprlist (104)
    on left: 38 39, on right: 35 37 39 288 646
unary_expr (105)
    on left: 40 41 42 43 44 45 46 47 48 49 50, on right: 45 47 54
sizeof (106)
    on left: 51, on right: 45 46
alignof (107)
    on left: 52, on right: 47 48
typeof (108)
    on left: 53, on right: 266 267
cast_expr (109)
    on left: 54 55, on right: 41 42 43 49 50 55 56
expr_no_commas (110)
    on left: 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73
    74, on right: 38 39 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71
    72 73 74 85 86 296 308 313 314 377 378 380 381 386 487 488 572
    573
primary (111)
    on left: 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92
    93 94 95 96 97, on right: 40 84 88 89 90 91 92
objc_string (112)
    on left: 98 99, on right: 97 99
old_style_parm_decls (113)
    on left: 100, on right: 18 20 22 315 316
old_style_parm_decls_1 (114)
    on left: 101 102, on right: 100
lineno_datadecl (115)
    on left: 103, on right: 104 106 107
datadecls (116)
    on left: 104 105 106 107, on right: 102 106
datadecl (117)
    on left: 108 109 110 111, on right: 103
lineno_decl (118)
    on left: 112, on right: 418 419 420 421
setspecs (119)
    on left: 113, on right: 11 12 13 18 19 20 21 22 23 108 109 115
    116 117 118 366 367 368 513 514 515 516 517 523 565 566 598
maybe_resetattrs (120)
    on left: 114, on right: 269 271 373 375 570
decl (121)
    on left: 115 116 117 118 119 120, on right: 112 120 472
declspecs_nosc_nots_nosa_noea (122)
    on left: 121 122 123, on right: 122 124 134 140 156 206 218 226
    234 238
declspecs_nosc_nots_nosa_ea (123)
    on left: 124, on right: 123 135 141 157 207 219 227 235 239
declspecs_nosc_nots_sa_noea (124)
    on left: 125 126, on right: 125 128 146 151 163 208 228 236 240
declspecs_nosc_nots_sa_ea (125)
    on left: 127 128, on right: 126 147 152 164 209 229 237 241
declspecs_nosc_ts_nosa_noea (126)
    on left: 129 130 131 132 133 134 135, on right: 130 132 137 138
    174 198 214 222 230 242
declspecs_nosc_ts_nosa_ea (127)
    on left: 136 137 138 139 140 141, on right: 131 133 139 175 199
    215 223 231 243
declspecs_nosc_ts_sa_noea (128)
    on left: 142 143 144 145 146 147, on right: 142 144 148 149 189
    200 224 232 244
declspecs_nosc_ts_sa_ea (129)
    on left: 148 149 150 151 152, on right: 143 145 150 190 201 225
    233 245
declspecs_sc_nots_nosa_noea (130)
    on left: 153 154 155 156 157 158 159, on right: 154 158 160 172
    181 210 220 246
declspecs_sc_nots_nosa_ea (131)
    on left: 160, on right: 155 159 173 182 211 221 247
declspecs_sc_nots_sa_noea (132)
    on left: 161 162 163 164 165 166, on right: 161 165 167 187 196
    212 248
declspecs_sc_nots_sa_ea (133)
    on left: 167, on right: 162 166 188 197 213 249
declspecs_sc_ts_nosa_noea (134)
    on left: 168 169 170 171 172 173 174 175 176 177, on right: 168
    170 176 178 179 202 216 250
declspecs_sc_ts_nosa_ea (135)
    on left: 178 179 180 181 182, on right: 169 171 177 180 203 217
    251
declspecs_sc_ts_sa_noea (136)
    on left: 183 184 185 186 187 188 189 190 191 192, on right: 183
    185 191 193 194 204 252
declspecs_sc_ts_sa_ea (137)
    on left: 193 194 195 196 197, on right: 184 186 192 195 205 253
declspecs_ts (138)
    on left: 198 199 200 201 202 203 204 205, on right: 13 18 19 115
    117 513 514 515 598 599
declspecs_nots (139)
    on left: 206 207 208 209 210 211 212 213, on right: 12 20 21 116
    118 516 517 600
declspecs_ts_nosa (140)
    on left: 214 215 216 217, on right: 108 110 518 519 520
declspecs_nots_nosa (141)
    on left: 218 219 220 221, on right: 109 111 521 522
declspecs_nosc_ts (142)
    on left: 222 223 224 225, on right: 366 367 565
declspecs_nosc_nots (143)
    on left: 226 227 228 229, on right: 255 368 369 408 566
declspecs_nosc (144)
    on left: 230 231 232 233 234 235 236 237, on right: 387
declspecs (145)
    on left: 238 239 240 241 242 243 244 245 246 247 248 249 250 251
    252 253, on right: 14 119
maybe_type_quals_attrs (146)
    on left: 254 255, on right: 322 333 334 338 396 397 398 404 405
    406 407
typespec_nonattr (147)
    on left: 256 257, on right: 129 134 135 146 147 172 173 187 188
typespec_attr (148)
    on left: 258, on right: 136 140 141 151 152 181 182 196 197
typespec_reserved_nonattr (149)
    on left: 259 260, on right: 132 133 144 145 170 171 185 186 256
typespec_reserved_attr (150)
    on left: 261, on right: 138 139 149 150 179 180 194 195 258
typespec_nonreserved_nonattr (151)
    on left: 262 263 264 265 266 267, on right: 257
initdecls (152)
    on left: 268 269, on right: 13 108 115 269
notype_initdecls (153)
    on left: 270 271, on right: 11 12 109 116 271
maybeasm (154)
    on left: 272 273, on right: 274 275 276 277
initdcl (155)
    on left: 274 275, on right: 268 269
notype_initdcl (156)
    on left: 276 277, on right: 270 271
maybe_attribute (157)
    on left: 278 279, on right: 114 274 275 276 277 319 335 337 347
    348 349 350 351 352 376 377 378 379 380 381 399 490 503 505 513
    514 516 518 519 521 524 603 604
attributes (158)
    on left: 280 281, on right: 124 127 128 137 148 160 167 178 193
    279 281 342 344 346 392
attribute (159)
    on left: 282, on right: 280 281
attribute_list (160)
    on left: 283 284, on right: 282 284
attrib (161)
    on left: 285 286 287 288 289, on right: 283 284
any_word (162)
    on left: 290 291 292 293, on right: 286 287 288 289
scspec (163)
    on left: 294 295, on right: 153 156 157 158 159 163 164 165 166
    174 175 176 177 189 190 191 192 291
init (164)
    on left: 296 297 298, on right: 274 276
initlist_maybe_comma (165)
    on left: 299 300, on right: 79 297 307
initlist1 (166)
    on left: 301 302, on right: 300 302
initelt (167)
    on left: 303 304 305 306, on right: 301 302
initval (168)
    on left: 307 308 309, on right: 303 304 305 306
designator_list (169)
    on left: 310 311, on right: 303 311
designator (170)
    on left: 312 313 314, on right: 304 310 311
nested_function (171)
    on left: 315, on right: 117
notype_nested_function (172)
    on left: 316, on right: 118
declarator (173)
    on left: 317 318, on right: 18 19 274 275 315 376 377 571 572
after_type_declarator (174)
    on left: 319 320 321 322 323 324, on right: 317 319 320 321 322
parm_declarator (175)
    on left: 325 326, on right: 513 518 603
parm_declarator_starttypename (176)
    on left: 327 328 329 330, on right: 325 327 328 333
parm_declarator_nostarttypename (177)
    on left: 331 332 333 334 335, on right: 326 331 332 334 335
notype_declarator (178)
    on left: 336 337 338 339 340, on right: 20 21 22 23 276 277 316
    318 336 337 338 339 379 380 514 516 519 521 604
struct_head (179)
    on left: 341 342, on right: 347 348 353
union_head (180)
    on left: 343 344, on right: 349 350 354
enum_head (181)
    on left: 345 346, on right: 351 352 355
structsp_attr (182)
    on left: 347 348 349 350 351 352, on right: 261
structsp_nonattr (183)
    on left: 353 354 355, on right: 260
maybecomma (184)
    on left: 356 357, on right: 300
maybecomma_warn (185)
    on left: 358 359, on right: 351 352
component_decl_list (186)
    on left: 360 361, on right: 347 348 349 350
component_decl_list2 (187)
    on left: 362 363 364 365, on right: 360 361 363 364
component_decl (188)
    on left: 366 367 368 369 370 371, on right: 361 363 371
components (189)
    on left: 372 373, on right: 366 373
components_notype (190)
    on left: 374 375, on right: 368 375
component_declarator (191)
    on left: 376 377 378, on right: 372 373
component_notype_declarator (192)
    on left: 379 380 381, on right: 374 375
enumlist (193)
    on left: 382 383 384, on right: 351 352 383
enumerator (194)
    on left: 385 386, on right: 382 383
typename (195)
    on left: 387, on right: 46 48 55 79 85 87 267 586 588 638 640 660
absdcl (196)
    on left: 388 389, on right: 387
absdcl_maybe_attribute (197)
    on left: 390 391 392, on right: 515 517 520 522 605
absdcl1 (198)
    on left: 393 394, on right: 389 391 399
absdcl1_noea (199)
    on left: 395 396, on right: 392 394 396
absdcl1_ea (200)
    on left: 397 398, on right: 393 398
direct_absdcl1 (201)
    on left: 399 400 401 402 403, on right: 395 400 401
array_declarator (202)
    on left: 404 405 406 407 408, on right: 321 328 332 339 401 403
stmts_and_decls (203)
    on left: 409 410 411 412, on right: 448
lineno_stmt_decl_or_labels_ending_stmt (204)
    on left: 413 414 415 416 417, on right: 409 414 419 423 429
lineno_stmt_decl_or_labels_ending_decl (205)
    on left: 418 419 420 421, on right: 410 415 420 424 430
lineno_stmt_decl_or_labels_ending_label (206)
    on left: 422 423 424 425 426, on right: 411 416 425 431
lineno_stmt_decl_or_labels_ending_error (207)
    on left: 427 428, on right: 412 417 421 426 432
lineno_stmt_decl_or_labels (208)
    on left: 429 430 431 432, on right: 428
errstmt (209)
    on left: 433, on right: 105 107 427 428 595 597
pushlevel (210)
    on left: 434, on right: 447
poplevel (211)
    on left: 435, on right: 447
c99_block_start (212)
    on left: 436, on right: 460 475
c99_block_end (213)
    on left: 437, on right: 460 475
maybe_label_decls (214)
    on left: 438 439, on right: 447
label_decls (215)
    on left: 440 441, on right: 439 441
label_decl (216)
    on left: 442, on right: 440 441
compstmt_or_error (217)
    on left: 443 444, on right: 18 20 22 576
compstmt_start (218)
    on left: 445, on right: 451
compstmt_nostart (219)
    on left: 446 447, on right: 82 451
compstmt_contents_nonempty (220)
    on left: 448 449, on right: 447
compstmt_primary_start (221)
    on left: 450, on right: 82 83
compstmt (222)
    on left: 451, on right: 315 316 443 444 473
simple_if (223)
    on left: 452 453, on right: 463 464 465
if_prefix (224)
    on left: 454, on right: 452 453
do_stmt_start (225)
    on left: 455, on right: 467 468
save_filename (226)
    on left: 456, on right: 18 20 22 103 112 315 316 367 376 377 378
    379 380 381 461 462 490
save_lineno (227)
    on left: 457, on right: 18 20 22 103 112 315 316 367 376 377 378
    379 380 381 461 462 490
lineno_labeled_stmt (228)
    on left: 458 459, on right: 459 460
c99_block_lineno_labeled_stmt (229)
    on left: 460, on right: 452 455 463 466 469 470
lineno_stmt (230)
    on left: 461, on right: 413 414 415 416 417 458
lineno_label (231)
    on left: 462, on right: 422 423 424 425 426 459
select_or_iter_stmt (232)
    on left: 463 464 465 466 467 468 469 470, on right: 475
for_init_stmt (233)
    on left: 471 472, on right: 469
stmt (234)
    on left: 473 474 475 476 477 478 479 480 481 482 483 484 485 486,
    on right: 461
label (235)
    on left: 487 488 489 490, on right: 462
maybe_type_qual (236)
    on left: 491 492, on right: 480 481 482 483
xexpr (237)
    on left: 493 494, on right: 469 471
asm_operands (238)
    on left: 495 496, on right: 481 482 483
nonnull_asm_operands (239)
    on left: 497 498, on right: 496 498
asm_operand (240)
    on left: 499 500, on right: 497 498
asm_clobbers (241)
    on left: 501 502, on right: 483 502
parmlist (242)
    on left: 503, on right: 400 402
parmlist_1 (243)
    on left: 504 505 506, on right: 503 505 525
parmlist_2 (244)
    on left: 507 508 509 510, on right: 504 608
parms (245)
    on left: 511 512, on right: 505 509 510 512
parm (246)
    on left: 513 514 515 516 517, on right: 512
firstparm (247)
    on left: 518 519 520 521 522, on right: 511
setspecs_fp (248)
    on left: 523, on right: 518 519 520 521 522
parmlist_or_identifiers (249)
    on left: 524, on right: 320 327 331 336
parmlist_or_identifiers_1 (250)
    on left: 525 526, on right: 524
identifiers (251)
    on left: 527 528, on right: 526 528
identifiers_or_typenames (252)
    on left: 529 530, on right: 442 530
extension (253)
    on left: 531, on right: 10 42 120 371
objcdef (254)
    on left: 532 533 534 535 536 537, on right: 8
identifier_list (255)
    on left: 538 539, on right: 539 540 553 556
classdecl (256)
    on left: 540, on right: 533
aliasdecl (257)
    on left: 541, on right: 534
classdef (258)
    on left: 542 543 544 545 546 547 548 549 550 551, on right: 532
protocoldef (259)
    on left: 552 553, on right: 535
protocolrefs (260)
    on left: 554 555, on right: 263 264 542 543 544 545 550 552
non_empty_protocolrefs (261)
    on left: 556, on right: 265 555
ivar_decl_list (262)
    on left: 557 558, on right: 542 544 546 548 557
visibility_spec (263)
    on left: 559 560 561, on right: 557
ivar_decls (264)
    on left: 562 563 564, on right: 557 558 563 564
ivar_decl (265)
    on left: 565 566 567, on right: 563
ivars (266)
    on left: 568 569 570, on right: 565 566 570
ivar_declarator (267)
    on left: 571 572 573, on right: 569 570
methodtype (268)
    on left: 574 575, on right: 576 585
methoddef (269)
    on left: 576, on right: 536
methodprotolist (270)
    on left: 577 578, on right: 542 543 544 545 550 552
methodprotolist2 (271)
    on left: 579 580 581 582, on right: 578 581 582
semi_or_error (272)
    on left: 583 584, on right: 585
methodproto (273)
    on left: 585, on right: 579 581
methoddecl (274)
    on left: 586 587 588 589, on right: 576 585
optarglist (275)
    on left: 590 591, on right: 576
myxdecls (276)
    on left: 592 593, on right: 591
mydecls (277)
    on left: 594 595 596 597, on right: 593 596
mydecl (278)
    on left: 598 599 600, on right: 594 596 597
myparms (279)
    on left: 601 602, on right: 598 602
myparm (280)
    on left: 603 604 605, on right: 601 602
optparmlist (281)
    on left: 606 607 608, on right: 588 589
unaryselector (282)
    on left: 609, on right: 586 587
keywordselector (283)
    on left: 610 611, on right: 588 589 611
selector (284)
    on left: 612 613 614 615 616, on right: 609 638 639 642 647 652
    656
reservedwords (285)
    on left: 617 618 619 620 621 622 623 624 625 626 627 628 629 630
    631 632 633 634 635 636 637, on right: 616
keyworddecl (286)
    on left: 638 639 640 641, on right: 610 611
messageargs (287)
    on left: 642 643, on right: 651
keywordarglist (288)
    on left: 644 645, on right: 643 645
keywordexpr (289)
    on left: 646, on right: 647 648
keywordarg (290)
    on left: 647 648, on right: 644 645
receiver (291)
    on left: 649 650, on right: 651
objcmessageexpr (292)
    on left: 651, on right: 93
selectorarg (293)
    on left: 652 653, on right: 658
keywordnamelist (294)
    on left: 654 655, on right: 653 655
keywordname (295)
    on left: 656 657, on right: 654 655
objcselectorexpr (296)
    on left: 658, on right: 94
objcprotocolexpr (297)
    on left: 659, on right: 95
objcencodeexpr (298)
    on left: 660, on right: 96


state 0

    0 $accept: . program $end

    error           shift, and go to state 1
    TYPENAME        shift, and go to state 2
    SCSPEC          shift, and go to state 3
    STATIC          shift, and go to state 4
    TYPESPEC        shift, and go to state 5
    TYPE_QUAL       shift, and go to state 6
    ENUM            shift, and go to state 7
    STRUCT          shift, and go to state 8
    UNION           shift, and go to state 9
    ASM_KEYWORD     shift, and go to state 10
    TYPEOF          shift, and go to state 11
    ATTRIBUTE       shift, and go to state 12
    EXTENSION       shift, and go to state 13
    ARITHCOMPARE    shift, and go to state 14
    '+'             shift, and go to state 15
    '-'             shift, and go to state 16
    INTERFACE       shift, and go to state 17
    IMPLEMENTATION  shift, and go to state 18
    END             shift, and go to state 19
    CLASSNAME       shift, and go to state 20
    PROTOCOL        shift, and go to state 21
    OBJECTNAME      shift, and go to state 22
    CLASS           shift, and go to state 23
    ALIAS           shift, and go to state 24
    ';'             shift, and go to state 25

    $end        reduce using rule 1 (program)
    IDENTIFIER  reduce using rule 113 (setspecs)
    '*'         reduce using rule 113 (setspecs)
    '('         reduce using rule 113 (setspecs)

    program                        go to state 26
    extdefs                        go to state 27
    extdef                         go to state 28
    extdef_1                       go to state 29
    datadef                        go to state 30
    fndef                          go to state 31
    typeof                         go to state 32
    setspecs                       go to state 33
    declspecs_nosc_nots_nosa_noea  go to state 34
    declspecs_nosc_nots_nosa_ea    go to state 35
    declspecs_nosc_nots_sa_noea    go to state 36
    declspecs_nosc_nots_sa_ea      go to state 37
    declspecs_nosc_ts_nosa_noea    go to state 38
    declspecs_nosc_ts_nosa_ea      go to state 39
    declspecs_nosc_ts_sa_noea      go to state 40
    declspecs_nosc_ts_sa_ea        go to state 41
    declspecs_sc_nots_nosa_noea    go to state 42
    declspecs_sc_nots_nosa_ea      go to state 43
    declspecs_sc_nots_sa_noea      go to state 44
    declspecs_sc_nots_sa_ea        go to state 45
    declspecs_sc_ts_nosa_noea      go to state 46
    declspecs_sc_ts_nosa_ea        go to state 47
    declspecs_sc_ts_sa_noea        go to state 48
    declspecs_sc_ts_sa_ea          go to state 49
    declspecs_ts                   go to state 50
    declspecs_nots                 go to state 51
    declspecs                      go to state 52
    typespec_nonattr               go to state 53
    typespec_attr                  go to state 54
    typespec_reserved_nonattr      go to state 55
    typespec_reserved_attr         go to state 56
    typespec_nonreserved_nonattr   go to state 57
    attributes                     go to state 58
    attribute                      go to state 59
    scspec                         go to state 60
    struct_head                    go to state 61
    union_head                     go to state 62
    enum_head                      go to state 63
    structsp_attr                  go to state 64
    structsp_nonattr               go to state 65
    extension                      go to state 66
    objcdef                        go to state 67
    classdecl                      go to state 68
    aliasdecl                      go to state 69
    classdef                       go to state 70
    protocoldef                    go to state 71
    non_empty_protocolrefs         go to state 72
    methodtype                     go to state 73
    methoddef                      go to state 74


state 1

   15 datadef: error . ';'
   16        | error . '}'

    ';'  shift, and go to state 75
    '}'  shift, and go to state 76


state 2

  262 typespec_nonreserved_nonattr: TYPENAME .

    $default  reduce using rule 262 (typespec_nonreserved_nonattr)


state 3

  295 scspec: SCSPEC .

    $default  reduce using rule 295 (scspec)


state 4

  294 scspec: STATIC .

    $default  reduce using rule 294 (scspec)


state 5

  259 typespec_reserved_nonattr: TYPESPEC .

    $default  reduce using rule 259 (typespec_reserved_nonattr)


state 6

  121 declspecs_nosc_nots_nosa_noea: TYPE_QUAL .

    $default  reduce using rule 121 (declspecs_nosc_nots_nosa_noea)


state 7

  345 enum_head: ENUM .
  346          | ENUM . attributes

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 345 (enum_head)

    attributes  go to state 77
    attribute   go to state 59


state 8

  341 struct_head: STRUCT .
  342            | STRUCT . attributes

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 341 (struct_head)

    attributes  go to state 78
    attribute   go to state 59


state 9

  343 union_head: UNION .
  344           | UNION . attributes

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 343 (union_head)

    attributes  go to state 79
    attribute   go to state 59


state 10

    9 extdef_1: ASM_KEYWORD . '(' expr ')' ';'

    '('  shift, and go to state 80


state 11

   53 typeof: TYPEOF .

    $default  reduce using rule 53 (typeof)


state 12

  282 attribute: ATTRIBUTE . '(' '(' attribute_list ')' ')'

    '('  shift, and go to state 81


state 13

  531 extension: EXTENSION .

    $default  reduce using rule 531 (extension)


state 14

  556 non_empty_protocolrefs: ARITHCOMPARE . identifier_list ARITHCOMPARE

    IDENTIFIER  shift, and go to state 82
    TYPENAME    shift, and go to state 83
    CLASSNAME   shift, and go to state 84
    OBJECTNAME  shift, and go to state 85

    identifier       go to state 86
    identifier_list  go to state 87


state 15

  574 methodtype: '+' .

    $default  reduce using rule 574 (methodtype)


state 16

  575 methodtype: '-' .

    $default  reduce using rule 575 (methodtype)


state 17

  542 classdef: INTERFACE . identifier protocolrefs '{' ivar_decl_list '}' methodprotolist END
  543         | INTERFACE . identifier protocolrefs methodprotolist END
  544         | INTERFACE . identifier ':' identifier protocolrefs '{' ivar_decl_list '}' methodprotolist END
  545         | INTERFACE . identifier ':' identifier protocolrefs methodprotolist END
  550         | INTERFACE . identifier '(' identifier ')' protocolrefs methodprotolist END

    IDENTIFIER  shift, and go to state 82
    TYPENAME    shift, and go to state 83
    CLASSNAME   shift, and go to state 84
    OBJECTNAME  shift, and go to state 85

    identifier  go to state 88


state 18

  546 classdef: IMPLEMENTATION . identifier '{' ivar_decl_list '}'
  547         | IMPLEMENTATION . identifier
  548         | IMPLEMENTATION . identifier ':' identifier '{' ivar_decl_list '}'
  549         | IMPLEMENTATION . identifier ':' identifier
  551         | IMPLEMENTATION . identifier '(' identifier ')'

    IDENTIFIER  shift, and go to state 82
    TYPENAME    shift, and go to state 83
    CLASSNAME   shift, and go to state 84
    OBJECTNAME  shift, and go to state 85

    identifier  go to state 89


state 19

  537 objcdef: END .

    $default  reduce using rule 537 (objcdef)


state 20

  263 typespec_nonreserved_nonattr: CLASSNAME . protocolrefs

    ARITHCOMPARE  shift, and go to state 14

    $default  reduce using rule 554 (protocolrefs)

    protocolrefs            go to state 90
    non_empty_protocolrefs  go to state 91


state 21

  552 protocoldef: PROTOCOL . identifier protocolrefs methodprotolist END
  553            | PROTOCOL . identifier_list ';'

    IDENTIFIER  shift, and go to state 82
    TYPENAME    shift, and go to state 83
    CLASSNAME   shift, and go to state 84
    OBJECTNAME  shift, and go to state 85

    identifier       go to state 92
    identifier_list  go to state 93


state 22

  264 typespec_nonreserved_nonattr: OBJECTNAME . protocolrefs

    ARITHCOMPARE  shift, and go to state 14

    $default  reduce using rule 554 (protocolrefs)

    protocolrefs            go to state 94
    non_empty_protocolrefs  go to state 91


state 23

  540 classdecl: CLASS . identifier_list ';'

    IDENTIFIER  shift, and go to state 82
    TYPENAME    shift, and go to state 83
    CLASSNAME   shift, and go to state 84
    OBJECTNAME  shift, and go to state 85

    identifier       go to state 86
    identifier_list  go to state 95


state 24

  541 aliasdecl: ALIAS . identifier identifier ';'

    IDENTIFIER  shift, and go to state 82
    TYPENAME    shift, and go to state 83
    CLASSNAME   shift, and go to state 84
    OBJECTNAME  shift, and go to state 85

    identifier  go to state 96


state 25

   17 datadef: ';' .

    $default  reduce using rule 17 (datadef)


state 26

    0 $accept: program . $end

    $end  shift, and go to state 97


state 27

    2 program: extdefs .
    4 extdefs: extdefs . extdef

    error           shift, and go to state 1
    TYPENAME        shift, and go to state 2
    SCSPEC          shift, and go to state 3
    STATIC          shift, and go to state 4
    TYPESPEC        shift, and go to state 5
    TYPE_QUAL       shift, and go to state 6
    ENUM            shift, and go to state 7
    STRUCT          shift, and go to state 8
    UNION           shift, and go to state 9
    ASM_KEYWORD     shift, and go to state 10
    TYPEOF          shift, and go to state 11
    ATTRIBUTE       shift, and go to state 12
    EXTENSION       shift, and go to state 13
    ARITHCOMPARE    shift, and go to state 14
    '+'             shift, and go to state 15
    '-'             shift, and go to state 16
    INTERFACE       shift, and go to state 17
    IMPLEMENTATION  shift, and go to state 18
    END             shift, and go to state 19
    CLASSNAME       shift, and go to state 20
    PROTOCOL        shift, and go to state 21
    OBJECTNAME      shift, and go to state 22
    CLASS           shift, and go to state 23
    ALIAS           shift, and go to state 24
    ';'             shift, and go to state 25

    $end        reduce using rule 2 (program)
    IDENTIFIER  reduce using rule 113 (setspecs)
    '*'         reduce using rule 113 (setspecs)
    '('         reduce using rule 113 (setspecs)

    extdef                         go to state 98
    extdef_1                       go to state 29
    datadef                        go to state 30
    fndef                          go to state 31
    typeof                         go to state 32
    setspecs                       go to state 33
    declspecs_nosc_nots_nosa_noea  go to state 34
    declspecs_nosc_nots_nosa_ea    go to state 35
    declspecs_nosc_nots_sa_noea    go to state 36
    declspecs_nosc_nots_sa_ea      go to state 37
    declspecs_nosc_ts_nosa_noea    go to state 38
    declspecs_nosc_ts_nosa_ea      go to state 39
    declspecs_nosc_ts_sa_noea      go to state 40
    declspecs_nosc_ts_sa_ea        go to state 41
    declspecs_sc_nots_nosa_noea    go to state 42
    declspecs_sc_nots_nosa_ea      go to state 43
    declspecs_sc_nots_sa_noea      go to state 44
    declspecs_sc_nots_sa_ea        go to state 45
    declspecs_sc_ts_nosa_noea      go to state 46
    declspecs_sc_ts_nosa_ea        go to state 47
    declspecs_sc_ts_sa_noea        go to state 48
    declspecs_sc_ts_sa_ea          go to state 49
    declspecs_ts                   go to state 50
    declspecs_nots                 go to state 51
    declspecs                      go to state 52
    typespec_nonattr               go to state 53
    typespec_attr                  go to state 54
    typespec_reserved_nonattr      go to state 55
    typespec_reserved_attr         go to state 56
    typespec_nonreserved_nonattr   go to state 57
    attributes                     go to state 58
    attribute                      go to state 59
    scspec                         go to state 60
    struct_head                    go to state 61
    union_head                     go to state 62
    enum_head                      go to state 63
    structsp_attr                  go to state 64
    structsp_nonattr               go to state 65
    extension                      go to state 66
    objcdef                        go to state 67
    classdecl                      go to state 68
    aliasdecl                      go to state 69
    classdef                       go to state 70
    protocoldef                    go to state 71
    non_empty_protocolrefs         go to state 72
    methodtype                     go to state 73
    methoddef                      go to state 74


state 28

    3 extdefs: extdef .

    $default  reduce using rule 3 (extdefs)


state 29

    5 extdef: extdef_1 .

    $default  reduce using rule 5 (extdef)


state 30

    7 extdef_1: datadef .

    $default  reduce using rule 7 (extdef_1)


state 31

    6 extdef_1: fndef .

    $default  reduce using rule 6 (extdef_1)


state 32

  266 typespec_nonreserved_nonattr: typeof . '(' expr ')'
  267                             | typeof . '(' typename ')'

    '('  shift, and go to state 99


state 33

   11 datadef: setspecs . notype_initdecls ';'
   22 fndef: setspecs . notype_declarator old_style_parm_decls save_filename save_lineno compstmt_or_error
   23      | setspecs . notype_declarator error

    IDENTIFIER  shift, and go to state 100
    '*'         shift, and go to state 101
    '('         shift, and go to state 102

    notype_initdecls   go to state 103
    notype_initdcl     go to state 104
    notype_declarator  go to state 105


state 34

  122 declspecs_nosc_nots_nosa_noea: declspecs_nosc_nots_nosa_noea . TYPE_QUAL
  124 declspecs_nosc_nots_nosa_ea: declspecs_nosc_nots_nosa_noea . attributes
  134 declspecs_nosc_ts_nosa_noea: declspecs_nosc_nots_nosa_noea . typespec_nonattr
  140 declspecs_nosc_ts_nosa_ea: declspecs_nosc_nots_nosa_noea . typespec_attr
  156 declspecs_sc_nots_nosa_noea: declspecs_nosc_nots_nosa_noea . scspec
  206 declspecs_nots: declspecs_nosc_nots_nosa_noea .
  238 declspecs: declspecs_nosc_nots_nosa_noea .

    TYPENAME      shift, and go to state 2
    SCSPEC        shift, and go to state 3
    STATIC        shift, and go to state 4
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 106
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ATTRIBUTE     shift, and go to state 12
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    ';'       reduce using rule 238 (declspecs)
    $default  reduce using rule 206 (declspecs_nots)

    typeof                        go to state 32
    typespec_nonattr              go to state 107
    typespec_attr                 go to state 108
    typespec_reserved_nonattr     go to state 55
    typespec_reserved_attr        go to state 56
    typespec_nonreserved_nonattr  go to state 57
    attributes                    go to state 109
    attribute                     go to state 59
    scspec                        go to state 110
    struct_head                   go to state 61
    union_head                    go to state 62
    enum_head                     go to state 63
    structsp_attr                 go to state 64
    structsp_nonattr              go to state 65
    non_empty_protocolrefs        go to state 72


state 35

  123 declspecs_nosc_nots_nosa_noea: declspecs_nosc_nots_nosa_ea . TYPE_QUAL
  135 declspecs_nosc_ts_nosa_noea: declspecs_nosc_nots_nosa_ea . typespec_nonattr
  141 declspecs_nosc_ts_nosa_ea: declspecs_nosc_nots_nosa_ea . typespec_attr
  157 declspecs_sc_nots_nosa_noea: declspecs_nosc_nots_nosa_ea . scspec
  207 declspecs_nots: declspecs_nosc_nots_nosa_ea .
  239 declspecs: declspecs_nosc_nots_nosa_ea .

    TYPENAME      shift, and go to state 2
    SCSPEC        shift, and go to state 3
    STATIC        shift, and go to state 4
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 111
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    ';'       reduce using rule 239 (declspecs)
    $default  reduce using rule 207 (declspecs_nots)

    typeof                        go to state 32
    typespec_nonattr              go to state 112
    typespec_attr                 go to state 113
    typespec_reserved_nonattr     go to state 55
    typespec_reserved_attr        go to state 56
    typespec_nonreserved_nonattr  go to state 57
    scspec                        go to state 114
    struct_head                   go to state 61
    union_head                    go to state 62
    enum_head                     go to state 63
    structsp_attr                 go to state 64
    structsp_nonattr              go to state 65
    non_empty_protocolrefs        go to state 72


state 36

  125 declspecs_nosc_nots_sa_noea: declspecs_nosc_nots_sa_noea . TYPE_QUAL
  128 declspecs_nosc_nots_sa_ea: declspecs_nosc_nots_sa_noea . attributes
  146 declspecs_nosc_ts_sa_noea: declspecs_nosc_nots_sa_noea . typespec_nonattr
  151 declspecs_nosc_ts_sa_ea: declspecs_nosc_nots_sa_noea . typespec_attr
  163 declspecs_sc_nots_sa_noea: declspecs_nosc_nots_sa_noea . scspec
  208 declspecs_nots: declspecs_nosc_nots_sa_noea .
  240 declspecs: declspecs_nosc_nots_sa_noea .

    TYPENAME      shift, and go to state 2
    SCSPEC        shift, and go to state 3
    STATIC        shift, and go to state 4
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 115
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ATTRIBUTE     shift, and go to state 12
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    ';'       reduce using rule 240 (declspecs)
    $default  reduce using rule 208 (declspecs_nots)

    typeof                        go to state 32
    typespec_nonattr              go to state 116
    typespec_attr                 go to state 117
    typespec_reserved_nonattr     go to state 55
    typespec_reserved_attr        go to state 56
    typespec_nonreserved_nonattr  go to state 57
    attributes                    go to state 118
    attribute                     go to state 59
    scspec                        go to state 119
    struct_head                   go to state 61
    union_head                    go to state 62
    enum_head                     go to state 63
    structsp_attr                 go to state 64
    structsp_nonattr              go to state 65
    non_empty_protocolrefs        go to state 72


state 37

  126 declspecs_nosc_nots_sa_noea: declspecs_nosc_nots_sa_ea . TYPE_QUAL
  147 declspecs_nosc_ts_sa_noea: declspecs_nosc_nots_sa_ea . typespec_nonattr
  152 declspecs_nosc_ts_sa_ea: declspecs_nosc_nots_sa_ea . typespec_attr
  164 declspecs_sc_nots_sa_noea: declspecs_nosc_nots_sa_ea . scspec
  209 declspecs_nots: declspecs_nosc_nots_sa_ea .
  241 declspecs: declspecs_nosc_nots_sa_ea .

    TYPENAME      shift, and go to state 2
    SCSPEC        shift, and go to state 3
    STATIC        shift, and go to state 4
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 120
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    ';'       reduce using rule 241 (declspecs)
    $default  reduce using rule 209 (declspecs_nots)

    typeof                        go to state 32
    typespec_nonattr              go to state 121
    typespec_attr                 go to state 122
    typespec_reserved_nonattr     go to state 55
    typespec_reserved_attr        go to state 56
    typespec_nonreserved_nonattr  go to state 57
    scspec                        go to state 123
    struct_head                   go to state 61
    union_head                    go to state 62
    enum_head                     go to state 63
    structsp_attr                 go to state 64
    structsp_nonattr              go to state 65
    non_empty_protocolrefs        go to state 72


state 38

  130 declspecs_nosc_ts_nosa_noea: declspecs_nosc_ts_nosa_noea . TYPE_QUAL
  132                            | declspecs_nosc_ts_nosa_noea . typespec_reserved_nonattr
  137 declspecs_nosc_ts_nosa_ea: declspecs_nosc_ts_nosa_noea . attributes
  138                          | declspecs_nosc_ts_nosa_noea . typespec_reserved_attr
  174 declspecs_sc_ts_nosa_noea: declspecs_nosc_ts_nosa_noea . scspec
  198 declspecs_ts: declspecs_nosc_ts_nosa_noea .
  242 declspecs: declspecs_nosc_ts_nosa_noea .

    SCSPEC     shift, and go to state 3
    STATIC     shift, and go to state 4
    TYPESPEC   shift, and go to state 5
    TYPE_QUAL  shift, and go to state 124
    ENUM       shift, and go to state 7
    STRUCT     shift, and go to state 8
    UNION      shift, and go to state 9
    ATTRIBUTE  shift, and go to state 12

    ';'       reduce using rule 242 (declspecs)
    $default  reduce using rule 198 (declspecs_ts)

    typespec_reserved_nonattr  go to state 125
    typespec_reserved_attr     go to state 126
    attributes                 go to state 127
    attribute                  go to state 59
    scspec                     go to state 128
    struct_head                go to state 61
    union_head                 go to state 62
    enum_head                  go to state 63
    structsp_attr              go to state 64
    structsp_nonattr           go to state 65


state 39

  131 declspecs_nosc_ts_nosa_noea: declspecs_nosc_ts_nosa_ea . TYPE_QUAL
  133                            | declspecs_nosc_ts_nosa_ea . typespec_reserved_nonattr
  139 declspecs_nosc_ts_nosa_ea: declspecs_nosc_ts_nosa_ea . typespec_reserved_attr
  175 declspecs_sc_ts_nosa_noea: declspecs_nosc_ts_nosa_ea . scspec
  199 declspecs_ts: declspecs_nosc_ts_nosa_ea .
  243 declspecs: declspecs_nosc_ts_nosa_ea .

    SCSPEC     shift, and go to state 3
    STATIC     shift, and go to state 4
    TYPESPEC   shift, and go to state 5
    TYPE_QUAL  shift, and go to state 129
    ENUM       shift, and go to state 7
    STRUCT     shift, and go to state 8
    UNION      shift, and go to state 9

    ';'       reduce using rule 243 (declspecs)
    $default  reduce using rule 199 (declspecs_ts)

    typespec_reserved_nonattr  go to state 130
    typespec_reserved_attr     go to state 131
    scspec                     go to state 132
    struct_head                go to state 61
    union_head                 go to state 62
    enum_head                  go to state 63
    structsp_attr              go to state 64
    structsp_nonattr           go to state 65


state 40

  142 declspecs_nosc_ts_sa_noea: declspecs_nosc_ts_sa_noea . TYPE_QUAL
  144                          | declspecs_nosc_ts_sa_noea . typespec_reserved_nonattr
  148 declspecs_nosc_ts_sa_ea: declspecs_nosc_ts_sa_noea . attributes
  149                        | declspecs_nosc_ts_sa_noea . typespec_reserved_attr
  189 declspecs_sc_ts_sa_noea: declspecs_nosc_ts_sa_noea . scspec
  200 declspecs_ts: declspecs_nosc_ts_sa_noea .
  244 declspecs: declspecs_nosc_ts_sa_noea .

    SCSPEC     shift, and go to state 3
    STATIC     shift, and go to state 4
    TYPESPEC   shift, and go to state 5
    TYPE_QUAL  shift, and go to state 133
    ENUM       shift, and go to state 7
    STRUCT     shift, and go to state 8
    UNION      shift, and go to state 9
    ATTRIBUTE  shift, and go to state 12

    ';'       reduce using rule 244 (declspecs)
    $default  reduce using rule 200 (declspecs_ts)

    typespec_reserved_nonattr  go to state 134
    typespec_reserved_attr     go to state 135
    attributes                 go to state 136
    attribute                  go to state 59
    scspec                     go to state 137
    struct_head                go to state 61
    union_head                 go to state 62
    enum_head                  go to state 63
    structsp_attr              go to state 64
    structsp_nonattr           go to state 65


state 41

  143 declspecs_nosc_ts_sa_noea: declspecs_nosc_ts_sa_ea . TYPE_QUAL
  145                          | declspecs_nosc_ts_sa_ea . typespec_reserved_nonattr
  150 declspecs_nosc_ts_sa_ea: declspecs_nosc_ts_sa_ea . typespec_reserved_attr
  190 declspecs_sc_ts_sa_noea: declspecs_nosc_ts_sa_ea . scspec
  201 declspecs_ts: declspecs_nosc_ts_sa_ea .
  245 declspecs: declspecs_nosc_ts_sa_ea .

    SCSPEC     shift, and go to state 3
    STATIC     shift, and go to state 4
    TYPESPEC   shift, and go to state 5
    TYPE_QUAL  shift, and go to state 138
    ENUM       shift, and go to state 7
    STRUCT     shift, and go to state 8
    UNION      shift, and go to state 9

    ';'       reduce using rule 245 (declspecs)
    $default  reduce using rule 201 (declspecs_ts)

    typespec_reserved_nonattr  go to state 139
    typespec_reserved_attr     go to state 140
    scspec                     go to state 141
    struct_head                go to state 61
    union_head                 go to state 62
    enum_head                  go to state 63
    structsp_attr              go to state 64
    structsp_nonattr           go to state 65


state 42

  154 declspecs_sc_nots_nosa_noea: declspecs_sc_nots_nosa_noea . TYPE_QUAL
  158                            | declspecs_sc_nots_nosa_noea . scspec
  160 declspecs_sc_nots_nosa_ea: declspecs_sc_nots_nosa_noea . attributes
  172 declspecs_sc_ts_nosa_noea: declspecs_sc_nots_nosa_noea . typespec_nonattr
  181 declspecs_sc_ts_nosa_ea: declspecs_sc_nots_nosa_noea . typespec_attr
  210 declspecs_nots: declspecs_sc_nots_nosa_noea .
  246 declspecs: declspecs_sc_nots_nosa_noea .

    TYPENAME      shift, and go to state 2
    SCSPEC        shift, and go to state 3
    STATIC        shift, and go to state 4
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 142
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ATTRIBUTE     shift, and go to state 12
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    ';'       reduce using rule 246 (declspecs)
    $default  reduce using rule 210 (declspecs_nots)

    typeof                        go to state 32
    typespec_nonattr              go to state 143
    typespec_attr                 go to state 144
    typespec_reserved_nonattr     go to state 55
    typespec_reserved_attr        go to state 56
    typespec_nonreserved_nonattr  go to state 57
    attributes                    go to state 145
    attribute                     go to state 59
    scspec                        go to state 146
    struct_head                   go to state 61
    union_head                    go to state 62
    enum_head                     go to state 63
    structsp_attr                 go to state 64
    structsp_nonattr              go to state 65
    non_empty_protocolrefs        go to state 72


state 43

  155 declspecs_sc_nots_nosa_noea: declspecs_sc_nots_nosa_ea . TYPE_QUAL
  159                            | declspecs_sc_nots_nosa_ea . scspec
  173 declspecs_sc_ts_nosa_noea: declspecs_sc_nots_nosa_ea . typespec_nonattr
  182 declspecs_sc_ts_nosa_ea: declspecs_sc_nots_nosa_ea . typespec_attr
  211 declspecs_nots: declspecs_sc_nots_nosa_ea .
  247 declspecs: declspecs_sc_nots_nosa_ea .

    TYPENAME      shift, and go to state 2
    SCSPEC        shift, and go to state 3
    STATIC        shift, and go to state 4
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 147
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    ';'       reduce using rule 247 (declspecs)
    $default  reduce using rule 211 (declspecs_nots)

    typeof                        go to state 32
    typespec_nonattr              go to state 148
    typespec_attr                 go to state 149
    typespec_reserved_nonattr     go to state 55
    typespec_reserved_attr        go to state 56
    typespec_nonreserved_nonattr  go to state 57
    scspec                        go to state 150
    struct_head                   go to state 61
    union_head                    go to state 62
    enum_head                     go to state 63
    structsp_attr                 go to state 64
    structsp_nonattr              go to state 65
    non_empty_protocolrefs        go to state 72


state 44

  161 declspecs_sc_nots_sa_noea: declspecs_sc_nots_sa_noea . TYPE_QUAL
  165                          | declspecs_sc_nots_sa_noea . scspec
  167 declspecs_sc_nots_sa_ea: declspecs_sc_nots_sa_noea . attributes
  187 declspecs_sc_ts_sa_noea: declspecs_sc_nots_sa_noea . typespec_nonattr
  196 declspecs_sc_ts_sa_ea: declspecs_sc_nots_sa_noea . typespec_attr
  212 declspecs_nots: declspecs_sc_nots_sa_noea .
  248 declspecs: declspecs_sc_nots_sa_noea .

    TYPENAME      shift, and go to state 2
    SCSPEC        shift, and go to state 3
    STATIC        shift, and go to state 4
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 151
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ATTRIBUTE     shift, and go to state 12
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    ';'       reduce using rule 248 (declspecs)
    $default  reduce using rule 212 (declspecs_nots)

    typeof                        go to state 32
    typespec_nonattr              go to state 152
    typespec_attr                 go to state 153
    typespec_reserved_nonattr     go to state 55
    typespec_reserved_attr        go to state 56
    typespec_nonreserved_nonattr  go to state 57
    attributes                    go to state 154
    attribute                     go to state 59
    scspec                        go to state 155
    struct_head                   go to state 61
    union_head                    go to state 62
    enum_head                     go to state 63
    structsp_attr                 go to state 64
    structsp_nonattr              go to state 65
    non_empty_protocolrefs        go to state 72


state 45

  162 declspecs_sc_nots_sa_noea: declspecs_sc_nots_sa_ea . TYPE_QUAL
  166                          | declspecs_sc_nots_sa_ea . scspec
  188 declspecs_sc_ts_sa_noea: declspecs_sc_nots_sa_ea . typespec_nonattr
  197 declspecs_sc_ts_sa_ea: declspecs_sc_nots_sa_ea . typespec_attr
  213 declspecs_nots: declspecs_sc_nots_sa_ea .
  249 declspecs: declspecs_sc_nots_sa_ea .

    TYPENAME      shift, and go to state 2
    SCSPEC        shift, and go to state 3
    STATIC        shift, and go to state 4
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 156
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    ';'       reduce using rule 249 (declspecs)
    $default  reduce using rule 213 (declspecs_nots)

    typeof                        go to state 32
    typespec_nonattr              go to state 157
    typespec_attr                 go to state 158
    typespec_reserved_nonattr     go to state 55
    typespec_reserved_attr        go to state 56
    typespec_nonreserved_nonattr  go to state 57
    scspec                        go to state 159
    struct_head                   go to state 61
    union_head                    go to state 62
    enum_head                     go to state 63
    structsp_attr                 go to state 64
    structsp_nonattr              go to state 65
    non_empty_protocolrefs        go to state 72


state 46

  168 declspecs_sc_ts_nosa_noea: declspecs_sc_ts_nosa_noea . TYPE_QUAL
  170                          | declspecs_sc_ts_nosa_noea . typespec_reserved_nonattr
  176                          | declspecs_sc_ts_nosa_noea . scspec
  178 declspecs_sc_ts_nosa_ea: declspecs_sc_ts_nosa_noea . attributes
  179                        | declspecs_sc_ts_nosa_noea . typespec_reserved_attr
  202 declspecs_ts: declspecs_sc_ts_nosa_noea .
  250 declspecs: declspecs_sc_ts_nosa_noea .

    SCSPEC     shift, and go to state 3
    STATIC     shift, and go to state 4
    TYPESPEC   shift, and go to state 5
    TYPE_QUAL  shift, and go to state 160
    ENUM       shift, and go to state 7
    STRUCT     shift, and go to state 8
    UNION      shift, and go to state 9
    ATTRIBUTE  shift, and go to state 12

    ';'       reduce using rule 250 (declspecs)
    $default  reduce using rule 202 (declspecs_ts)

    typespec_reserved_nonattr  go to state 161
    typespec_reserved_attr     go to state 162
    attributes                 go to state 163
    attribute                  go to state 59
    scspec                     go to state 164
    struct_head                go to state 61
    union_head                 go to state 62
    enum_head                  go to state 63
    structsp_attr              go to state 64
    structsp_nonattr           go to state 65


state 47

  169 declspecs_sc_ts_nosa_noea: declspecs_sc_ts_nosa_ea . TYPE_QUAL
  171                          | declspecs_sc_ts_nosa_ea . typespec_reserved_nonattr
  177                          | declspecs_sc_ts_nosa_ea . scspec
  180 declspecs_sc_ts_nosa_ea: declspecs_sc_ts_nosa_ea . typespec_reserved_attr
  203 declspecs_ts: declspecs_sc_ts_nosa_ea .
  251 declspecs: declspecs_sc_ts_nosa_ea .

    SCSPEC     shift, and go to state 3
    STATIC     shift, and go to state 4
    TYPESPEC   shift, and go to state 5
    TYPE_QUAL  shift, and go to state 165
    ENUM       shift, and go to state 7
    STRUCT     shift, and go to state 8
    UNION      shift, and go to state 9

    ';'       reduce using rule 251 (declspecs)
    $default  reduce using rule 203 (declspecs_ts)

    typespec_reserved_nonattr  go to state 166
    typespec_reserved_attr     go to state 167
    scspec                     go to state 168
    struct_head                go to state 61
    union_head                 go to state 62
    enum_head                  go to state 63
    structsp_attr              go to state 64
    structsp_nonattr           go to state 65


state 48

  183 declspecs_sc_ts_sa_noea: declspecs_sc_ts_sa_noea . TYPE_QUAL
  185                        | declspecs_sc_ts_sa_noea . typespec_reserved_nonattr
  191                        | declspecs_sc_ts_sa_noea . scspec
  193 declspecs_sc_ts_sa_ea: declspecs_sc_ts_sa_noea . attributes
  194                      | declspecs_sc_ts_sa_noea . typespec_reserved_attr
  204 declspecs_ts: declspecs_sc_ts_sa_noea .
  252 declspecs: declspecs_sc_ts_sa_noea .

    SCSPEC     shift, and go to state 3
    STATIC     shift, and go to state 4
    TYPESPEC   shift, and go to state 5
    TYPE_QUAL  shift, and go to state 169
    ENUM       shift, and go to state 7
    STRUCT     shift, and go to state 8
    UNION      shift, and go to state 9
    ATTRIBUTE  shift, and go to state 12

    ';'       reduce using rule 252 (declspecs)
    $default  reduce using rule 204 (declspecs_ts)

    typespec_reserved_nonattr  go to state 170
    typespec_reserved_attr     go to state 171
    attributes                 go to state 172
    attribute                  go to state 59
    scspec                     go to state 173
    struct_head                go to state 61
    union_head                 go to state 62
    enum_head                  go to state 63
    structsp_attr              go to state 64
    structsp_nonattr           go to state 65


state 49

  184 declspecs_sc_ts_sa_noea: declspecs_sc_ts_sa_ea . TYPE_QUAL
  186                        | declspecs_sc_ts_sa_ea . typespec_reserved_nonattr
  192                        | declspecs_sc_ts_sa_ea . scspec
  195 declspecs_sc_ts_sa_ea: declspecs_sc_ts_sa_ea . typespec_reserved_attr
  205 declspecs_ts: declspecs_sc_ts_sa_ea .
  253 declspecs: declspecs_sc_ts_sa_ea .

    SCSPEC     shift, and go to state 3
    STATIC     shift, and go to state 4
    TYPESPEC   shift, and go to state 5
    TYPE_QUAL  shift, and go to state 174
    ENUM       shift, and go to state 7
    STRUCT     shift, and go to state 8
    UNION      shift, and go to state 9

    ';'       reduce using rule 253 (declspecs)
    $default  reduce using rule 205 (declspecs_ts)

    typespec_reserved_nonattr  go to state 175
    typespec_reserved_attr     go to state 176
    scspec                     go to state 177
    struct_head                go to state 61
    union_head                 go to state 62
    enum_head                  go to state 63
    structsp_attr              go to state 64
    structsp_nonattr           go to state 65


state 50

   13 datadef: declspecs_ts . setspecs initdecls ';'
   18 fndef: declspecs_ts . setspecs declarator old_style_parm_decls save_filename save_lineno compstmt_or_error
   19      | declspecs_ts . setspecs declarator error

    $default  reduce using rule 113 (setspecs)

    setspecs  go to state 178


state 51

   12 datadef: declspecs_nots . setspecs notype_initdecls ';'
   20 fndef: declspecs_nots . setspecs notype_declarator old_style_parm_decls save_filename save_lineno compstmt_or_error
   21      | declspecs_nots . setspecs notype_declarator error

    $default  reduce using rule 113 (setspecs)

    setspecs  go to state 179


state 52

   14 datadef: declspecs . ';'

    ';'  shift, and go to state 180


state 53

  129 declspecs_nosc_ts_nosa_noea: typespec_nonattr .

    $default  reduce using rule 129 (declspecs_nosc_ts_nosa_noea)


state 54

  136 declspecs_nosc_ts_nosa_ea: typespec_attr .

    $default  reduce using rule 136 (declspecs_nosc_ts_nosa_ea)


state 55

  256 typespec_nonattr: typespec_reserved_nonattr .

    $default  reduce using rule 256 (typespec_nonattr)


state 56

  258 typespec_attr: typespec_reserved_attr .

    $default  reduce using rule 258 (typespec_attr)


state 57

  257 typespec_nonattr: typespec_nonreserved_nonattr .

    $default  reduce using rule 257 (typespec_nonattr)


state 58

  127 declspecs_nosc_nots_sa_ea: attributes .
  281 attributes: attributes . attribute

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 127 (declspecs_nosc_nots_sa_ea)

    attribute  go to state 181


state 59

  280 attributes: attribute .

    $default  reduce using rule 280 (attributes)


state 60

  153 declspecs_sc_nots_nosa_noea: scspec .

    $default  reduce using rule 153 (declspecs_sc_nots_nosa_noea)


state 61

  347 structsp_attr: struct_head . identifier '{' component_decl_list '}' maybe_attribute
  348              | struct_head . '{' component_decl_list '}' maybe_attribute
  353 structsp_nonattr: struct_head . identifier

    IDENTIFIER  shift, and go to state 82
    TYPENAME    shift, and go to state 83
    CLASSNAME   shift, and go to state 84
    OBJECTNAME  shift, and go to state 85
    '{'         shift, and go to state 182

    identifier  go to state 183


state 62

  349 structsp_attr: union_head . identifier '{' component_decl_list '}' maybe_attribute
  350              | union_head . '{' component_decl_list '}' maybe_attribute
  354 structsp_nonattr: union_head . identifier

    IDENTIFIER  shift, and go to state 82
    TYPENAME    shift, and go to state 83
    CLASSNAME   shift, and go to state 84
    OBJECTNAME  shift, and go to state 85
    '{'         shift, and go to state 184

    identifier  go to state 185


state 63

  351 structsp_attr: enum_head . identifier '{' enumlist maybecomma_warn '}' maybe_attribute
  352              | enum_head . '{' enumlist maybecomma_warn '}' maybe_attribute
  355 structsp_nonattr: enum_head . identifier

    IDENTIFIER  shift, and go to state 82
    TYPENAME    shift, and go to state 83
    CLASSNAME   shift, and go to state 84
    OBJECTNAME  shift, and go to state 85
    '{'         shift, and go to state 186

    identifier  go to state 187


state 64

  261 typespec_reserved_attr: structsp_attr .

    $default  reduce using rule 261 (typespec_reserved_attr)


state 65

  260 typespec_reserved_nonattr: structsp_nonattr .

    $default  reduce using rule 260 (typespec_reserved_nonattr)


state 66

   10 extdef_1: extension . extdef

    error           shift, and go to state 1
    TYPENAME        shift, and go to state 2
    SCSPEC          shift, and go to state 3
    STATIC          shift, and go to state 4
    TYPESPEC        shift, and go to state 5
    TYPE_QUAL       shift, and go to state 6
    ENUM            shift, and go to state 7
    STRUCT          shift, and go to state 8
    UNION           shift, and go to state 9
    ASM_KEYWORD     shift, and go to state 10
    TYPEOF          shift, and go to state 11
    ATTRIBUTE       shift, and go to state 12
    EXTENSION       shift, and go to state 13
    ARITHCOMPARE    shift, and go to state 14
    '+'             shift, and go to state 15
    '-'             shift, and go to state 16
    INTERFACE       shift, and go to state 17
    IMPLEMENTATION  shift, and go to state 18
    END             shift, and go to state 19
    CLASSNAME       shift, and go to state 20
    PROTOCOL        shift, and go to state 21
    OBJECTNAME      shift, and go to state 22
    CLASS           shift, and go to state 23
    ALIAS           shift, and go to state 24
    ';'             shift, and go to state 25

    IDENTIFIER  reduce using rule 113 (setspecs)
    '*'         reduce using rule 113 (setspecs)
    '('         reduce using rule 113 (setspecs)

    extdef                         go to state 188
    extdef_1                       go to state 29
    datadef                        go to state 30
    fndef                          go to state 31
    typeof                         go to state 32
    setspecs                       go to state 33
    declspecs_nosc_nots_nosa_noea  go to state 34
    declspecs_nosc_nots_nosa_ea    go to state 35
    declspecs_nosc_nots_sa_noea    go to state 36
    declspecs_nosc_nots_sa_ea      go to state 37
    declspecs_nosc_ts_nosa_noea    go to state 38
    declspecs_nosc_ts_nosa_ea      go to state 39
    declspecs_nosc_ts_sa_noea      go to state 40
    declspecs_nosc_ts_sa_ea        go to state 41
    declspecs_sc_nots_nosa_noea    go to state 42
    declspecs_sc_nots_nosa_ea      go to state 43
    declspecs_sc_nots_sa_noea      go to state 44
    declspecs_sc_nots_sa_ea        go to state 45
    declspecs_sc_ts_nosa_noea      go to state 46
    declspecs_sc_ts_nosa_ea        go to state 47
    declspecs_sc_ts_sa_noea        go to state 48
    declspecs_sc_ts_sa_ea          go to state 49
    declspecs_ts                   go to state 50
    declspecs_nots                 go to state 51
    declspecs                      go to state 52
    typespec_nonattr               go to state 53
    typespec_attr                  go to state 54
    typespec_reserved_nonattr      go to state 55
    typespec_reserved_attr         go to state 56
    typespec_nonreserved_nonattr   go to state 57
    attributes                     go to state 58
    attribute                      go to state 59
    scspec                         go to state 60
    struct_head                    go to state 61
    union_head                     go to state 62
    enum_head                      go to state 63
    structsp_attr                  go to state 64
    structsp_nonattr               go to state 65
    extension                      go to state 66
    objcdef                        go to state 67
    classdecl                      go to state 68
    aliasdecl                      go to state 69
    classdef                       go to state 70
    protocoldef                    go to state 71
    non_empty_protocolrefs         go to state 72
    methodtype                     go to state 73
    methoddef                      go to state 74


state 67

    8 extdef_1: objcdef .

    $default  reduce using rule 8 (extdef_1)


state 68

  533 objcdef: classdecl .

    $default  reduce using rule 533 (objcdef)


state 69

  534 objcdef: aliasdecl .

    $default  reduce using rule 534 (objcdef)


state 70

  532 objcdef: classdef .

    $default  reduce using rule 532 (objcdef)


state 71

  535 objcdef: protocoldef .

    $default  reduce using rule 535 (objcdef)


state 72

  265 typespec_nonreserved_nonattr: non_empty_protocolrefs .

    $default  reduce using rule 265 (typespec_nonreserved_nonattr)


state 73

  576 methoddef: methodtype . methoddecl optarglist compstmt_or_error

    IDENTIFIER   shift, and go to state 189
    TYPENAME     shift, and go to state 190
    TYPESPEC     shift, and go to state 191
    TYPE_QUAL    shift, and go to state 192
    SIZEOF       shift, and go to state 193
    ENUM         shift, and go to state 194
    STRUCT       shift, and go to state 195
    UNION        shift, and go to state 196
    IF           shift, and go to state 197
    ELSE         shift, and go to state 198
    WHILE        shift, and go to state 199
    DO           shift, and go to state 200
    FOR          shift, and go to state 201
    SWITCH       shift, and go to state 202
    CASE         shift, and go to state 203
    DEFAULT      shift, and go to state 204
    BREAK        shift, and go to state 205
    CONTINUE     shift, and go to state 206
    RETURN       shift, and go to state 207
    GOTO         shift, and go to state 208
    ASM_KEYWORD  shift, and go to state 209
    TYPEOF       shift, and go to state 210
    ALIGNOF      shift, and go to state 211
    ':'          shift, and go to state 212
    '('          shift, and go to state 213
    CLASSNAME    shift, and go to state 214
    OBJECTNAME   shift, and go to state 215

    methoddecl       go to state 216
    unaryselector    go to state 217
    keywordselector  go to state 218
    selector         go to state 219
    reservedwords    go to state 220
    keyworddecl      go to state 221


state 74

  536 objcdef: methoddef .

    $default  reduce using rule 536 (objcdef)


state 75

   15 datadef: error ';' .

    $default  reduce using rule 15 (datadef)


state 76

   16 datadef: error '}' .

    $default  reduce using rule 16 (datadef)


state 77

  281 attributes: attributes . attribute
  346 enum_head: ENUM attributes .

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 346 (enum_head)

    attribute  go to state 181


state 78

  281 attributes: attributes . attribute
  342 struct_head: STRUCT attributes .

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 342 (struct_head)

    attribute  go to state 181


state 79

  281 attributes: attributes . attribute
  344 union_head: UNION attributes .

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 344 (union_head)

    attribute  go to state 181


state 80

    9 extdef_1: ASM_KEYWORD '(' . expr ')' ';'

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    expr                    go to state 249
    nonnull_exprlist        go to state 250
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 255
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 81

  282 attribute: ATTRIBUTE '(' . '(' attribute_list ')' ')'

    '('  shift, and go to state 264


state 82

   24 identifier: IDENTIFIER .

    $default  reduce using rule 24 (identifier)


state 83

   25 identifier: TYPENAME .

    $default  reduce using rule 25 (identifier)


state 84

   27 identifier: CLASSNAME .

    $default  reduce using rule 27 (identifier)


state 85

   26 identifier: OBJECTNAME .

    $default  reduce using rule 26 (identifier)


state 86

  538 identifier_list: identifier .

    $default  reduce using rule 538 (identifier_list)


state 87

  539 identifier_list: identifier_list . ',' identifier
  556 non_empty_protocolrefs: ARITHCOMPARE identifier_list . ARITHCOMPARE

    ARITHCOMPARE  shift, and go to state 265
    ','           shift, and go to state 266


state 88

  542 classdef: INTERFACE identifier . protocolrefs '{' ivar_decl_list '}' methodprotolist END
  543         | INTERFACE identifier . protocolrefs methodprotolist END
  544         | INTERFACE identifier . ':' identifier protocolrefs '{' ivar_decl_list '}' methodprotolist END
  545         | INTERFACE identifier . ':' identifier protocolrefs methodprotolist END
  550         | INTERFACE identifier . '(' identifier ')' protocolrefs methodprotolist END

    ':'           shift, and go to state 267
    ARITHCOMPARE  shift, and go to state 14
    '('           shift, and go to state 268

    ARITHCOMPARE  [reduce using rule 554 (protocolrefs)]
    '('           [reduce using rule 554 (protocolrefs)]
    $default      reduce using rule 554 (protocolrefs)

    protocolrefs            go to state 269
    non_empty_protocolrefs  go to state 91


state 89

  546 classdef: IMPLEMENTATION identifier . '{' ivar_decl_list '}'
  547         | IMPLEMENTATION identifier .
  548         | IMPLEMENTATION identifier . ':' identifier '{' ivar_decl_list '}'
  549         | IMPLEMENTATION identifier . ':' identifier
  551         | IMPLEMENTATION identifier . '(' identifier ')'

    ':'  shift, and go to state 270
    '('  shift, and go to state 271
    '{'  shift, and go to state 272

    '('       [reduce using rule 547 (classdef)]
    $default  reduce using rule 547 (classdef)


state 90

  263 typespec_nonreserved_nonattr: CLASSNAME protocolrefs .

    $default  reduce using rule 263 (typespec_nonreserved_nonattr)


state 91

  555 protocolrefs: non_empty_protocolrefs .

    $default  reduce using rule 555 (protocolrefs)


state 92

  538 identifier_list: identifier .
  552 protocoldef: PROTOCOL identifier . protocolrefs methodprotolist END

    ARITHCOMPARE  shift, and go to state 14

    ARITHCOMPARE  [reduce using rule 554 (protocolrefs)]
    ';'           reduce using rule 538 (identifier_list)
    ';'           [reduce using rule 554 (protocolrefs)]
    ','           reduce using rule 538 (identifier_list)
    $default      reduce using rule 554 (protocolrefs)

    protocolrefs            go to state 273
    non_empty_protocolrefs  go to state 91


state 93

  539 identifier_list: identifier_list . ',' identifier
  553 protocoldef: PROTOCOL identifier_list . ';'

    ';'  shift, and go to state 274
    ','  shift, and go to state 266


state 94

  264 typespec_nonreserved_nonattr: OBJECTNAME protocolrefs .

    $default  reduce using rule 264 (typespec_nonreserved_nonattr)


state 95

  539 identifier_list: identifier_list . ',' identifier
  540 classdecl: CLASS identifier_list . ';'

    ';'  shift, and go to state 275
    ','  shift, and go to state 266


state 96

  541 aliasdecl: ALIAS identifier . identifier ';'

    IDENTIFIER  shift, and go to state 82
    TYPENAME    shift, and go to state 83
    CLASSNAME   shift, and go to state 84
    OBJECTNAME  shift, and go to state 85

    identifier  go to state 276


state 97

    0 $accept: program $end .

    $default  accept


state 98

    4 extdefs: extdefs extdef .

    $default  reduce using rule 4 (extdefs)


state 99

  266 typespec_nonreserved_nonattr: typeof '(' . expr ')'
  267                             | typeof '(' . typename ')'

    IDENTIFIER          shift, and go to state 222
    TYPENAME            shift, and go to state 2
    TYPESPEC            shift, and go to state 5
    TYPE_QUAL           shift, and go to state 6
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ENUM                shift, and go to state 7
    STRUCT              shift, and go to state 8
    UNION               shift, and go to state 9
    TYPEOF              shift, and go to state 11
    ALIGNOF             shift, and go to state 226
    ATTRIBUTE           shift, and go to state 12
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    ARITHCOMPARE        shift, and go to state 14
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    CLASSNAME           shift, and go to state 20
    PROTOCOL            shift, and go to state 244
    OBJECTNAME          shift, and go to state 22
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                           go to state 248
    expr                           go to state 277
    nonnull_exprlist               go to state 250
    unary_expr                     go to state 251
    sizeof                         go to state 252
    alignof                        go to state 253
    typeof                         go to state 32
    cast_expr                      go to state 254
    expr_no_commas                 go to state 255
    primary                        go to state 256
    objc_string                    go to state 257
    declspecs_nosc_nots_nosa_noea  go to state 278
    declspecs_nosc_nots_nosa_ea    go to state 279
    declspecs_nosc_nots_sa_noea    go to state 280
    declspecs_nosc_nots_sa_ea      go to state 281
    declspecs_nosc_ts_nosa_noea    go to state 282
    declspecs_nosc_ts_nosa_ea      go to state 283
    declspecs_nosc_ts_sa_noea      go to state 284
    declspecs_nosc_ts_sa_ea        go to state 285
    declspecs_nosc                 go to state 286
    typespec_nonattr               go to state 53
    typespec_attr                  go to state 54
    typespec_reserved_nonattr      go to state 55
    typespec_reserved_attr         go to state 56
    typespec_nonreserved_nonattr   go to state 57
    attributes                     go to state 58
    attribute                      go to state 59
    struct_head                    go to state 61
    union_head                     go to state 62
    enum_head                      go to state 63
    structsp_attr                  go to state 64
    structsp_nonattr               go to state 65
    typename                       go to state 287
    compstmt_primary_start         go to state 258
    extension                      go to state 259
    non_empty_protocolrefs         go to state 72
    objcmessageexpr                go to state 260
    objcselectorexpr               go to state 261
    objcprotocolexpr               go to state 262
    objcencodeexpr                 go to state 263


state 100

  340 notype_declarator: IDENTIFIER .

    $default  reduce using rule 340 (notype_declarator)


state 101

  338 notype_declarator: '*' . maybe_type_quals_attrs notype_declarator

    TYPE_QUAL  shift, and go to state 6
    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 254 (maybe_type_quals_attrs)

    declspecs_nosc_nots_nosa_noea  go to state 288
    declspecs_nosc_nots_nosa_ea    go to state 289
    declspecs_nosc_nots_sa_noea    go to state 290
    declspecs_nosc_nots_sa_ea      go to state 291
    declspecs_nosc_nots            go to state 292
    maybe_type_quals_attrs         go to state 293
    attributes                     go to state 58
    attribute                      go to state 59


state 102

  337 notype_declarator: '(' . maybe_attribute notype_declarator ')'

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 278 (maybe_attribute)

    maybe_attribute  go to state 294
    attributes       go to state 295
    attribute        go to state 59


state 103

   11 datadef: setspecs notype_initdecls . ';'
  271 notype_initdecls: notype_initdecls . ',' maybe_resetattrs notype_initdcl

    ';'  shift, and go to state 296
    ','  shift, and go to state 297


state 104

  270 notype_initdecls: notype_initdcl .

    $default  reduce using rule 270 (notype_initdecls)


state 105

   22 fndef: setspecs notype_declarator . old_style_parm_decls save_filename save_lineno compstmt_or_error
   23      | setspecs notype_declarator . error
  276 notype_initdcl: notype_declarator . maybeasm maybe_attribute '=' init
  277               | notype_declarator . maybeasm maybe_attribute
  336 notype_declarator: notype_declarator . '(' parmlist_or_identifiers
  339                  | notype_declarator . array_declarator

    error        shift, and go to state 298
    ASM_KEYWORD  shift, and go to state 299
    '('          shift, and go to state 300
    '['          shift, and go to state 301

    error         [reduce using rule 101 (old_style_parm_decls_1)]
    TYPENAME      reduce using rule 456 (save_filename)
    SCSPEC        reduce using rule 456 (save_filename)
    STATIC        reduce using rule 456 (save_filename)
    TYPESPEC      reduce using rule 456 (save_filename)
    TYPE_QUAL     reduce using rule 456 (save_filename)
    ENUM          reduce using rule 456 (save_filename)
    STRUCT        reduce using rule 456 (save_filename)
    UNION         reduce using rule 456 (save_filename)
    TYPEOF        reduce using rule 456 (save_filename)
    ATTRIBUTE     reduce using rule 272 (maybeasm)
    '='           reduce using rule 272 (maybeasm)
    ARITHCOMPARE  reduce using rule 456 (save_filename)
    CLASSNAME     reduce using rule 456 (save_filename)
    OBJECTNAME    reduce using rule 456 (save_filename)
    ';'           reduce using rule 272 (maybeasm)
    ','           reduce using rule 272 (maybeasm)
    '{'           reduce using rule 101 (old_style_parm_decls_1)

    old_style_parm_decls    go to state 302
    old_style_parm_decls_1  go to state 303
    lineno_datadecl         go to state 304
    datadecls               go to state 305
    maybeasm                go to state 306
    array_declarator        go to state 307
    errstmt                 go to state 308
    save_filename           go to state 309


state 106

  122 declspecs_nosc_nots_nosa_noea: declspecs_nosc_nots_nosa_noea TYPE_QUAL .

    $default  reduce using rule 122 (declspecs_nosc_nots_nosa_noea)


state 107

  134 declspecs_nosc_ts_nosa_noea: declspecs_nosc_nots_nosa_noea typespec_nonattr .

    $default  reduce using rule 134 (declspecs_nosc_ts_nosa_noea)


state 108

  140 declspecs_nosc_ts_nosa_ea: declspecs_nosc_nots_nosa_noea typespec_attr .

    $default  reduce using rule 140 (declspecs_nosc_ts_nosa_ea)


state 109

  124 declspecs_nosc_nots_nosa_ea: declspecs_nosc_nots_nosa_noea attributes .
  281 attributes: attributes . attribute

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 124 (declspecs_nosc_nots_nosa_ea)

    attribute  go to state 181


state 110

  156 declspecs_sc_nots_nosa_noea: declspecs_nosc_nots_nosa_noea scspec .

    $default  reduce using rule 156 (declspecs_sc_nots_nosa_noea)


state 111

  123 declspecs_nosc_nots_nosa_noea: declspecs_nosc_nots_nosa_ea TYPE_QUAL .

    $default  reduce using rule 123 (declspecs_nosc_nots_nosa_noea)


state 112

  135 declspecs_nosc_ts_nosa_noea: declspecs_nosc_nots_nosa_ea typespec_nonattr .

    $default  reduce using rule 135 (declspecs_nosc_ts_nosa_noea)


state 113

  141 declspecs_nosc_ts_nosa_ea: declspecs_nosc_nots_nosa_ea typespec_attr .

    $default  reduce using rule 141 (declspecs_nosc_ts_nosa_ea)


state 114

  157 declspecs_sc_nots_nosa_noea: declspecs_nosc_nots_nosa_ea scspec .

    $default  reduce using rule 157 (declspecs_sc_nots_nosa_noea)


state 115

  125 declspecs_nosc_nots_sa_noea: declspecs_nosc_nots_sa_noea TYPE_QUAL .

    $default  reduce using rule 125 (declspecs_nosc_nots_sa_noea)


state 116

  146 declspecs_nosc_ts_sa_noea: declspecs_nosc_nots_sa_noea typespec_nonattr .

    $default  reduce using rule 146 (declspecs_nosc_ts_sa_noea)


state 117

  151 declspecs_nosc_ts_sa_ea: declspecs_nosc_nots_sa_noea typespec_attr .

    $default  reduce using rule 151 (declspecs_nosc_ts_sa_ea)


state 118

  128 declspecs_nosc_nots_sa_ea: declspecs_nosc_nots_sa_noea attributes .
  281 attributes: attributes . attribute

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 128 (declspecs_nosc_nots_sa_ea)

    attribute  go to state 181


state 119

  163 declspecs_sc_nots_sa_noea: declspecs_nosc_nots_sa_noea scspec .

    $default  reduce using rule 163 (declspecs_sc_nots_sa_noea)


state 120

  126 declspecs_nosc_nots_sa_noea: declspecs_nosc_nots_sa_ea TYPE_QUAL .

    $default  reduce using rule 126 (declspecs_nosc_nots_sa_noea)


state 121

  147 declspecs_nosc_ts_sa_noea: declspecs_nosc_nots_sa_ea typespec_nonattr .

    $default  reduce using rule 147 (declspecs_nosc_ts_sa_noea)


state 122

  152 declspecs_nosc_ts_sa_ea: declspecs_nosc_nots_sa_ea typespec_attr .

    $default  reduce using rule 152 (declspecs_nosc_ts_sa_ea)


state 123

  164 declspecs_sc_nots_sa_noea: declspecs_nosc_nots_sa_ea scspec .

    $default  reduce using rule 164 (declspecs_sc_nots_sa_noea)


state 124

  130 declspecs_nosc_ts_nosa_noea: declspecs_nosc_ts_nosa_noea TYPE_QUAL .

    $default  reduce using rule 130 (declspecs_nosc_ts_nosa_noea)


state 125

  132 declspecs_nosc_ts_nosa_noea: declspecs_nosc_ts_nosa_noea typespec_reserved_nonattr .

    $default  reduce using rule 132 (declspecs_nosc_ts_nosa_noea)


state 126

  138 declspecs_nosc_ts_nosa_ea: declspecs_nosc_ts_nosa_noea typespec_reserved_attr .

    $default  reduce using rule 138 (declspecs_nosc_ts_nosa_ea)


state 127

  137 declspecs_nosc_ts_nosa_ea: declspecs_nosc_ts_nosa_noea attributes .
  281 attributes: attributes . attribute

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 137 (declspecs_nosc_ts_nosa_ea)

    attribute  go to state 181


state 128

  174 declspecs_sc_ts_nosa_noea: declspecs_nosc_ts_nosa_noea scspec .

    $default  reduce using rule 174 (declspecs_sc_ts_nosa_noea)


state 129

  131 declspecs_nosc_ts_nosa_noea: declspecs_nosc_ts_nosa_ea TYPE_QUAL .

    $default  reduce using rule 131 (declspecs_nosc_ts_nosa_noea)


state 130

  133 declspecs_nosc_ts_nosa_noea: declspecs_nosc_ts_nosa_ea typespec_reserved_nonattr .

    $default  reduce using rule 133 (declspecs_nosc_ts_nosa_noea)


state 131

  139 declspecs_nosc_ts_nosa_ea: declspecs_nosc_ts_nosa_ea typespec_reserved_attr .

    $default  reduce using rule 139 (declspecs_nosc_ts_nosa_ea)


state 132

  175 declspecs_sc_ts_nosa_noea: declspecs_nosc_ts_nosa_ea scspec .

    $default  reduce using rule 175 (declspecs_sc_ts_nosa_noea)


state 133

  142 declspecs_nosc_ts_sa_noea: declspecs_nosc_ts_sa_noea TYPE_QUAL .

    $default  reduce using rule 142 (declspecs_nosc_ts_sa_noea)


state 134

  144 declspecs_nosc_ts_sa_noea: declspecs_nosc_ts_sa_noea typespec_reserved_nonattr .

    $default  reduce using rule 144 (declspecs_nosc_ts_sa_noea)


state 135

  149 declspecs_nosc_ts_sa_ea: declspecs_nosc_ts_sa_noea typespec_reserved_attr .

    $default  reduce using rule 149 (declspecs_nosc_ts_sa_ea)


state 136

  148 declspecs_nosc_ts_sa_ea: declspecs_nosc_ts_sa_noea attributes .
  281 attributes: attributes . attribute

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 148 (declspecs_nosc_ts_sa_ea)

    attribute  go to state 181


state 137

  189 declspecs_sc_ts_sa_noea: declspecs_nosc_ts_sa_noea scspec .

    $default  reduce using rule 189 (declspecs_sc_ts_sa_noea)


state 138

  143 declspecs_nosc_ts_sa_noea: declspecs_nosc_ts_sa_ea TYPE_QUAL .

    $default  reduce using rule 143 (declspecs_nosc_ts_sa_noea)


state 139

  145 declspecs_nosc_ts_sa_noea: declspecs_nosc_ts_sa_ea typespec_reserved_nonattr .

    $default  reduce using rule 145 (declspecs_nosc_ts_sa_noea)


state 140

  150 declspecs_nosc_ts_sa_ea: declspecs_nosc_ts_sa_ea typespec_reserved_attr .

    $default  reduce using rule 150 (declspecs_nosc_ts_sa_ea)


state 141

  190 declspecs_sc_ts_sa_noea: declspecs_nosc_ts_sa_ea scspec .

    $default  reduce using rule 190 (declspecs_sc_ts_sa_noea)


state 142

  154 declspecs_sc_nots_nosa_noea: declspecs_sc_nots_nosa_noea TYPE_QUAL .

    $default  reduce using rule 154 (declspecs_sc_nots_nosa_noea)


state 143

  172 declspecs_sc_ts_nosa_noea: declspecs_sc_nots_nosa_noea typespec_nonattr .

    $default  reduce using rule 172 (declspecs_sc_ts_nosa_noea)


state 144

  181 declspecs_sc_ts_nosa_ea: declspecs_sc_nots_nosa_noea typespec_attr .

    $default  reduce using rule 181 (declspecs_sc_ts_nosa_ea)


state 145

  160 declspecs_sc_nots_nosa_ea: declspecs_sc_nots_nosa_noea attributes .
  281 attributes: attributes . attribute

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 160 (declspecs_sc_nots_nosa_ea)

    attribute  go to state 181


state 146

  158 declspecs_sc_nots_nosa_noea: declspecs_sc_nots_nosa_noea scspec .

    $default  reduce using rule 158 (declspecs_sc_nots_nosa_noea)


state 147

  155 declspecs_sc_nots_nosa_noea: declspecs_sc_nots_nosa_ea TYPE_QUAL .

    $default  reduce using rule 155 (declspecs_sc_nots_nosa_noea)


state 148

  173 declspecs_sc_ts_nosa_noea: declspecs_sc_nots_nosa_ea typespec_nonattr .

    $default  reduce using rule 173 (declspecs_sc_ts_nosa_noea)


state 149

  182 declspecs_sc_ts_nosa_ea: declspecs_sc_nots_nosa_ea typespec_attr .

    $default  reduce using rule 182 (declspecs_sc_ts_nosa_ea)


state 150

  159 declspecs_sc_nots_nosa_noea: declspecs_sc_nots_nosa_ea scspec .

    $default  reduce using rule 159 (declspecs_sc_nots_nosa_noea)


state 151

  161 declspecs_sc_nots_sa_noea: declspecs_sc_nots_sa_noea TYPE_QUAL .

    $default  reduce using rule 161 (declspecs_sc_nots_sa_noea)


state 152

  187 declspecs_sc_ts_sa_noea: declspecs_sc_nots_sa_noea typespec_nonattr .

    $default  reduce using rule 187 (declspecs_sc_ts_sa_noea)


state 153

  196 declspecs_sc_ts_sa_ea: declspecs_sc_nots_sa_noea typespec_attr .

    $default  reduce using rule 196 (declspecs_sc_ts_sa_ea)


state 154

  167 declspecs_sc_nots_sa_ea: declspecs_sc_nots_sa_noea attributes .
  281 attributes: attributes . attribute

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 167 (declspecs_sc_nots_sa_ea)

    attribute  go to state 181


state 155

  165 declspecs_sc_nots_sa_noea: declspecs_sc_nots_sa_noea scspec .

    $default  reduce using rule 165 (declspecs_sc_nots_sa_noea)


state 156

  162 declspecs_sc_nots_sa_noea: declspecs_sc_nots_sa_ea TYPE_QUAL .

    $default  reduce using rule 162 (declspecs_sc_nots_sa_noea)


state 157

  188 declspecs_sc_ts_sa_noea: declspecs_sc_nots_sa_ea typespec_nonattr .

    $default  reduce using rule 188 (declspecs_sc_ts_sa_noea)


state 158

  197 declspecs_sc_ts_sa_ea: declspecs_sc_nots_sa_ea typespec_attr .

    $default  reduce using rule 197 (declspecs_sc_ts_sa_ea)


state 159

  166 declspecs_sc_nots_sa_noea: declspecs_sc_nots_sa_ea scspec .

    $default  reduce using rule 166 (declspecs_sc_nots_sa_noea)


state 160

  168 declspecs_sc_ts_nosa_noea: declspecs_sc_ts_nosa_noea TYPE_QUAL .

    $default  reduce using rule 168 (declspecs_sc_ts_nosa_noea)


state 161

  170 declspecs_sc_ts_nosa_noea: declspecs_sc_ts_nosa_noea typespec_reserved_nonattr .

    $default  reduce using rule 170 (declspecs_sc_ts_nosa_noea)


state 162

  179 declspecs_sc_ts_nosa_ea: declspecs_sc_ts_nosa_noea typespec_reserved_attr .

    $default  reduce using rule 179 (declspecs_sc_ts_nosa_ea)


state 163

  178 declspecs_sc_ts_nosa_ea: declspecs_sc_ts_nosa_noea attributes .
  281 attributes: attributes . attribute

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 178 (declspecs_sc_ts_nosa_ea)

    attribute  go to state 181


state 164

  176 declspecs_sc_ts_nosa_noea: declspecs_sc_ts_nosa_noea scspec .

    $default  reduce using rule 176 (declspecs_sc_ts_nosa_noea)


state 165

  169 declspecs_sc_ts_nosa_noea: declspecs_sc_ts_nosa_ea TYPE_QUAL .

    $default  reduce using rule 169 (declspecs_sc_ts_nosa_noea)


state 166

  171 declspecs_sc_ts_nosa_noea: declspecs_sc_ts_nosa_ea typespec_reserved_nonattr .

    $default  reduce using rule 171 (declspecs_sc_ts_nosa_noea)


state 167

  180 declspecs_sc_ts_nosa_ea: declspecs_sc_ts_nosa_ea typespec_reserved_attr .

    $default  reduce using rule 180 (declspecs_sc_ts_nosa_ea)


state 168

  177 declspecs_sc_ts_nosa_noea: declspecs_sc_ts_nosa_ea scspec .

    $default  reduce using rule 177 (declspecs_sc_ts_nosa_noea)


state 169

  183 declspecs_sc_ts_sa_noea: declspecs_sc_ts_sa_noea TYPE_QUAL .

    $default  reduce using rule 183 (declspecs_sc_ts_sa_noea)


state 170

  185 declspecs_sc_ts_sa_noea: declspecs_sc_ts_sa_noea typespec_reserved_nonattr .

    $default  reduce using rule 185 (declspecs_sc_ts_sa_noea)


state 171

  194 declspecs_sc_ts_sa_ea: declspecs_sc_ts_sa_noea typespec_reserved_attr .

    $default  reduce using rule 194 (declspecs_sc_ts_sa_ea)


state 172

  193 declspecs_sc_ts_sa_ea: declspecs_sc_ts_sa_noea attributes .
  281 attributes: attributes . attribute

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 193 (declspecs_sc_ts_sa_ea)

    attribute  go to state 181


state 173

  191 declspecs_sc_ts_sa_noea: declspecs_sc_ts_sa_noea scspec .

    $default  reduce using rule 191 (declspecs_sc_ts_sa_noea)


state 174

  184 declspecs_sc_ts_sa_noea: declspecs_sc_ts_sa_ea TYPE_QUAL .

    $default  reduce using rule 184 (declspecs_sc_ts_sa_noea)


state 175

  186 declspecs_sc_ts_sa_noea: declspecs_sc_ts_sa_ea typespec_reserved_nonattr .

    $default  reduce using rule 186 (declspecs_sc_ts_sa_noea)


state 176

  195 declspecs_sc_ts_sa_ea: declspecs_sc_ts_sa_ea typespec_reserved_attr .

    $default  reduce using rule 195 (declspecs_sc_ts_sa_ea)


state 177

  192 declspecs_sc_ts_sa_noea: declspecs_sc_ts_sa_ea scspec .

    $default  reduce using rule 192 (declspecs_sc_ts_sa_noea)


state 178

   13 datadef: declspecs_ts setspecs . initdecls ';'
   18 fndef: declspecs_ts setspecs . declarator old_style_parm_decls save_filename save_lineno compstmt_or_error
   19      | declspecs_ts setspecs . declarator error

    IDENTIFIER  shift, and go to state 100
    TYPENAME    shift, and go to state 310
    '*'         shift, and go to state 311
    '('         shift, and go to state 312
    OBJECTNAME  shift, and go to state 313

    initdecls              go to state 314
    initdcl                go to state 315
    declarator             go to state 316
    after_type_declarator  go to state 317
    notype_declarator      go to state 318


state 179

   12 datadef: declspecs_nots setspecs . notype_initdecls ';'
   20 fndef: declspecs_nots setspecs . notype_declarator old_style_parm_decls save_filename save_lineno compstmt_or_error
   21      | declspecs_nots setspecs . notype_declarator error

    IDENTIFIER  shift, and go to state 100
    '*'         shift, and go to state 101
    '('         shift, and go to state 102

    notype_initdecls   go to state 319
    notype_initdcl     go to state 104
    notype_declarator  go to state 320


state 180

   14 datadef: declspecs ';' .

    $default  reduce using rule 14 (datadef)


state 181

  281 attributes: attributes attribute .

    $default  reduce using rule 281 (attributes)


state 182

  348 structsp_attr: struct_head '{' . component_decl_list '}' maybe_attribute

    DEFS  shift, and go to state 321

    $default  reduce using rule 362 (component_decl_list2)

    component_decl_list   go to state 322
    component_decl_list2  go to state 323


state 183

  347 structsp_attr: struct_head identifier . '{' component_decl_list '}' maybe_attribute
  353 structsp_nonattr: struct_head identifier .

    '{'  shift, and go to state 324

    '{'       [reduce using rule 353 (structsp_nonattr)]
    $default  reduce using rule 353 (structsp_nonattr)


state 184

  350 structsp_attr: union_head '{' . component_decl_list '}' maybe_attribute

    DEFS  shift, and go to state 321

    $default  reduce using rule 362 (component_decl_list2)

    component_decl_list   go to state 325
    component_decl_list2  go to state 323


state 185

  349 structsp_attr: union_head identifier . '{' component_decl_list '}' maybe_attribute
  354 structsp_nonattr: union_head identifier .

    '{'  shift, and go to state 326

    '{'       [reduce using rule 354 (structsp_nonattr)]
    $default  reduce using rule 354 (structsp_nonattr)


state 186

  352 structsp_attr: enum_head '{' . enumlist maybecomma_warn '}' maybe_attribute

    error       shift, and go to state 327
    IDENTIFIER  shift, and go to state 82
    TYPENAME    shift, and go to state 83
    CLASSNAME   shift, and go to state 84
    OBJECTNAME  shift, and go to state 85

    identifier  go to state 328
    enumlist    go to state 329
    enumerator  go to state 330


state 187

  351 structsp_attr: enum_head identifier . '{' enumlist maybecomma_warn '}' maybe_attribute
  355 structsp_nonattr: enum_head identifier .

    '{'  shift, and go to state 331

    '{'       [reduce using rule 355 (structsp_nonattr)]
    $default  reduce using rule 355 (structsp_nonattr)


state 188

   10 extdef_1: extension extdef .

    $default  reduce using rule 10 (extdef_1)


state 189

  612 selector: IDENTIFIER .

    $default  reduce using rule 612 (selector)


state 190

  613 selector: TYPENAME .

    $default  reduce using rule 613 (selector)


state 191

  636 reservedwords: TYPESPEC .

    $default  reduce using rule 636 (reservedwords)


state 192

  637 reservedwords: TYPE_QUAL .

    $default  reduce using rule 637 (reservedwords)


state 193

  633 reservedwords: SIZEOF .

    $default  reduce using rule 633 (reservedwords)


state 194

  617 reservedwords: ENUM .

    $default  reduce using rule 617 (reservedwords)


state 195

  618 reservedwords: STRUCT .

    $default  reduce using rule 618 (reservedwords)


state 196

  619 reservedwords: UNION .

    $default  reduce using rule 619 (reservedwords)


state 197

  620 reservedwords: IF .

    $default  reduce using rule 620 (reservedwords)


state 198

  621 reservedwords: ELSE .

    $default  reduce using rule 621 (reservedwords)


state 199

  622 reservedwords: WHILE .

    $default  reduce using rule 622 (reservedwords)


state 200

  623 reservedwords: DO .

    $default  reduce using rule 623 (reservedwords)


state 201

  624 reservedwords: FOR .

    $default  reduce using rule 624 (reservedwords)


state 202

  625 reservedwords: SWITCH .

    $default  reduce using rule 625 (reservedwords)


state 203

  626 reservedwords: CASE .

    $default  reduce using rule 626 (reservedwords)


state 204

  627 reservedwords: DEFAULT .

    $default  reduce using rule 627 (reservedwords)


state 205

  628 reservedwords: BREAK .

    $default  reduce using rule 628 (reservedwords)


state 206

  629 reservedwords: CONTINUE .

    $default  reduce using rule 629 (reservedwords)


state 207

  630 reservedwords: RETURN .

    $default  reduce using rule 630 (reservedwords)


state 208

  631 reservedwords: GOTO .

    $default  reduce using rule 631 (reservedwords)


state 209

  632 reservedwords: ASM_KEYWORD .

    $default  reduce using rule 632 (reservedwords)


state 210

  634 reservedwords: TYPEOF .

    $default  reduce using rule 634 (reservedwords)


state 211

  635 reservedwords: ALIGNOF .

    $default  reduce using rule 635 (reservedwords)


state 212

  640 keyworddecl: ':' . '(' typename ')' identifier
  641            | ':' . identifier

    IDENTIFIER  shift, and go to state 82
    TYPENAME    shift, and go to state 83
    '('         shift, and go to state 332
    CLASSNAME   shift, and go to state 84
    OBJECTNAME  shift, and go to state 85

    identifier  go to state 333


state 213

  586 methoddecl: '(' . typename ')' unaryselector
  588           | '(' . typename ')' keywordselector optparmlist

    TYPENAME      shift, and go to state 2
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 6
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ATTRIBUTE     shift, and go to state 12
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    typeof                         go to state 32
    declspecs_nosc_nots_nosa_noea  go to state 278
    declspecs_nosc_nots_nosa_ea    go to state 279
    declspecs_nosc_nots_sa_noea    go to state 280
    declspecs_nosc_nots_sa_ea      go to state 281
    declspecs_nosc_ts_nosa_noea    go to state 282
    declspecs_nosc_ts_nosa_ea      go to state 283
    declspecs_nosc_ts_sa_noea      go to state 284
    declspecs_nosc_ts_sa_ea        go to state 285
    declspecs_nosc                 go to state 286
    typespec_nonattr               go to state 53
    typespec_attr                  go to state 54
    typespec_reserved_nonattr      go to state 55
    typespec_reserved_attr         go to state 56
    typespec_nonreserved_nonattr   go to state 57
    attributes                     go to state 58
    attribute                      go to state 59
    struct_head                    go to state 61
    union_head                     go to state 62
    enum_head                      go to state 63
    structsp_attr                  go to state 64
    structsp_nonattr               go to state 65
    typename                       go to state 334
    non_empty_protocolrefs         go to state 72


state 214

  614 selector: CLASSNAME .

    $default  reduce using rule 614 (selector)


state 215

  615 selector: OBJECTNAME .

    $default  reduce using rule 615 (selector)


state 216

  576 methoddef: methodtype methoddecl . optarglist compstmt_or_error

    ';'  shift, and go to state 335

    $default  reduce using rule 590 (optarglist)

    optarglist  go to state 336


state 217

  587 methoddecl: unaryselector .

    $default  reduce using rule 587 (methoddecl)


state 218

  589 methoddecl: keywordselector . optparmlist
  611 keywordselector: keywordselector . keyworddecl

    IDENTIFIER   shift, and go to state 189
    TYPENAME     shift, and go to state 190
    TYPESPEC     shift, and go to state 191
    TYPE_QUAL    shift, and go to state 192
    SIZEOF       shift, and go to state 193
    ENUM         shift, and go to state 194
    STRUCT       shift, and go to state 195
    UNION        shift, and go to state 196
    IF           shift, and go to state 197
    ELSE         shift, and go to state 198
    WHILE        shift, and go to state 199
    DO           shift, and go to state 200
    FOR          shift, and go to state 201
    SWITCH       shift, and go to state 202
    CASE         shift, and go to state 203
    DEFAULT      shift, and go to state 204
    BREAK        shift, and go to state 205
    CONTINUE     shift, and go to state 206
    RETURN       shift, and go to state 207
    GOTO         shift, and go to state 208
    ASM_KEYWORD  shift, and go to state 209
    TYPEOF       shift, and go to state 210
    ALIGNOF      shift, and go to state 211
    ':'          shift, and go to state 212
    CLASSNAME    shift, and go to state 214
    OBJECTNAME   shift, and go to state 215
    ','          shift, and go to state 337

    $default  reduce using rule 606 (optparmlist)

    optparmlist    go to state 338
    selector       go to state 339
    reservedwords  go to state 220
    keyworddecl    go to state 340


state 219

  609 unaryselector: selector .
  638 keyworddecl: selector . ':' '(' typename ')' identifier
  639            | selector . ':' identifier

    ':'  shift, and go to state 341

    $default  reduce using rule 609 (unaryselector)


state 220

  616 selector: reservedwords .

    $default  reduce using rule 616 (selector)


state 221

  610 keywordselector: keyworddecl .

    $default  reduce using rule 610 (keywordselector)


state 222

   75 primary: IDENTIFIER .

    $default  reduce using rule 75 (primary)


state 223

   76 primary: CONSTANT .

    $default  reduce using rule 76 (primary)


state 224

   77 primary: STRING .

    $default  reduce using rule 77 (primary)


state 225

   51 sizeof: SIZEOF .

    $default  reduce using rule 51 (sizeof)


state 226

   52 alignof: ALIGNOF .

    $default  reduce using rule 52 (alignof)


state 227

   49 unary_expr: REALPART . cast_expr

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 342
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 228

   50 unary_expr: IMAGPART . cast_expr

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 343
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 229

   85 primary: VA_ARG . '(' expr_no_commas ',' typename ')'

    '('  shift, and go to state 344


state 230

   86 primary: CHOOSE_EXPR . '(' expr_no_commas ',' expr_no_commas ',' expr_no_commas ')'

    '('  shift, and go to state 345


state 231

   87 primary: TYPES_COMPATIBLE_P . '(' typename ',' typename ')'

    '('  shift, and go to state 346


state 232

   78 primary: VAR_FUNC_NAME .

    $default  reduce using rule 78 (primary)


state 233

   44 unary_expr: ANDAND . identifier

    IDENTIFIER  shift, and go to state 82
    TYPENAME    shift, and go to state 83
    CLASSNAME   shift, and go to state 84
    OBJECTNAME  shift, and go to state 85

    identifier  go to state 347


state 234

   28 unop: '&' .

    $default  reduce using rule 28 (unop)


state 235

   30 unop: '+' .

    $default  reduce using rule 30 (unop)


state 236

   29 unop: '-' .

    $default  reduce using rule 29 (unop)


state 237

   41 unary_expr: '*' . cast_expr

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 348
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 238

   32 unop: MINUSMINUS .

    $default  reduce using rule 32 (unop)


state 239

   31 unop: PLUSPLUS .

    $default  reduce using rule 31 (unop)


state 240

   55 cast_expr: '(' . typename ')' cast_expr
   79 primary: '(' . typename ')' '{' initlist_maybe_comma '}'
   80        | '(' . expr ')'
   81        | '(' . error ')'
  450 compstmt_primary_start: '(' . '{'

    error               shift, and go to state 349
    IDENTIFIER          shift, and go to state 222
    TYPENAME            shift, and go to state 2
    TYPESPEC            shift, and go to state 5
    TYPE_QUAL           shift, and go to state 6
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ENUM                shift, and go to state 7
    STRUCT              shift, and go to state 8
    UNION               shift, and go to state 9
    TYPEOF              shift, and go to state 11
    ALIGNOF             shift, and go to state 226
    ATTRIBUTE           shift, and go to state 12
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    ARITHCOMPARE        shift, and go to state 14
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    CLASSNAME           shift, and go to state 20
    PROTOCOL            shift, and go to state 244
    OBJECTNAME          shift, and go to state 22
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '{'                 shift, and go to state 350
    '@'                 shift, and go to state 247

    unop                           go to state 248
    expr                           go to state 351
    nonnull_exprlist               go to state 250
    unary_expr                     go to state 251
    sizeof                         go to state 252
    alignof                        go to state 253
    typeof                         go to state 32
    cast_expr                      go to state 254
    expr_no_commas                 go to state 255
    primary                        go to state 256
    objc_string                    go to state 257
    declspecs_nosc_nots_nosa_noea  go to state 278
    declspecs_nosc_nots_nosa_ea    go to state 279
    declspecs_nosc_nots_sa_noea    go to state 280
    declspecs_nosc_nots_sa_ea      go to state 281
    declspecs_nosc_ts_nosa_noea    go to state 282
    declspecs_nosc_ts_nosa_ea      go to state 283
    declspecs_nosc_ts_sa_noea      go to state 284
    declspecs_nosc_ts_sa_ea        go to state 285
    declspecs_nosc                 go to state 286
    typespec_nonattr               go to state 53
    typespec_attr                  go to state 54
    typespec_reserved_nonattr      go to state 55
    typespec_reserved_attr         go to state 56
    typespec_nonreserved_nonattr   go to state 57
    attributes                     go to state 58
    attribute                      go to state 59
    struct_head                    go to state 61
    union_head                     go to state 62
    enum_head                      go to state 63
    structsp_attr                  go to state 64
    structsp_nonattr               go to state 65
    typename                       go to state 352
    compstmt_primary_start         go to state 258
    extension                      go to state 259
    non_empty_protocolrefs         go to state 72
    objcmessageexpr                go to state 260
    objcselectorexpr               go to state 261
    objcprotocolexpr               go to state 262
    objcencodeexpr                 go to state 263


state 241

  651 objcmessageexpr: '[' . receiver messageargs ']'

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    CLASSNAME           shift, and go to state 353
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    expr                    go to state 354
    nonnull_exprlist        go to state 250
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 255
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    receiver                go to state 355
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 242

  658 objcselectorexpr: SELECTOR . '(' selectorarg ')'

    '('  shift, and go to state 356


state 243

  660 objcencodeexpr: ENCODE . '(' typename ')'

    '('  shift, and go to state 357


state 244

  659 objcprotocolexpr: PROTOCOL . '(' identifier ')'

    '('  shift, and go to state 358


state 245

   33 unop: '~' .

    $default  reduce using rule 33 (unop)


state 246

   34 unop: '!' .

    $default  reduce using rule 34 (unop)


state 247

   98 objc_string: '@' . STRING

    STRING  shift, and go to state 359


state 248

   43 unary_expr: unop . cast_expr

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 360
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 249

    9 extdef_1: ASM_KEYWORD '(' expr . ')' ';'

    ')'  shift, and go to state 361


state 250

   35 expr: nonnull_exprlist .
   39 nonnull_exprlist: nonnull_exprlist . ',' expr_no_commas

    ','  shift, and go to state 362

    $default  reduce using rule 35 (expr)


state 251

   54 cast_expr: unary_expr .

    $default  reduce using rule 54 (cast_expr)


state 252

   45 unary_expr: sizeof . unary_expr
   46           | sizeof . '(' typename ')'

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 363
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 364
    sizeof                  go to state 252
    alignof                 go to state 253
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 253

   47 unary_expr: alignof . unary_expr
   48           | alignof . '(' typename ')'

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 365
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 366
    sizeof                  go to state 252
    alignof                 go to state 253
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 254

   56 expr_no_commas: cast_expr .

    $default  reduce using rule 56 (expr_no_commas)


state 255

   38 nonnull_exprlist: expr_no_commas .
   57 expr_no_commas: expr_no_commas . '+' expr_no_commas
   58               | expr_no_commas . '-' expr_no_commas
   59               | expr_no_commas . '*' expr_no_commas
   60               | expr_no_commas . '/' expr_no_commas
   61               | expr_no_commas . '%' expr_no_commas
   62               | expr_no_commas . LSHIFT expr_no_commas
   63               | expr_no_commas . RSHIFT expr_no_commas
   64               | expr_no_commas . ARITHCOMPARE expr_no_commas
   65               | expr_no_commas . EQCOMPARE expr_no_commas
   66               | expr_no_commas . '&' expr_no_commas
   67               | expr_no_commas . '|' expr_no_commas
   68               | expr_no_commas . '^' expr_no_commas
   69               | expr_no_commas . ANDAND expr_no_commas
   70               | expr_no_commas . OROR expr_no_commas
   71               | expr_no_commas . '?' expr ':' expr_no_commas
   72               | expr_no_commas . '?' ':' expr_no_commas
   73               | expr_no_commas . '=' expr_no_commas
   74               | expr_no_commas . ASSIGN expr_no_commas

    '='           shift, and go to state 367
    ASSIGN        shift, and go to state 368
    '?'           shift, and go to state 369
    OROR          shift, and go to state 370
    ANDAND        shift, and go to state 371
    '|'           shift, and go to state 372
    '^'           shift, and go to state 373
    '&'           shift, and go to state 374
    EQCOMPARE     shift, and go to state 375
    ARITHCOMPARE  shift, and go to state 376
    RSHIFT        shift, and go to state 377
    LSHIFT        shift, and go to state 378
    '+'           shift, and go to state 379
    '-'           shift, and go to state 380
    '*'           shift, and go to state 381
    '/'           shift, and go to state 382
    '%'           shift, and go to state 383

    $default  reduce using rule 38 (nonnull_exprlist)


state 256

   40 unary_expr: primary .
   84 primary: primary . '(' exprlist ')'
   88        | primary . '[' expr ']'
   89        | primary . '.' identifier
   90        | primary . POINTSAT identifier
   91        | primary . PLUSPLUS
   92        | primary . MINUSMINUS

    MINUSMINUS  shift, and go to state 384
    PLUSPLUS    shift, and go to state 385
    '.'         shift, and go to state 386
    '('         shift, and go to state 387
    '['         shift, and go to state 388
    POINTSAT    shift, and go to state 389

    $default  reduce using rule 40 (unary_expr)


state 257

   97 primary: objc_string .
   99 objc_string: objc_string . '@' STRING

    '@'  shift, and go to state 390

    $default  reduce using rule 97 (primary)


state 258

   82 primary: compstmt_primary_start . compstmt_nostart ')'
   83        | compstmt_primary_start . error ')'

    error  shift, and go to state 391
    '}'    shift, and go to state 392

    error               [reduce using rule 434 (pushlevel)]
    IDENTIFIER          reduce using rule 434 (pushlevel)
    TYPENAME            reduce using rule 434 (pushlevel)
    SCSPEC              reduce using rule 434 (pushlevel)
    STATIC              reduce using rule 434 (pushlevel)
    TYPESPEC            reduce using rule 434 (pushlevel)
    TYPE_QUAL           reduce using rule 434 (pushlevel)
    CONSTANT            reduce using rule 434 (pushlevel)
    STRING              reduce using rule 434 (pushlevel)
    SIZEOF              reduce using rule 434 (pushlevel)
    ENUM                reduce using rule 434 (pushlevel)
    STRUCT              reduce using rule 434 (pushlevel)
    UNION               reduce using rule 434 (pushlevel)
    IF                  reduce using rule 434 (pushlevel)
    WHILE               reduce using rule 434 (pushlevel)
    DO                  reduce using rule 434 (pushlevel)
    FOR                 reduce using rule 434 (pushlevel)
    SWITCH              reduce using rule 434 (pushlevel)
    CASE                reduce using rule 434 (pushlevel)
    DEFAULT             reduce using rule 434 (pushlevel)
    BREAK               reduce using rule 434 (pushlevel)
    CONTINUE            reduce using rule 434 (pushlevel)
    RETURN              reduce using rule 434 (pushlevel)
    GOTO                reduce using rule 434 (pushlevel)
    ASM_KEYWORD         reduce using rule 434 (pushlevel)
    TYPEOF              reduce using rule 434 (pushlevel)
    ALIGNOF             reduce using rule 434 (pushlevel)
    ATTRIBUTE           reduce using rule 434 (pushlevel)
    EXTENSION           reduce using rule 434 (pushlevel)
    LABEL               reduce using rule 434 (pushlevel)
    REALPART            reduce using rule 434 (pushlevel)
    IMAGPART            reduce using rule 434 (pushlevel)
    VA_ARG              reduce using rule 434 (pushlevel)
    CHOOSE_EXPR         reduce using rule 434 (pushlevel)
    TYPES_COMPATIBLE_P  reduce using rule 434 (pushlevel)
    VAR_FUNC_NAME       reduce using rule 434 (pushlevel)
    ANDAND              reduce using rule 434 (pushlevel)
    '&'                 reduce using rule 434 (pushlevel)
    ARITHCOMPARE        reduce using rule 434 (pushlevel)
    '+'                 reduce using rule 434 (pushlevel)
    '-'                 reduce using rule 434 (pushlevel)
    '*'                 reduce using rule 434 (pushlevel)
    MINUSMINUS          reduce using rule 434 (pushlevel)
    PLUSPLUS            reduce using rule 434 (pushlevel)
    '('                 reduce using rule 434 (pushlevel)
    '['                 reduce using rule 434 (pushlevel)
    SELECTOR            reduce using rule 434 (pushlevel)
    ENCODE              reduce using rule 434 (pushlevel)
    CLASSNAME           reduce using rule 434 (pushlevel)
    PROTOCOL            reduce using rule 434 (pushlevel)
    OBJECTNAME          reduce using rule 434 (pushlevel)
    ';'                 reduce using rule 434 (pushlevel)
    '~'                 reduce using rule 434 (pushlevel)
    '!'                 reduce using rule 434 (pushlevel)
    '{'                 reduce using rule 434 (pushlevel)
    '@'                 reduce using rule 434 (pushlevel)

    pushlevel         go to state 393
    compstmt_nostart  go to state 394


state 259

   42 unary_expr: extension . cast_expr

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 395
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 260

   93 primary: objcmessageexpr .

    $default  reduce using rule 93 (primary)


state 261

   94 primary: objcselectorexpr .

    $default  reduce using rule 94 (primary)


state 262

   95 primary: objcprotocolexpr .

    $default  reduce using rule 95 (primary)


state 263

   96 primary: objcencodeexpr .

    $default  reduce using rule 96 (primary)


state 264

  282 attribute: ATTRIBUTE '(' '(' . attribute_list ')' ')'

    IDENTIFIER  shift, and go to state 82
    TYPENAME    shift, and go to state 83
    SCSPEC      shift, and go to state 3
    STATIC      shift, and go to state 4
    TYPESPEC    shift, and go to state 396
    TYPE_QUAL   shift, and go to state 397
    CLASSNAME   shift, and go to state 84
    OBJECTNAME  shift, and go to state 85

    $default  reduce using rule 285 (attrib)

    identifier      go to state 398
    attribute_list  go to state 399
    attrib          go to state 400
    any_word        go to state 401
    scspec          go to state 402


state 265

  556 non_empty_protocolrefs: ARITHCOMPARE identifier_list ARITHCOMPARE .

    $default  reduce using rule 556 (non_empty_protocolrefs)


state 266

  539 identifier_list: identifier_list ',' . identifier

    IDENTIFIER  shift, and go to state 82
    TYPENAME    shift, and go to state 83
    CLASSNAME   shift, and go to state 84
    OBJECTNAME  shift, and go to state 85

    identifier  go to state 403


state 267

  544 classdef: INTERFACE identifier ':' . identifier protocolrefs '{' ivar_decl_list '}' methodprotolist END
  545         | INTERFACE identifier ':' . identifier protocolrefs methodprotolist END

    IDENTIFIER  shift, and go to state 82
    TYPENAME    shift, and go to state 83
    CLASSNAME   shift, and go to state 84
    OBJECTNAME  shift, and go to state 85

    identifier  go to state 404


state 268

  550 classdef: INTERFACE identifier '(' . identifier ')' protocolrefs methodprotolist END

    IDENTIFIER  shift, and go to state 82
    TYPENAME    shift, and go to state 83
    CLASSNAME   shift, and go to state 84
    OBJECTNAME  shift, and go to state 85

    identifier  go to state 405


state 269

  542 classdef: INTERFACE identifier protocolrefs . '{' ivar_decl_list '}' methodprotolist END
  543         | INTERFACE identifier protocolrefs . methodprotolist END

    error         shift, and go to state 1
    TYPENAME      shift, and go to state 2
    SCSPEC        shift, and go to state 3
    STATIC        shift, and go to state 4
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 6
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ATTRIBUTE     shift, and go to state 12
    ARITHCOMPARE  shift, and go to state 14
    '+'           shift, and go to state 15
    '-'           shift, and go to state 16
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22
    ';'           shift, and go to state 25
    '{'           shift, and go to state 406

    IDENTIFIER  reduce using rule 113 (setspecs)
    '*'         reduce using rule 113 (setspecs)
    '('         reduce using rule 113 (setspecs)
    END         reduce using rule 577 (methodprotolist)

    datadef                        go to state 407
    typeof                         go to state 32
    setspecs                       go to state 408
    declspecs_nosc_nots_nosa_noea  go to state 34
    declspecs_nosc_nots_nosa_ea    go to state 35
    declspecs_nosc_nots_sa_noea    go to state 36
    declspecs_nosc_nots_sa_ea      go to state 37
    declspecs_nosc_ts_nosa_noea    go to state 38
    declspecs_nosc_ts_nosa_ea      go to state 39
    declspecs_nosc_ts_sa_noea      go to state 40
    declspecs_nosc_ts_sa_ea        go to state 41
    declspecs_sc_nots_nosa_noea    go to state 42
    declspecs_sc_nots_nosa_ea      go to state 43
    declspecs_sc_nots_sa_noea      go to state 44
    declspecs_sc_nots_sa_ea        go to state 45
    declspecs_sc_ts_nosa_noea      go to state 46
    declspecs_sc_ts_nosa_ea        go to state 47
    declspecs_sc_ts_sa_noea        go to state 48
    declspecs_sc_ts_sa_ea          go to state 49
    declspecs_ts                   go to state 409
    declspecs_nots                 go to state 410
    declspecs                      go to state 52
    typespec_nonattr               go to state 53
    typespec_attr                  go to state 54
    typespec_reserved_nonattr      go to state 55
    typespec_reserved_attr         go to state 56
    typespec_nonreserved_nonattr   go to state 57
    attributes                     go to state 58
    attribute                      go to state 59
    scspec                         go to state 60
    struct_head                    go to state 61
    union_head                     go to state 62
    enum_head                      go to state 63
    structsp_attr                  go to state 64
    structsp_nonattr               go to state 65
    non_empty_protocolrefs         go to state 72
    methodtype                     go to state 411
    methodprotolist                go to state 412
    methodprotolist2               go to state 413
    methodproto                    go to state 414


state 270

  548 classdef: IMPLEMENTATION identifier ':' . identifier '{' ivar_decl_list '}'
  549         | IMPLEMENTATION identifier ':' . identifier

    IDENTIFIER  shift, and go to state 82
    TYPENAME    shift, and go to state 83
    CLASSNAME   shift, and go to state 84
    OBJECTNAME  shift, and go to state 85

    identifier  go to state 415


state 271

  551 classdef: IMPLEMENTATION identifier '(' . identifier ')'

    IDENTIFIER  shift, and go to state 82
    TYPENAME    shift, and go to state 83
    CLASSNAME   shift, and go to state 84
    OBJECTNAME  shift, and go to state 85

    identifier  go to state 416


state 272

  546 classdef: IMPLEMENTATION identifier '{' . ivar_decl_list '}'

    $default  reduce using rule 562 (ivar_decls)

    ivar_decl_list  go to state 417
    ivar_decls      go to state 418


state 273

  552 protocoldef: PROTOCOL identifier protocolrefs . methodprotolist END

    error         shift, and go to state 1
    TYPENAME      shift, and go to state 2
    SCSPEC        shift, and go to state 3
    STATIC        shift, and go to state 4
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 6
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ATTRIBUTE     shift, and go to state 12
    ARITHCOMPARE  shift, and go to state 14
    '+'           shift, and go to state 15
    '-'           shift, and go to state 16
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22
    ';'           shift, and go to state 25

    IDENTIFIER  reduce using rule 113 (setspecs)
    '*'         reduce using rule 113 (setspecs)
    '('         reduce using rule 113 (setspecs)
    END         reduce using rule 577 (methodprotolist)

    datadef                        go to state 407
    typeof                         go to state 32
    setspecs                       go to state 408
    declspecs_nosc_nots_nosa_noea  go to state 34
    declspecs_nosc_nots_nosa_ea    go to state 35
    declspecs_nosc_nots_sa_noea    go to state 36
    declspecs_nosc_nots_sa_ea      go to state 37
    declspecs_nosc_ts_nosa_noea    go to state 38
    declspecs_nosc_ts_nosa_ea      go to state 39
    declspecs_nosc_ts_sa_noea      go to state 40
    declspecs_nosc_ts_sa_ea        go to state 41
    declspecs_sc_nots_nosa_noea    go to state 42
    declspecs_sc_nots_nosa_ea      go to state 43
    declspecs_sc_nots_sa_noea      go to state 44
    declspecs_sc_nots_sa_ea        go to state 45
    declspecs_sc_ts_nosa_noea      go to state 46
    declspecs_sc_ts_nosa_ea        go to state 47
    declspecs_sc_ts_sa_noea        go to state 48
    declspecs_sc_ts_sa_ea          go to state 49
    declspecs_ts                   go to state 409
    declspecs_nots                 go to state 410
    declspecs                      go to state 52
    typespec_nonattr               go to state 53
    typespec_attr                  go to state 54
    typespec_reserved_nonattr      go to state 55
    typespec_reserved_attr         go to state 56
    typespec_nonreserved_nonattr   go to state 57
    attributes                     go to state 58
    attribute                      go to state 59
    scspec                         go to state 60
    struct_head                    go to state 61
    union_head                     go to state 62
    enum_head                      go to state 63
    structsp_attr                  go to state 64
    structsp_nonattr               go to state 65
    non_empty_protocolrefs         go to state 72
    methodtype                     go to state 411
    methodprotolist                go to state 419
    methodprotolist2               go to state 413
    methodproto                    go to state 414


state 274

  553 protocoldef: PROTOCOL identifier_list ';' .

    $default  reduce using rule 553 (protocoldef)


state 275

  540 classdecl: CLASS identifier_list ';' .

    $default  reduce using rule 540 (classdecl)


state 276

  541 aliasdecl: ALIAS identifier identifier . ';'

    ';'  shift, and go to state 420


state 277

  266 typespec_nonreserved_nonattr: typeof '(' expr . ')'

    ')'  shift, and go to state 421


state 278

  122 declspecs_nosc_nots_nosa_noea: declspecs_nosc_nots_nosa_noea . TYPE_QUAL
  124 declspecs_nosc_nots_nosa_ea: declspecs_nosc_nots_nosa_noea . attributes
  134 declspecs_nosc_ts_nosa_noea: declspecs_nosc_nots_nosa_noea . typespec_nonattr
  140 declspecs_nosc_ts_nosa_ea: declspecs_nosc_nots_nosa_noea . typespec_attr
  234 declspecs_nosc: declspecs_nosc_nots_nosa_noea .

    TYPENAME      shift, and go to state 2
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 106
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ATTRIBUTE     shift, and go to state 12
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    $default  reduce using rule 234 (declspecs_nosc)

    typeof                        go to state 32
    typespec_nonattr              go to state 107
    typespec_attr                 go to state 108
    typespec_reserved_nonattr     go to state 55
    typespec_reserved_attr        go to state 56
    typespec_nonreserved_nonattr  go to state 57
    attributes                    go to state 109
    attribute                     go to state 59
    struct_head                   go to state 61
    union_head                    go to state 62
    enum_head                     go to state 63
    structsp_attr                 go to state 64
    structsp_nonattr              go to state 65
    non_empty_protocolrefs        go to state 72


state 279

  123 declspecs_nosc_nots_nosa_noea: declspecs_nosc_nots_nosa_ea . TYPE_QUAL
  135 declspecs_nosc_ts_nosa_noea: declspecs_nosc_nots_nosa_ea . typespec_nonattr
  141 declspecs_nosc_ts_nosa_ea: declspecs_nosc_nots_nosa_ea . typespec_attr
  235 declspecs_nosc: declspecs_nosc_nots_nosa_ea .

    TYPENAME      shift, and go to state 2
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 111
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    $default  reduce using rule 235 (declspecs_nosc)

    typeof                        go to state 32
    typespec_nonattr              go to state 112
    typespec_attr                 go to state 113
    typespec_reserved_nonattr     go to state 55
    typespec_reserved_attr        go to state 56
    typespec_nonreserved_nonattr  go to state 57
    struct_head                   go to state 61
    union_head                    go to state 62
    enum_head                     go to state 63
    structsp_attr                 go to state 64
    structsp_nonattr              go to state 65
    non_empty_protocolrefs        go to state 72


state 280

  125 declspecs_nosc_nots_sa_noea: declspecs_nosc_nots_sa_noea . TYPE_QUAL
  128 declspecs_nosc_nots_sa_ea: declspecs_nosc_nots_sa_noea . attributes
  146 declspecs_nosc_ts_sa_noea: declspecs_nosc_nots_sa_noea . typespec_nonattr
  151 declspecs_nosc_ts_sa_ea: declspecs_nosc_nots_sa_noea . typespec_attr
  236 declspecs_nosc: declspecs_nosc_nots_sa_noea .

    TYPENAME      shift, and go to state 2
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 115
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ATTRIBUTE     shift, and go to state 12
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    $default  reduce using rule 236 (declspecs_nosc)

    typeof                        go to state 32
    typespec_nonattr              go to state 116
    typespec_attr                 go to state 117
    typespec_reserved_nonattr     go to state 55
    typespec_reserved_attr        go to state 56
    typespec_nonreserved_nonattr  go to state 57
    attributes                    go to state 118
    attribute                     go to state 59
    struct_head                   go to state 61
    union_head                    go to state 62
    enum_head                     go to state 63
    structsp_attr                 go to state 64
    structsp_nonattr              go to state 65
    non_empty_protocolrefs        go to state 72


state 281

  126 declspecs_nosc_nots_sa_noea: declspecs_nosc_nots_sa_ea . TYPE_QUAL
  147 declspecs_nosc_ts_sa_noea: declspecs_nosc_nots_sa_ea . typespec_nonattr
  152 declspecs_nosc_ts_sa_ea: declspecs_nosc_nots_sa_ea . typespec_attr
  237 declspecs_nosc: declspecs_nosc_nots_sa_ea .

    TYPENAME      shift, and go to state 2
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 120
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    $default  reduce using rule 237 (declspecs_nosc)

    typeof                        go to state 32
    typespec_nonattr              go to state 121
    typespec_attr                 go to state 122
    typespec_reserved_nonattr     go to state 55
    typespec_reserved_attr        go to state 56
    typespec_nonreserved_nonattr  go to state 57
    struct_head                   go to state 61
    union_head                    go to state 62
    enum_head                     go to state 63
    structsp_attr                 go to state 64
    structsp_nonattr              go to state 65
    non_empty_protocolrefs        go to state 72


state 282

  130 declspecs_nosc_ts_nosa_noea: declspecs_nosc_ts_nosa_noea . TYPE_QUAL
  132                            | declspecs_nosc_ts_nosa_noea . typespec_reserved_nonattr
  137 declspecs_nosc_ts_nosa_ea: declspecs_nosc_ts_nosa_noea . attributes
  138                          | declspecs_nosc_ts_nosa_noea . typespec_reserved_attr
  230 declspecs_nosc: declspecs_nosc_ts_nosa_noea .

    TYPESPEC   shift, and go to state 5
    TYPE_QUAL  shift, and go to state 124
    ENUM       shift, and go to state 7
    STRUCT     shift, and go to state 8
    UNION      shift, and go to state 9
    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 230 (declspecs_nosc)

    typespec_reserved_nonattr  go to state 125
    typespec_reserved_attr     go to state 126
    attributes                 go to state 127
    attribute                  go to state 59
    struct_head                go to state 61
    union_head                 go to state 62
    enum_head                  go to state 63
    structsp_attr              go to state 64
    structsp_nonattr           go to state 65


state 283

  131 declspecs_nosc_ts_nosa_noea: declspecs_nosc_ts_nosa_ea . TYPE_QUAL
  133                            | declspecs_nosc_ts_nosa_ea . typespec_reserved_nonattr
  139 declspecs_nosc_ts_nosa_ea: declspecs_nosc_ts_nosa_ea . typespec_reserved_attr
  231 declspecs_nosc: declspecs_nosc_ts_nosa_ea .

    TYPESPEC   shift, and go to state 5
    TYPE_QUAL  shift, and go to state 129
    ENUM       shift, and go to state 7
    STRUCT     shift, and go to state 8
    UNION      shift, and go to state 9

    $default  reduce using rule 231 (declspecs_nosc)

    typespec_reserved_nonattr  go to state 130
    typespec_reserved_attr     go to state 131
    struct_head                go to state 61
    union_head                 go to state 62
    enum_head                  go to state 63
    structsp_attr              go to state 64
    structsp_nonattr           go to state 65


state 284

  142 declspecs_nosc_ts_sa_noea: declspecs_nosc_ts_sa_noea . TYPE_QUAL
  144                          | declspecs_nosc_ts_sa_noea . typespec_reserved_nonattr
  148 declspecs_nosc_ts_sa_ea: declspecs_nosc_ts_sa_noea . attributes
  149                        | declspecs_nosc_ts_sa_noea . typespec_reserved_attr
  232 declspecs_nosc: declspecs_nosc_ts_sa_noea .

    TYPESPEC   shift, and go to state 5
    TYPE_QUAL  shift, and go to state 133
    ENUM       shift, and go to state 7
    STRUCT     shift, and go to state 8
    UNION      shift, and go to state 9
    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 232 (declspecs_nosc)

    typespec_reserved_nonattr  go to state 134
    typespec_reserved_attr     go to state 135
    attributes                 go to state 136
    attribute                  go to state 59
    struct_head                go to state 61
    union_head                 go to state 62
    enum_head                  go to state 63
    structsp_attr              go to state 64
    structsp_nonattr           go to state 65


state 285

  143 declspecs_nosc_ts_sa_noea: declspecs_nosc_ts_sa_ea . TYPE_QUAL
  145                          | declspecs_nosc_ts_sa_ea . typespec_reserved_nonattr
  150 declspecs_nosc_ts_sa_ea: declspecs_nosc_ts_sa_ea . typespec_reserved_attr
  233 declspecs_nosc: declspecs_nosc_ts_sa_ea .

    TYPESPEC   shift, and go to state 5
    TYPE_QUAL  shift, and go to state 138
    ENUM       shift, and go to state 7
    STRUCT     shift, and go to state 8
    UNION      shift, and go to state 9

    $default  reduce using rule 233 (declspecs_nosc)

    typespec_reserved_nonattr  go to state 139
    typespec_reserved_attr     go to state 140
    struct_head                go to state 61
    union_head                 go to state 62
    enum_head                  go to state 63
    structsp_attr              go to state 64
    structsp_nonattr           go to state 65


state 286

  387 typename: declspecs_nosc . absdcl

    '*'  shift, and go to state 422
    '('  shift, and go to state 423
    '['  shift, and go to state 301

    $default  reduce using rule 388 (absdcl)

    absdcl            go to state 424
    absdcl1           go to state 425
    absdcl1_noea      go to state 426
    absdcl1_ea        go to state 427
    direct_absdcl1    go to state 428
    array_declarator  go to state 429


state 287

  267 typespec_nonreserved_nonattr: typeof '(' typename . ')'

    ')'  shift, and go to state 430


state 288

  122 declspecs_nosc_nots_nosa_noea: declspecs_nosc_nots_nosa_noea . TYPE_QUAL
  124 declspecs_nosc_nots_nosa_ea: declspecs_nosc_nots_nosa_noea . attributes
  226 declspecs_nosc_nots: declspecs_nosc_nots_nosa_noea .

    TYPE_QUAL  shift, and go to state 106
    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 226 (declspecs_nosc_nots)

    attributes  go to state 109
    attribute   go to state 59


state 289

  123 declspecs_nosc_nots_nosa_noea: declspecs_nosc_nots_nosa_ea . TYPE_QUAL
  227 declspecs_nosc_nots: declspecs_nosc_nots_nosa_ea .

    TYPE_QUAL  shift, and go to state 111

    $default  reduce using rule 227 (declspecs_nosc_nots)


state 290

  125 declspecs_nosc_nots_sa_noea: declspecs_nosc_nots_sa_noea . TYPE_QUAL
  128 declspecs_nosc_nots_sa_ea: declspecs_nosc_nots_sa_noea . attributes
  228 declspecs_nosc_nots: declspecs_nosc_nots_sa_noea .

    TYPE_QUAL  shift, and go to state 115
    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 228 (declspecs_nosc_nots)

    attributes  go to state 118
    attribute   go to state 59


state 291

  126 declspecs_nosc_nots_sa_noea: declspecs_nosc_nots_sa_ea . TYPE_QUAL
  229 declspecs_nosc_nots: declspecs_nosc_nots_sa_ea .

    TYPE_QUAL  shift, and go to state 120

    $default  reduce using rule 229 (declspecs_nosc_nots)


state 292

  255 maybe_type_quals_attrs: declspecs_nosc_nots .

    $default  reduce using rule 255 (maybe_type_quals_attrs)


state 293

  338 notype_declarator: '*' maybe_type_quals_attrs . notype_declarator

    IDENTIFIER  shift, and go to state 100
    '*'         shift, and go to state 101
    '('         shift, and go to state 102

    notype_declarator  go to state 431


state 294

  337 notype_declarator: '(' maybe_attribute . notype_declarator ')'

    IDENTIFIER  shift, and go to state 100
    '*'         shift, and go to state 101
    '('         shift, and go to state 102

    notype_declarator  go to state 432


state 295

  279 maybe_attribute: attributes .
  281 attributes: attributes . attribute

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 279 (maybe_attribute)

    attribute  go to state 181


state 296

   11 datadef: setspecs notype_initdecls ';' .

    $default  reduce using rule 11 (datadef)


state 297

  271 notype_initdecls: notype_initdecls ',' . maybe_resetattrs notype_initdcl

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 278 (maybe_attribute)

    maybe_resetattrs  go to state 433
    maybe_attribute   go to state 434
    attributes        go to state 295
    attribute         go to state 59


state 298

   23 fndef: setspecs notype_declarator error .
  433 errstmt: error . ';'

    ';'  shift, and go to state 435

    ';'       [reduce using rule 23 (fndef)]
    $default  reduce using rule 23 (fndef)


state 299

  273 maybeasm: ASM_KEYWORD . '(' STRING ')'

    '('  shift, and go to state 436


state 300

  336 notype_declarator: notype_declarator '(' . parmlist_or_identifiers

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 278 (maybe_attribute)

    maybe_attribute          go to state 437
    attributes               go to state 295
    attribute                go to state 59
    parmlist_or_identifiers  go to state 438


state 301

  404 array_declarator: '[' . maybe_type_quals_attrs expr ']'
  405                 | '[' . maybe_type_quals_attrs ']'
  406                 | '[' . maybe_type_quals_attrs '*' ']'
  407                 | '[' . STATIC maybe_type_quals_attrs expr ']'
  408                 | '[' . declspecs_nosc_nots STATIC expr ']'

    STATIC     shift, and go to state 439
    TYPE_QUAL  shift, and go to state 6
    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 254 (maybe_type_quals_attrs)

    declspecs_nosc_nots_nosa_noea  go to state 288
    declspecs_nosc_nots_nosa_ea    go to state 289
    declspecs_nosc_nots_sa_noea    go to state 290
    declspecs_nosc_nots_sa_ea      go to state 291
    declspecs_nosc_nots            go to state 440
    maybe_type_quals_attrs         go to state 441
    attributes                     go to state 58
    attribute                      go to state 59


state 302

   22 fndef: setspecs notype_declarator old_style_parm_decls . save_filename save_lineno compstmt_or_error

    $default  reduce using rule 456 (save_filename)

    save_filename  go to state 442


state 303

  100 old_style_parm_decls: old_style_parm_decls_1 .

    $default  reduce using rule 100 (old_style_parm_decls)


state 304

  104 datadecls: lineno_datadecl .
  107          | lineno_datadecl . errstmt

    error  shift, and go to state 443

    error         [reduce using rule 104 (datadecls)]
    TYPENAME      reduce using rule 104 (datadecls)
    SCSPEC        reduce using rule 104 (datadecls)
    STATIC        reduce using rule 104 (datadecls)
    TYPESPEC      reduce using rule 104 (datadecls)
    TYPE_QUAL     reduce using rule 104 (datadecls)
    ENUM          reduce using rule 104 (datadecls)
    STRUCT        reduce using rule 104 (datadecls)
    UNION         reduce using rule 104 (datadecls)
    TYPEOF        reduce using rule 104 (datadecls)
    ARITHCOMPARE  reduce using rule 104 (datadecls)
    CLASSNAME     reduce using rule 104 (datadecls)
    OBJECTNAME    reduce using rule 104 (datadecls)
    '{'           reduce using rule 104 (datadecls)

    errstmt  go to state 444


state 305

  102 old_style_parm_decls_1: datadecls .
  106 datadecls: datadecls . lineno_datadecl

    error     reduce using rule 102 (old_style_parm_decls_1)
    '{'       reduce using rule 102 (old_style_parm_decls_1)
    $default  reduce using rule 456 (save_filename)

    lineno_datadecl  go to state 445
    save_filename    go to state 309


state 306

  276 notype_initdcl: notype_declarator maybeasm . maybe_attribute '=' init
  277               | notype_declarator maybeasm . maybe_attribute

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 278 (maybe_attribute)

    maybe_attribute  go to state 446
    attributes       go to state 295
    attribute        go to state 59


state 307

  339 notype_declarator: notype_declarator array_declarator .

    $default  reduce using rule 339 (notype_declarator)


state 308

  105 datadecls: errstmt .

    $default  reduce using rule 105 (datadecls)


state 309

  103 lineno_datadecl: save_filename . save_lineno datadecl

    $default  reduce using rule 457 (save_lineno)

    save_lineno  go to state 447


state 310

  323 after_type_declarator: TYPENAME .

    $default  reduce using rule 323 (after_type_declarator)


state 311

  322 after_type_declarator: '*' . maybe_type_quals_attrs after_type_declarator
  338 notype_declarator: '*' . maybe_type_quals_attrs notype_declarator

    TYPE_QUAL  shift, and go to state 6
    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 254 (maybe_type_quals_attrs)

    declspecs_nosc_nots_nosa_noea  go to state 288
    declspecs_nosc_nots_nosa_ea    go to state 289
    declspecs_nosc_nots_sa_noea    go to state 290
    declspecs_nosc_nots_sa_ea      go to state 291
    declspecs_nosc_nots            go to state 292
    maybe_type_quals_attrs         go to state 448
    attributes                     go to state 58
    attribute                      go to state 59


state 312

  319 after_type_declarator: '(' . maybe_attribute after_type_declarator ')'
  337 notype_declarator: '(' . maybe_attribute notype_declarator ')'

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 278 (maybe_attribute)

    maybe_attribute  go to state 449
    attributes       go to state 295
    attribute        go to state 59


state 313

  324 after_type_declarator: OBJECTNAME .

    $default  reduce using rule 324 (after_type_declarator)


state 314

   13 datadef: declspecs_ts setspecs initdecls . ';'
  269 initdecls: initdecls . ',' maybe_resetattrs initdcl

    ';'  shift, and go to state 450
    ','  shift, and go to state 451


state 315

  268 initdecls: initdcl .

    $default  reduce using rule 268 (initdecls)


state 316

   18 fndef: declspecs_ts setspecs declarator . old_style_parm_decls save_filename save_lineno compstmt_or_error
   19      | declspecs_ts setspecs declarator . error
  274 initdcl: declarator . maybeasm maybe_attribute '=' init
  275        | declarator . maybeasm maybe_attribute

    error        shift, and go to state 452
    ASM_KEYWORD  shift, and go to state 299

    error         [reduce using rule 101 (old_style_parm_decls_1)]
    TYPENAME      reduce using rule 456 (save_filename)
    SCSPEC        reduce using rule 456 (save_filename)
    STATIC        reduce using rule 456 (save_filename)
    TYPESPEC      reduce using rule 456 (save_filename)
    TYPE_QUAL     reduce using rule 456 (save_filename)
    ENUM          reduce using rule 456 (save_filename)
    STRUCT        reduce using rule 456 (save_filename)
    UNION         reduce using rule 456 (save_filename)
    TYPEOF        reduce using rule 456 (save_filename)
    ATTRIBUTE     reduce using rule 272 (maybeasm)
    '='           reduce using rule 272 (maybeasm)
    ARITHCOMPARE  reduce using rule 456 (save_filename)
    CLASSNAME     reduce using rule 456 (save_filename)
    OBJECTNAME    reduce using rule 456 (save_filename)
    ';'           reduce using rule 272 (maybeasm)
    ','           reduce using rule 272 (maybeasm)
    '{'           reduce using rule 101 (old_style_parm_decls_1)

    old_style_parm_decls    go to state 453
    old_style_parm_decls_1  go to state 303
    lineno_datadecl         go to state 304
    datadecls               go to state 305
    maybeasm                go to state 454
    errstmt                 go to state 308
    save_filename           go to state 309


state 317

  317 declarator: after_type_declarator .
  320 after_type_declarator: after_type_declarator . '(' parmlist_or_identifiers
  321                      | after_type_declarator . array_declarator

    '('  shift, and go to state 455
    '['  shift, and go to state 301

    $default  reduce using rule 317 (declarator)

    array_declarator  go to state 456


state 318

  318 declarator: notype_declarator .
  336 notype_declarator: notype_declarator . '(' parmlist_or_identifiers
  339                  | notype_declarator . array_declarator

    '('  shift, and go to state 300
    '['  shift, and go to state 301

    $default  reduce using rule 318 (declarator)

    array_declarator  go to state 307


state 319

   12 datadef: declspecs_nots setspecs notype_initdecls . ';'
  271 notype_initdecls: notype_initdecls . ',' maybe_resetattrs notype_initdcl

    ';'  shift, and go to state 457
    ','  shift, and go to state 297


state 320

   20 fndef: declspecs_nots setspecs notype_declarator . old_style_parm_decls save_filename save_lineno compstmt_or_error
   21      | declspecs_nots setspecs notype_declarator . error
  276 notype_initdcl: notype_declarator . maybeasm maybe_attribute '=' init
  277               | notype_declarator . maybeasm maybe_attribute
  336 notype_declarator: notype_declarator . '(' parmlist_or_identifiers
  339                  | notype_declarator . array_declarator

    error        shift, and go to state 458
    ASM_KEYWORD  shift, and go to state 299
    '('          shift, and go to state 300
    '['          shift, and go to state 301

    error         [reduce using rule 101 (old_style_parm_decls_1)]
    TYPENAME      reduce using rule 456 (save_filename)
    SCSPEC        reduce using rule 456 (save_filename)
    STATIC        reduce using rule 456 (save_filename)
    TYPESPEC      reduce using rule 456 (save_filename)
    TYPE_QUAL     reduce using rule 456 (save_filename)
    ENUM          reduce using rule 456 (save_filename)
    STRUCT        reduce using rule 456 (save_filename)
    UNION         reduce using rule 456 (save_filename)
    TYPEOF        reduce using rule 456 (save_filename)
    ATTRIBUTE     reduce using rule 272 (maybeasm)
    '='           reduce using rule 272 (maybeasm)
    ARITHCOMPARE  reduce using rule 456 (save_filename)
    CLASSNAME     reduce using rule 456 (save_filename)
    OBJECTNAME    reduce using rule 456 (save_filename)
    ';'           reduce using rule 272 (maybeasm)
    ','           reduce using rule 272 (maybeasm)
    '{'           reduce using rule 101 (old_style_parm_decls_1)

    old_style_parm_decls    go to state 459
    old_style_parm_decls_1  go to state 303
    lineno_datadecl         go to state 304
    datadecls               go to state 305
    maybeasm                go to state 306
    array_declarator        go to state 307
    errstmt                 go to state 308
    save_filename           go to state 309


state 321

  365 component_decl_list2: DEFS . '(' CLASSNAME ')'

    '('  shift, and go to state 460


state 322

  348 structsp_attr: struct_head '{' component_decl_list . '}' maybe_attribute

    '}'  shift, and go to state 461


state 323

  360 component_decl_list: component_decl_list2 .
  361                    | component_decl_list2 . component_decl
  363 component_decl_list2: component_decl_list2 . component_decl ';'
  364                     | component_decl_list2 . ';'

    error         shift, and go to state 462
    TYPENAME      shift, and go to state 2
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 6
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ATTRIBUTE     shift, and go to state 12
    EXTENSION     shift, and go to state 13
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22
    ';'           shift, and go to state 463

    '}'  reduce using rule 360 (component_decl_list)

    typeof                         go to state 32
    declspecs_nosc_nots_nosa_noea  go to state 464
    declspecs_nosc_nots_nosa_ea    go to state 465
    declspecs_nosc_nots_sa_noea    go to state 466
    declspecs_nosc_nots_sa_ea      go to state 467
    declspecs_nosc_ts_nosa_noea    go to state 468
    declspecs_nosc_ts_nosa_ea      go to state 469
    declspecs_nosc_ts_sa_noea      go to state 470
    declspecs_nosc_ts_sa_ea        go to state 471
    declspecs_nosc_ts              go to state 472
    declspecs_nosc_nots            go to state 473
    typespec_nonattr               go to state 53
    typespec_attr                  go to state 54
    typespec_reserved_nonattr      go to state 55
    typespec_reserved_attr         go to state 56
    typespec_nonreserved_nonattr   go to state 57
    attributes                     go to state 58
    attribute                      go to state 59
    struct_head                    go to state 61
    union_head                     go to state 62
    enum_head                      go to state 63
    structsp_attr                  go to state 64
    structsp_nonattr               go to state 65
    component_decl                 go to state 474
    extension                      go to state 475
    non_empty_protocolrefs         go to state 72


state 324

  347 structsp_attr: struct_head identifier '{' . component_decl_list '}' maybe_attribute

    DEFS  shift, and go to state 321

    $default  reduce using rule 362 (component_decl_list2)

    component_decl_list   go to state 476
    component_decl_list2  go to state 323


state 325

  350 structsp_attr: union_head '{' component_decl_list . '}' maybe_attribute

    '}'  shift, and go to state 477


state 326

  349 structsp_attr: union_head identifier '{' . component_decl_list '}' maybe_attribute

    DEFS  shift, and go to state 321

    $default  reduce using rule 362 (component_decl_list2)

    component_decl_list   go to state 478
    component_decl_list2  go to state 323


state 327

  384 enumlist: error .

    $default  reduce using rule 384 (enumlist)


state 328

  385 enumerator: identifier .
  386           | identifier . '=' expr_no_commas

    '='  shift, and go to state 479

    $default  reduce using rule 385 (enumerator)


state 329

  352 structsp_attr: enum_head '{' enumlist . maybecomma_warn '}' maybe_attribute
  383 enumlist: enumlist . ',' enumerator

    ','  shift, and go to state 480

    $default  reduce using rule 358 (maybecomma_warn)

    maybecomma_warn  go to state 481


state 330

  382 enumlist: enumerator .

    $default  reduce using rule 382 (enumlist)


state 331

  351 structsp_attr: enum_head identifier '{' . enumlist maybecomma_warn '}' maybe_attribute

    error       shift, and go to state 327
    IDENTIFIER  shift, and go to state 82
    TYPENAME    shift, and go to state 83
    CLASSNAME   shift, and go to state 84
    OBJECTNAME  shift, and go to state 85

    identifier  go to state 328
    enumlist    go to state 482
    enumerator  go to state 330


state 332

  640 keyworddecl: ':' '(' . typename ')' identifier

    TYPENAME      shift, and go to state 2
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 6
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ATTRIBUTE     shift, and go to state 12
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    typeof                         go to state 32
    declspecs_nosc_nots_nosa_noea  go to state 278
    declspecs_nosc_nots_nosa_ea    go to state 279
    declspecs_nosc_nots_sa_noea    go to state 280
    declspecs_nosc_nots_sa_ea      go to state 281
    declspecs_nosc_ts_nosa_noea    go to state 282
    declspecs_nosc_ts_nosa_ea      go to state 283
    declspecs_nosc_ts_sa_noea      go to state 284
    declspecs_nosc_ts_sa_ea        go to state 285
    declspecs_nosc                 go to state 286
    typespec_nonattr               go to state 53
    typespec_attr                  go to state 54
    typespec_reserved_nonattr      go to state 55
    typespec_reserved_attr         go to state 56
    typespec_nonreserved_nonattr   go to state 57
    attributes                     go to state 58
    attribute                      go to state 59
    struct_head                    go to state 61
    union_head                     go to state 62
    enum_head                      go to state 63
    structsp_attr                  go to state 64
    structsp_nonattr               go to state 65
    typename                       go to state 483
    non_empty_protocolrefs         go to state 72


state 333

  641 keyworddecl: ':' identifier .

    $default  reduce using rule 641 (keyworddecl)


state 334

  586 methoddecl: '(' typename . ')' unaryselector
  588           | '(' typename . ')' keywordselector optparmlist

    ')'  shift, and go to state 484


state 335

  591 optarglist: ';' . myxdecls

    error         shift, and go to state 443
    TYPENAME      shift, and go to state 2
    SCSPEC        shift, and go to state 3
    STATIC        shift, and go to state 4
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 6
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ATTRIBUTE     shift, and go to state 12
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    error  [reduce using rule 592 (myxdecls)]
    '{'    reduce using rule 592 (myxdecls)

    typeof                         go to state 32
    declspecs_nosc_nots_nosa_noea  go to state 485
    declspecs_nosc_nots_nosa_ea    go to state 486
    declspecs_nosc_nots_sa_noea    go to state 487
    declspecs_nosc_nots_sa_ea      go to state 488
    declspecs_nosc_ts_nosa_noea    go to state 489
    declspecs_nosc_ts_nosa_ea      go to state 490
    declspecs_nosc_ts_sa_noea      go to state 491
    declspecs_nosc_ts_sa_ea        go to state 492
    declspecs_sc_nots_nosa_noea    go to state 493
    declspecs_sc_nots_nosa_ea      go to state 494
    declspecs_sc_nots_sa_noea      go to state 495
    declspecs_sc_nots_sa_ea        go to state 496
    declspecs_sc_ts_nosa_noea      go to state 497
    declspecs_sc_ts_nosa_ea        go to state 498
    declspecs_sc_ts_sa_noea        go to state 499
    declspecs_sc_ts_sa_ea          go to state 500
    declspecs_ts                   go to state 501
    declspecs_nots                 go to state 502
    typespec_nonattr               go to state 53
    typespec_attr                  go to state 54
    typespec_reserved_nonattr      go to state 55
    typespec_reserved_attr         go to state 56
    typespec_nonreserved_nonattr   go to state 57
    attributes                     go to state 58
    attribute                      go to state 59
    scspec                         go to state 60
    struct_head                    go to state 61
    union_head                     go to state 62
    enum_head                      go to state 63
    structsp_attr                  go to state 64
    structsp_nonattr               go to state 65
    errstmt                        go to state 503
    non_empty_protocolrefs         go to state 72
    myxdecls                       go to state 504
    mydecls                        go to state 505
    mydecl                         go to state 506


state 336

  576 methoddef: methodtype methoddecl optarglist . compstmt_or_error

    error  shift, and go to state 507
    '{'    shift, and go to state 508

    compstmt_or_error  go to state 509
    compstmt_start     go to state 510
    compstmt           go to state 511


state 337

  607 optparmlist: ',' . ELLIPSIS
  608            | ',' . parmlist_2

    TYPENAME      shift, and go to state 2
    SCSPEC        shift, and go to state 3
    STATIC        shift, and go to state 4
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 6
    ELLIPSIS      shift, and go to state 512
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    $default  reduce using rule 507 (parmlist_2)

    typeof                         go to state 32
    declspecs_nosc_nots_nosa_noea  go to state 513
    declspecs_nosc_nots_nosa_ea    go to state 514
    declspecs_nosc_ts_nosa_noea    go to state 515
    declspecs_nosc_ts_nosa_ea      go to state 516
    declspecs_sc_nots_nosa_noea    go to state 517
    declspecs_sc_nots_nosa_ea      go to state 518
    declspecs_sc_ts_nosa_noea      go to state 519
    declspecs_sc_ts_nosa_ea        go to state 520
    declspecs_ts_nosa              go to state 521
    declspecs_nots_nosa            go to state 522
    typespec_nonattr               go to state 53
    typespec_attr                  go to state 54
    typespec_reserved_nonattr      go to state 55
    typespec_reserved_attr         go to state 56
    typespec_nonreserved_nonattr   go to state 57
    scspec                         go to state 60
    struct_head                    go to state 61
    union_head                     go to state 62
    enum_head                      go to state 63
    structsp_attr                  go to state 64
    structsp_nonattr               go to state 65
    parmlist_2                     go to state 523
    parms                          go to state 524
    firstparm                      go to state 525
    non_empty_protocolrefs         go to state 72


state 338

  589 methoddecl: keywordselector optparmlist .

    $default  reduce using rule 589 (methoddecl)


state 339

  638 keyworddecl: selector . ':' '(' typename ')' identifier
  639            | selector . ':' identifier

    ':'  shift, and go to state 341


state 340

  611 keywordselector: keywordselector keyworddecl .

    $default  reduce using rule 611 (keywordselector)


state 341

  638 keyworddecl: selector ':' . '(' typename ')' identifier
  639            | selector ':' . identifier

    IDENTIFIER  shift, and go to state 82
    TYPENAME    shift, and go to state 83
    '('         shift, and go to state 526
    CLASSNAME   shift, and go to state 84
    OBJECTNAME  shift, and go to state 85

    identifier  go to state 527


state 342

   49 unary_expr: REALPART cast_expr .

    $default  reduce using rule 49 (unary_expr)


state 343

   50 unary_expr: IMAGPART cast_expr .

    $default  reduce using rule 50 (unary_expr)


state 344

   85 primary: VA_ARG '(' . expr_no_commas ',' typename ')'

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 528
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 345

   86 primary: CHOOSE_EXPR '(' . expr_no_commas ',' expr_no_commas ',' expr_no_commas ')'

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 529
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 346

   87 primary: TYPES_COMPATIBLE_P '(' . typename ',' typename ')'

    TYPENAME      shift, and go to state 2
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 6
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ATTRIBUTE     shift, and go to state 12
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    typeof                         go to state 32
    declspecs_nosc_nots_nosa_noea  go to state 278
    declspecs_nosc_nots_nosa_ea    go to state 279
    declspecs_nosc_nots_sa_noea    go to state 280
    declspecs_nosc_nots_sa_ea      go to state 281
    declspecs_nosc_ts_nosa_noea    go to state 282
    declspecs_nosc_ts_nosa_ea      go to state 283
    declspecs_nosc_ts_sa_noea      go to state 284
    declspecs_nosc_ts_sa_ea        go to state 285
    declspecs_nosc                 go to state 286
    typespec_nonattr               go to state 53
    typespec_attr                  go to state 54
    typespec_reserved_nonattr      go to state 55
    typespec_reserved_attr         go to state 56
    typespec_nonreserved_nonattr   go to state 57
    attributes                     go to state 58
    attribute                      go to state 59
    struct_head                    go to state 61
    union_head                     go to state 62
    enum_head                      go to state 63
    structsp_attr                  go to state 64
    structsp_nonattr               go to state 65
    typename                       go to state 530
    non_empty_protocolrefs         go to state 72


state 347

   44 unary_expr: ANDAND identifier .

    $default  reduce using rule 44 (unary_expr)


state 348

   41 unary_expr: '*' cast_expr .

    $default  reduce using rule 41 (unary_expr)


state 349

   81 primary: '(' error . ')'

    ')'  shift, and go to state 531


state 350

  450 compstmt_primary_start: '(' '{' .

    $default  reduce using rule 450 (compstmt_primary_start)


state 351

   80 primary: '(' expr . ')'

    ')'  shift, and go to state 532


state 352

   55 cast_expr: '(' typename . ')' cast_expr
   79 primary: '(' typename . ')' '{' initlist_maybe_comma '}'

    ')'  shift, and go to state 533


state 353

  650 receiver: CLASSNAME .

    $default  reduce using rule 650 (receiver)


state 354

  649 receiver: expr .

    $default  reduce using rule 649 (receiver)


state 355

  651 objcmessageexpr: '[' receiver . messageargs ']'

    IDENTIFIER   shift, and go to state 189
    TYPENAME     shift, and go to state 190
    TYPESPEC     shift, and go to state 191
    TYPE_QUAL    shift, and go to state 192
    SIZEOF       shift, and go to state 193
    ENUM         shift, and go to state 194
    STRUCT       shift, and go to state 195
    UNION        shift, and go to state 196
    IF           shift, and go to state 197
    ELSE         shift, and go to state 198
    WHILE        shift, and go to state 199
    DO           shift, and go to state 200
    FOR          shift, and go to state 201
    SWITCH       shift, and go to state 202
    CASE         shift, and go to state 203
    DEFAULT      shift, and go to state 204
    BREAK        shift, and go to state 205
    CONTINUE     shift, and go to state 206
    RETURN       shift, and go to state 207
    GOTO         shift, and go to state 208
    ASM_KEYWORD  shift, and go to state 209
    TYPEOF       shift, and go to state 210
    ALIGNOF      shift, and go to state 211
    ':'          shift, and go to state 534
    CLASSNAME    shift, and go to state 214
    OBJECTNAME   shift, and go to state 215

    selector        go to state 535
    reservedwords   go to state 220
    messageargs     go to state 536
    keywordarglist  go to state 537
    keywordarg      go to state 538


state 356

  658 objcselectorexpr: SELECTOR '(' . selectorarg ')'

    IDENTIFIER   shift, and go to state 189
    TYPENAME     shift, and go to state 190
    TYPESPEC     shift, and go to state 191
    TYPE_QUAL    shift, and go to state 192
    SIZEOF       shift, and go to state 193
    ENUM         shift, and go to state 194
    STRUCT       shift, and go to state 195
    UNION        shift, and go to state 196
    IF           shift, and go to state 197
    ELSE         shift, and go to state 198
    WHILE        shift, and go to state 199
    DO           shift, and go to state 200
    FOR          shift, and go to state 201
    SWITCH       shift, and go to state 202
    CASE         shift, and go to state 203
    DEFAULT      shift, and go to state 204
    BREAK        shift, and go to state 205
    CONTINUE     shift, and go to state 206
    RETURN       shift, and go to state 207
    GOTO         shift, and go to state 208
    ASM_KEYWORD  shift, and go to state 209
    TYPEOF       shift, and go to state 210
    ALIGNOF      shift, and go to state 211
    ':'          shift, and go to state 539
    CLASSNAME    shift, and go to state 214
    OBJECTNAME   shift, and go to state 215

    selector         go to state 540
    reservedwords    go to state 220
    selectorarg      go to state 541
    keywordnamelist  go to state 542
    keywordname      go to state 543


state 357

  660 objcencodeexpr: ENCODE '(' . typename ')'

    TYPENAME      shift, and go to state 2
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 6
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ATTRIBUTE     shift, and go to state 12
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    typeof                         go to state 32
    declspecs_nosc_nots_nosa_noea  go to state 278
    declspecs_nosc_nots_nosa_ea    go to state 279
    declspecs_nosc_nots_sa_noea    go to state 280
    declspecs_nosc_nots_sa_ea      go to state 281
    declspecs_nosc_ts_nosa_noea    go to state 282
    declspecs_nosc_ts_nosa_ea      go to state 283
    declspecs_nosc_ts_sa_noea      go to state 284
    declspecs_nosc_ts_sa_ea        go to state 285
    declspecs_nosc                 go to state 286
    typespec_nonattr               go to state 53
    typespec_attr                  go to state 54
    typespec_reserved_nonattr      go to state 55
    typespec_reserved_attr         go to state 56
    typespec_nonreserved_nonattr   go to state 57
    attributes                     go to state 58
    attribute                      go to state 59
    struct_head                    go to state 61
    union_head                     go to state 62
    enum_head                      go to state 63
    structsp_attr                  go to state 64
    structsp_nonattr               go to state 65
    typename                       go to state 544
    non_empty_protocolrefs         go to state 72


state 358

  659 objcprotocolexpr: PROTOCOL '(' . identifier ')'

    IDENTIFIER  shift, and go to state 82
    TYPENAME    shift, and go to state 83
    CLASSNAME   shift, and go to state 84
    OBJECTNAME  shift, and go to state 85

    identifier  go to state 545


state 359

   98 objc_string: '@' STRING .

    $default  reduce using rule 98 (objc_string)


state 360

   43 unary_expr: unop cast_expr .

    $default  reduce using rule 43 (unary_expr)


state 361

    9 extdef_1: ASM_KEYWORD '(' expr ')' . ';'

    ';'  shift, and go to state 546


state 362

   39 nonnull_exprlist: nonnull_exprlist ',' . expr_no_commas

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 547
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 363

   46 unary_expr: sizeof '(' . typename ')'
   79 primary: '(' . typename ')' '{' initlist_maybe_comma '}'
   80        | '(' . expr ')'
   81        | '(' . error ')'
  450 compstmt_primary_start: '(' . '{'

    error               shift, and go to state 349
    IDENTIFIER          shift, and go to state 222
    TYPENAME            shift, and go to state 2
    TYPESPEC            shift, and go to state 5
    TYPE_QUAL           shift, and go to state 6
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ENUM                shift, and go to state 7
    STRUCT              shift, and go to state 8
    UNION               shift, and go to state 9
    TYPEOF              shift, and go to state 11
    ALIGNOF             shift, and go to state 226
    ATTRIBUTE           shift, and go to state 12
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    ARITHCOMPARE        shift, and go to state 14
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    CLASSNAME           shift, and go to state 20
    PROTOCOL            shift, and go to state 244
    OBJECTNAME          shift, and go to state 22
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '{'                 shift, and go to state 350
    '@'                 shift, and go to state 247

    unop                           go to state 248
    expr                           go to state 351
    nonnull_exprlist               go to state 250
    unary_expr                     go to state 251
    sizeof                         go to state 252
    alignof                        go to state 253
    typeof                         go to state 32
    cast_expr                      go to state 254
    expr_no_commas                 go to state 255
    primary                        go to state 256
    objc_string                    go to state 257
    declspecs_nosc_nots_nosa_noea  go to state 278
    declspecs_nosc_nots_nosa_ea    go to state 279
    declspecs_nosc_nots_sa_noea    go to state 280
    declspecs_nosc_nots_sa_ea      go to state 281
    declspecs_nosc_ts_nosa_noea    go to state 282
    declspecs_nosc_ts_nosa_ea      go to state 283
    declspecs_nosc_ts_sa_noea      go to state 284
    declspecs_nosc_ts_sa_ea        go to state 285
    declspecs_nosc                 go to state 286
    typespec_nonattr               go to state 53
    typespec_attr                  go to state 54
    typespec_reserved_nonattr      go to state 55
    typespec_reserved_attr         go to state 56
    typespec_nonreserved_nonattr   go to state 57
    attributes                     go to state 58
    attribute                      go to state 59
    struct_head                    go to state 61
    union_head                     go to state 62
    enum_head                      go to state 63
    structsp_attr                  go to state 64
    structsp_nonattr               go to state 65
    typename                       go to state 548
    compstmt_primary_start         go to state 258
    extension                      go to state 259
    non_empty_protocolrefs         go to state 72
    objcmessageexpr                go to state 260
    objcselectorexpr               go to state 261
    objcprotocolexpr               go to state 262
    objcencodeexpr                 go to state 263


state 364

   45 unary_expr: sizeof unary_expr .

    $default  reduce using rule 45 (unary_expr)


state 365

   48 unary_expr: alignof '(' . typename ')'
   79 primary: '(' . typename ')' '{' initlist_maybe_comma '}'
   80        | '(' . expr ')'
   81        | '(' . error ')'
  450 compstmt_primary_start: '(' . '{'

    error               shift, and go to state 349
    IDENTIFIER          shift, and go to state 222
    TYPENAME            shift, and go to state 2
    TYPESPEC            shift, and go to state 5
    TYPE_QUAL           shift, and go to state 6
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ENUM                shift, and go to state 7
    STRUCT              shift, and go to state 8
    UNION               shift, and go to state 9
    TYPEOF              shift, and go to state 11
    ALIGNOF             shift, and go to state 226
    ATTRIBUTE           shift, and go to state 12
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    ARITHCOMPARE        shift, and go to state 14
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    CLASSNAME           shift, and go to state 20
    PROTOCOL            shift, and go to state 244
    OBJECTNAME          shift, and go to state 22
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '{'                 shift, and go to state 350
    '@'                 shift, and go to state 247

    unop                           go to state 248
    expr                           go to state 351
    nonnull_exprlist               go to state 250
    unary_expr                     go to state 251
    sizeof                         go to state 252
    alignof                        go to state 253
    typeof                         go to state 32
    cast_expr                      go to state 254
    expr_no_commas                 go to state 255
    primary                        go to state 256
    objc_string                    go to state 257
    declspecs_nosc_nots_nosa_noea  go to state 278
    declspecs_nosc_nots_nosa_ea    go to state 279
    declspecs_nosc_nots_sa_noea    go to state 280
    declspecs_nosc_nots_sa_ea      go to state 281
    declspecs_nosc_ts_nosa_noea    go to state 282
    declspecs_nosc_ts_nosa_ea      go to state 283
    declspecs_nosc_ts_sa_noea      go to state 284
    declspecs_nosc_ts_sa_ea        go to state 285
    declspecs_nosc                 go to state 286
    typespec_nonattr               go to state 53
    typespec_attr                  go to state 54
    typespec_reserved_nonattr      go to state 55
    typespec_reserved_attr         go to state 56
    typespec_nonreserved_nonattr   go to state 57
    attributes                     go to state 58
    attribute                      go to state 59
    struct_head                    go to state 61
    union_head                     go to state 62
    enum_head                      go to state 63
    structsp_attr                  go to state 64
    structsp_nonattr               go to state 65
    typename                       go to state 549
    compstmt_primary_start         go to state 258
    extension                      go to state 259
    non_empty_protocolrefs         go to state 72
    objcmessageexpr                go to state 260
    objcselectorexpr               go to state 261
    objcprotocolexpr               go to state 262
    objcencodeexpr                 go to state 263


state 366

   47 unary_expr: alignof unary_expr .

    $default  reduce using rule 47 (unary_expr)


state 367

   73 expr_no_commas: expr_no_commas '=' . expr_no_commas

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 550
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 368

   74 expr_no_commas: expr_no_commas ASSIGN . expr_no_commas

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 551
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 369

   71 expr_no_commas: expr_no_commas '?' . expr ':' expr_no_commas
   72               | expr_no_commas '?' . ':' expr_no_commas

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ':'                 shift, and go to state 552
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    expr                    go to state 553
    nonnull_exprlist        go to state 250
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 255
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 370

   70 expr_no_commas: expr_no_commas OROR . expr_no_commas

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 554
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 371

   69 expr_no_commas: expr_no_commas ANDAND . expr_no_commas

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 555
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 372

   67 expr_no_commas: expr_no_commas '|' . expr_no_commas

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 556
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 373

   68 expr_no_commas: expr_no_commas '^' . expr_no_commas

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 557
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 374

   66 expr_no_commas: expr_no_commas '&' . expr_no_commas

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 558
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 375

   65 expr_no_commas: expr_no_commas EQCOMPARE . expr_no_commas

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 559
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 376

   64 expr_no_commas: expr_no_commas ARITHCOMPARE . expr_no_commas

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 560
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 377

   63 expr_no_commas: expr_no_commas RSHIFT . expr_no_commas

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 561
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 378

   62 expr_no_commas: expr_no_commas LSHIFT . expr_no_commas

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 562
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 379

   57 expr_no_commas: expr_no_commas '+' . expr_no_commas

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 563
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 380

   58 expr_no_commas: expr_no_commas '-' . expr_no_commas

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 564
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 381

   59 expr_no_commas: expr_no_commas '*' . expr_no_commas

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 565
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 382

   60 expr_no_commas: expr_no_commas '/' . expr_no_commas

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 566
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 383

   61 expr_no_commas: expr_no_commas '%' . expr_no_commas

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 567
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 384

   92 primary: primary MINUSMINUS .

    $default  reduce using rule 92 (primary)


state 385

   91 primary: primary PLUSPLUS .

    $default  reduce using rule 91 (primary)


state 386

   89 primary: primary '.' . identifier

    IDENTIFIER  shift, and go to state 82
    TYPENAME    shift, and go to state 83
    CLASSNAME   shift, and go to state 84
    OBJECTNAME  shift, and go to state 85

    identifier  go to state 568


state 387

   84 primary: primary '(' . exprlist ')'

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    $default  reduce using rule 36 (exprlist)

    unop                    go to state 248
    exprlist                go to state 569
    nonnull_exprlist        go to state 570
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 255
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 388

   88 primary: primary '[' . expr ']'

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    expr                    go to state 571
    nonnull_exprlist        go to state 250
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 255
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 389

   90 primary: primary POINTSAT . identifier

    IDENTIFIER  shift, and go to state 82
    TYPENAME    shift, and go to state 83
    CLASSNAME   shift, and go to state 84
    OBJECTNAME  shift, and go to state 85

    identifier  go to state 572


state 390

   99 objc_string: objc_string '@' . STRING

    STRING  shift, and go to state 573


state 391

   83 primary: compstmt_primary_start error . ')'

    ')'  shift, and go to state 574


state 392

  446 compstmt_nostart: '}' .

    $default  reduce using rule 446 (compstmt_nostart)


state 393

  447 compstmt_nostart: pushlevel . maybe_label_decls compstmt_contents_nonempty '}' poplevel

    LABEL  shift, and go to state 575

    $default  reduce using rule 438 (maybe_label_decls)

    maybe_label_decls  go to state 576
    label_decls        go to state 577
    label_decl         go to state 578


state 394

   82 primary: compstmt_primary_start compstmt_nostart . ')'

    ')'  shift, and go to state 579


state 395

   42 unary_expr: extension cast_expr .

    $default  reduce using rule 42 (unary_expr)


state 396

  292 any_word: TYPESPEC .

    $default  reduce using rule 292 (any_word)


state 397

  293 any_word: TYPE_QUAL .

    $default  reduce using rule 293 (any_word)


state 398

  290 any_word: identifier .

    $default  reduce using rule 290 (any_word)


state 399

  282 attribute: ATTRIBUTE '(' '(' attribute_list . ')' ')'
  284 attribute_list: attribute_list . ',' attrib

    ')'  shift, and go to state 580
    ','  shift, and go to state 581


state 400

  283 attribute_list: attrib .

    $default  reduce using rule 283 (attribute_list)


state 401

  286 attrib: any_word .
  287       | any_word . '(' IDENTIFIER ')'
  288       | any_word . '(' IDENTIFIER ',' nonnull_exprlist ')'
  289       | any_word . '(' exprlist ')'

    '('  shift, and go to state 582

    $default  reduce using rule 286 (attrib)


state 402

  291 any_word: scspec .

    $default  reduce using rule 291 (any_word)


state 403

  539 identifier_list: identifier_list ',' identifier .

    $default  reduce using rule 539 (identifier_list)


state 404

  544 classdef: INTERFACE identifier ':' identifier . protocolrefs '{' ivar_decl_list '}' methodprotolist END
  545         | INTERFACE identifier ':' identifier . protocolrefs methodprotolist END

    ARITHCOMPARE  shift, and go to state 14

    ARITHCOMPARE  [reduce using rule 554 (protocolrefs)]
    $default      reduce using rule 554 (protocolrefs)

    protocolrefs            go to state 583
    non_empty_protocolrefs  go to state 91


state 405

  550 classdef: INTERFACE identifier '(' identifier . ')' protocolrefs methodprotolist END

    ')'  shift, and go to state 584


state 406

  542 classdef: INTERFACE identifier protocolrefs '{' . ivar_decl_list '}' methodprotolist END

    $default  reduce using rule 562 (ivar_decls)

    ivar_decl_list  go to state 585
    ivar_decls      go to state 418


state 407

  580 methodprotolist2: datadef .

    $default  reduce using rule 580 (methodprotolist2)


state 408

   11 datadef: setspecs . notype_initdecls ';'

    IDENTIFIER  shift, and go to state 100
    '*'         shift, and go to state 101
    '('         shift, and go to state 102

    notype_initdecls   go to state 103
    notype_initdcl     go to state 104
    notype_declarator  go to state 586


state 409

   13 datadef: declspecs_ts . setspecs initdecls ';'

    $default  reduce using rule 113 (setspecs)

    setspecs  go to state 587


state 410

   12 datadef: declspecs_nots . setspecs notype_initdecls ';'

    $default  reduce using rule 113 (setspecs)

    setspecs  go to state 588


state 411

  585 methodproto: methodtype . methoddecl semi_or_error

    IDENTIFIER   shift, and go to state 189
    TYPENAME     shift, and go to state 190
    TYPESPEC     shift, and go to state 191
    TYPE_QUAL    shift, and go to state 192
    SIZEOF       shift, and go to state 193
    ENUM         shift, and go to state 194
    STRUCT       shift, and go to state 195
    UNION        shift, and go to state 196
    IF           shift, and go to state 197
    ELSE         shift, and go to state 198
    WHILE        shift, and go to state 199
    DO           shift, and go to state 200
    FOR          shift, and go to state 201
    SWITCH       shift, and go to state 202
    CASE         shift, and go to state 203
    DEFAULT      shift, and go to state 204
    BREAK        shift, and go to state 205
    CONTINUE     shift, and go to state 206
    RETURN       shift, and go to state 207
    GOTO         shift, and go to state 208
    ASM_KEYWORD  shift, and go to state 209
    TYPEOF       shift, and go to state 210
    ALIGNOF      shift, and go to state 211
    ':'          shift, and go to state 212
    '('          shift, and go to state 213
    CLASSNAME    shift, and go to state 214
    OBJECTNAME   shift, and go to state 215

    methoddecl       go to state 589
    unaryselector    go to state 217
    keywordselector  go to state 218
    selector         go to state 219
    reservedwords    go to state 220
    keyworddecl      go to state 221


state 412

  543 classdef: INTERFACE identifier protocolrefs methodprotolist . END

    END  shift, and go to state 590


state 413

  578 methodprotolist: methodprotolist2 .
  581 methodprotolist2: methodprotolist2 . methodproto
  582                 | methodprotolist2 . datadef

    error         shift, and go to state 1
    TYPENAME      shift, and go to state 2
    SCSPEC        shift, and go to state 3
    STATIC        shift, and go to state 4
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 6
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ATTRIBUTE     shift, and go to state 12
    ARITHCOMPARE  shift, and go to state 14
    '+'           shift, and go to state 15
    '-'           shift, and go to state 16
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22
    ';'           shift, and go to state 25

    IDENTIFIER  reduce using rule 113 (setspecs)
    '*'         reduce using rule 113 (setspecs)
    '('         reduce using rule 113 (setspecs)
    END         reduce using rule 578 (methodprotolist)

    datadef                        go to state 591
    typeof                         go to state 32
    setspecs                       go to state 408
    declspecs_nosc_nots_nosa_noea  go to state 34
    declspecs_nosc_nots_nosa_ea    go to state 35
    declspecs_nosc_nots_sa_noea    go to state 36
    declspecs_nosc_nots_sa_ea      go to state 37
    declspecs_nosc_ts_nosa_noea    go to state 38
    declspecs_nosc_ts_nosa_ea      go to state 39
    declspecs_nosc_ts_sa_noea      go to state 40
    declspecs_nosc_ts_sa_ea        go to state 41
    declspecs_sc_nots_nosa_noea    go to state 42
    declspecs_sc_nots_nosa_ea      go to state 43
    declspecs_sc_nots_sa_noea      go to state 44
    declspecs_sc_nots_sa_ea        go to state 45
    declspecs_sc_ts_nosa_noea      go to state 46
    declspecs_sc_ts_nosa_ea        go to state 47
    declspecs_sc_ts_sa_noea        go to state 48
    declspecs_sc_ts_sa_ea          go to state 49
    declspecs_ts                   go to state 409
    declspecs_nots                 go to state 410
    declspecs                      go to state 52
    typespec_nonattr               go to state 53
    typespec_attr                  go to state 54
    typespec_reserved_nonattr      go to state 55
    typespec_reserved_attr         go to state 56
    typespec_nonreserved_nonattr   go to state 57
    attributes                     go to state 58
    attribute                      go to state 59
    scspec                         go to state 60
    struct_head                    go to state 61
    union_head                     go to state 62
    enum_head                      go to state 63
    structsp_attr                  go to state 64
    structsp_nonattr               go to state 65
    non_empty_protocolrefs         go to state 72
    methodtype                     go to state 411
    methodproto                    go to state 592


state 414

  579 methodprotolist2: methodproto .

    $default  reduce using rule 579 (methodprotolist2)


state 415

  548 classdef: IMPLEMENTATION identifier ':' identifier . '{' ivar_decl_list '}'
  549         | IMPLEMENTATION identifier ':' identifier .

    '{'  shift, and go to state 593

    $default  reduce using rule 549 (classdef)


state 416

  551 classdef: IMPLEMENTATION identifier '(' identifier . ')'

    ')'  shift, and go to state 594


state 417

  546 classdef: IMPLEMENTATION identifier '{' ivar_decl_list . '}'
  557 ivar_decl_list: ivar_decl_list . visibility_spec ivar_decls

    PUBLIC     shift, and go to state 595
    PRIVATE    shift, and go to state 596
    PROTECTED  shift, and go to state 597
    '}'        shift, and go to state 598

    visibility_spec  go to state 599


state 418

  558 ivar_decl_list: ivar_decls .
  563 ivar_decls: ivar_decls . ivar_decl ';'
  564           | ivar_decls . ';'

    error         shift, and go to state 600
    TYPENAME      shift, and go to state 2
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 6
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ATTRIBUTE     shift, and go to state 12
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22
    ';'           shift, and go to state 601

    PUBLIC     reduce using rule 558 (ivar_decl_list)
    PRIVATE    reduce using rule 558 (ivar_decl_list)
    PROTECTED  reduce using rule 558 (ivar_decl_list)
    '}'        reduce using rule 558 (ivar_decl_list)

    typeof                         go to state 32
    declspecs_nosc_nots_nosa_noea  go to state 464
    declspecs_nosc_nots_nosa_ea    go to state 465
    declspecs_nosc_nots_sa_noea    go to state 466
    declspecs_nosc_nots_sa_ea      go to state 467
    declspecs_nosc_ts_nosa_noea    go to state 468
    declspecs_nosc_ts_nosa_ea      go to state 469
    declspecs_nosc_ts_sa_noea      go to state 470
    declspecs_nosc_ts_sa_ea        go to state 471
    declspecs_nosc_ts              go to state 602
    declspecs_nosc_nots            go to state 603
    typespec_nonattr               go to state 53
    typespec_attr                  go to state 54
    typespec_reserved_nonattr      go to state 55
    typespec_reserved_attr         go to state 56
    typespec_nonreserved_nonattr   go to state 57
    attributes                     go to state 58
    attribute                      go to state 59
    struct_head                    go to state 61
    union_head                     go to state 62
    enum_head                      go to state 63
    structsp_attr                  go to state 64
    structsp_nonattr               go to state 65
    non_empty_protocolrefs         go to state 72
    ivar_decl                      go to state 604


state 419

  552 protocoldef: PROTOCOL identifier protocolrefs methodprotolist . END

    END  shift, and go to state 605


state 420

  541 aliasdecl: ALIAS identifier identifier ';' .

    $default  reduce using rule 541 (aliasdecl)


state 421

  266 typespec_nonreserved_nonattr: typeof '(' expr ')' .

    $default  reduce using rule 266 (typespec_nonreserved_nonattr)


state 422

  396 absdcl1_noea: '*' . maybe_type_quals_attrs absdcl1_noea
  397 absdcl1_ea: '*' . maybe_type_quals_attrs
  398           | '*' . maybe_type_quals_attrs absdcl1_ea

    TYPE_QUAL  shift, and go to state 6
    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 254 (maybe_type_quals_attrs)

    declspecs_nosc_nots_nosa_noea  go to state 288
    declspecs_nosc_nots_nosa_ea    go to state 289
    declspecs_nosc_nots_sa_noea    go to state 290
    declspecs_nosc_nots_sa_ea      go to state 291
    declspecs_nosc_nots            go to state 292
    maybe_type_quals_attrs         go to state 606
    attributes                     go to state 58
    attribute                      go to state 59


state 423

  399 direct_absdcl1: '(' . maybe_attribute absdcl1 ')'
  402               | '(' . parmlist

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 278 (maybe_attribute)

    maybe_attribute  go to state 607
    attributes       go to state 295
    attribute        go to state 59
    parmlist         go to state 608


state 424

  387 typename: declspecs_nosc absdcl .

    $default  reduce using rule 387 (typename)


state 425

  389 absdcl: absdcl1 .

    $default  reduce using rule 389 (absdcl)


state 426

  394 absdcl1: absdcl1_noea .

    $default  reduce using rule 394 (absdcl1)


state 427

  393 absdcl1: absdcl1_ea .

    $default  reduce using rule 393 (absdcl1)


state 428

  395 absdcl1_noea: direct_absdcl1 .
  400 direct_absdcl1: direct_absdcl1 . '(' parmlist
  401               | direct_absdcl1 . array_declarator

    '('  shift, and go to state 609
    '['  shift, and go to state 301

    $default  reduce using rule 395 (absdcl1_noea)

    array_declarator  go to state 610


state 429

  403 direct_absdcl1: array_declarator .

    $default  reduce using rule 403 (direct_absdcl1)


state 430

  267 typespec_nonreserved_nonattr: typeof '(' typename ')' .

    $default  reduce using rule 267 (typespec_nonreserved_nonattr)


state 431

  336 notype_declarator: notype_declarator . '(' parmlist_or_identifiers
  338                  | '*' maybe_type_quals_attrs notype_declarator .
  339                  | notype_declarator . array_declarator

    '('  shift, and go to state 300
    '['  shift, and go to state 301

    $default  reduce using rule 338 (notype_declarator)

    array_declarator  go to state 307


state 432

  336 notype_declarator: notype_declarator . '(' parmlist_or_identifiers
  337                  | '(' maybe_attribute notype_declarator . ')'
  339                  | notype_declarator . array_declarator

    '('  shift, and go to state 300
    '['  shift, and go to state 301
    ')'  shift, and go to state 611

    array_declarator  go to state 307


state 433

  271 notype_initdecls: notype_initdecls ',' maybe_resetattrs . notype_initdcl

    IDENTIFIER  shift, and go to state 100
    '*'         shift, and go to state 101
    '('         shift, and go to state 102

    notype_initdcl     go to state 612
    notype_declarator  go to state 586


state 434

  114 maybe_resetattrs: maybe_attribute .

    $default  reduce using rule 114 (maybe_resetattrs)


state 435

  433 errstmt: error ';' .

    $default  reduce using rule 433 (errstmt)


state 436

  273 maybeasm: ASM_KEYWORD '(' . STRING ')'

    STRING  shift, and go to state 613


state 437

  524 parmlist_or_identifiers: maybe_attribute . parmlist_or_identifiers_1

    error         shift, and go to state 614
    IDENTIFIER    shift, and go to state 615
    TYPENAME      shift, and go to state 2
    SCSPEC        shift, and go to state 3
    STATIC        shift, and go to state 4
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 6
    ELLIPSIS      shift, and go to state 616
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    ')'  reduce using rule 507 (parmlist_2)

    typeof                         go to state 32
    declspecs_nosc_nots_nosa_noea  go to state 513
    declspecs_nosc_nots_nosa_ea    go to state 514
    declspecs_nosc_ts_nosa_noea    go to state 515
    declspecs_nosc_ts_nosa_ea      go to state 516
    declspecs_sc_nots_nosa_noea    go to state 517
    declspecs_sc_nots_nosa_ea      go to state 518
    declspecs_sc_ts_nosa_noea      go to state 519
    declspecs_sc_ts_nosa_ea        go to state 520
    declspecs_ts_nosa              go to state 521
    declspecs_nots_nosa            go to state 522
    typespec_nonattr               go to state 53
    typespec_attr                  go to state 54
    typespec_reserved_nonattr      go to state 55
    typespec_reserved_attr         go to state 56
    typespec_nonreserved_nonattr   go to state 57
    scspec                         go to state 60
    struct_head                    go to state 61
    union_head                     go to state 62
    enum_head                      go to state 63
    structsp_attr                  go to state 64
    structsp_nonattr               go to state 65
    parmlist_1                     go to state 617
    parmlist_2                     go to state 618
    parms                          go to state 619
    firstparm                      go to state 525
    parmlist_or_identifiers_1      go to state 620
    identifiers                    go to state 621
    non_empty_protocolrefs         go to state 72


state 438

  336 notype_declarator: notype_declarator '(' parmlist_or_identifiers .

    $default  reduce using rule 336 (notype_declarator)


state 439

  407 array_declarator: '[' STATIC . maybe_type_quals_attrs expr ']'

    TYPE_QUAL  shift, and go to state 6
    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 254 (maybe_type_quals_attrs)

    declspecs_nosc_nots_nosa_noea  go to state 288
    declspecs_nosc_nots_nosa_ea    go to state 289
    declspecs_nosc_nots_sa_noea    go to state 290
    declspecs_nosc_nots_sa_ea      go to state 291
    declspecs_nosc_nots            go to state 292
    maybe_type_quals_attrs         go to state 622
    attributes                     go to state 58
    attribute                      go to state 59


state 440

  255 maybe_type_quals_attrs: declspecs_nosc_nots .
  408 array_declarator: '[' declspecs_nosc_nots . STATIC expr ']'

    STATIC  shift, and go to state 623

    $default  reduce using rule 255 (maybe_type_quals_attrs)


state 441

  404 array_declarator: '[' maybe_type_quals_attrs . expr ']'
  405                 | '[' maybe_type_quals_attrs . ']'
  406                 | '[' maybe_type_quals_attrs . '*' ']'

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 624
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    ']'                 shift, and go to state 625
    '@'                 shift, and go to state 247

    unop                    go to state 248
    expr                    go to state 626
    nonnull_exprlist        go to state 250
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 255
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 442

   22 fndef: setspecs notype_declarator old_style_parm_decls save_filename . save_lineno compstmt_or_error

    $default  reduce using rule 457 (save_lineno)

    save_lineno  go to state 627


state 443

  433 errstmt: error . ';'

    ';'  shift, and go to state 435


state 444

  107 datadecls: lineno_datadecl errstmt .

    $default  reduce using rule 107 (datadecls)


state 445

  106 datadecls: datadecls lineno_datadecl .

    $default  reduce using rule 106 (datadecls)


state 446

  276 notype_initdcl: notype_declarator maybeasm maybe_attribute . '=' init
  277               | notype_declarator maybeasm maybe_attribute .

    '='  shift, and go to state 628

    $default  reduce using rule 277 (notype_initdcl)


state 447

  103 lineno_datadecl: save_filename save_lineno . datadecl

    TYPENAME      shift, and go to state 2
    SCSPEC        shift, and go to state 3
    STATIC        shift, and go to state 4
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 6
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    typeof                         go to state 32
    datadecl                       go to state 629
    declspecs_nosc_nots_nosa_noea  go to state 513
    declspecs_nosc_nots_nosa_ea    go to state 514
    declspecs_nosc_ts_nosa_noea    go to state 515
    declspecs_nosc_ts_nosa_ea      go to state 516
    declspecs_sc_nots_nosa_noea    go to state 517
    declspecs_sc_nots_nosa_ea      go to state 518
    declspecs_sc_ts_nosa_noea      go to state 519
    declspecs_sc_ts_nosa_ea        go to state 520
    declspecs_ts_nosa              go to state 630
    declspecs_nots_nosa            go to state 631
    typespec_nonattr               go to state 53
    typespec_attr                  go to state 54
    typespec_reserved_nonattr      go to state 55
    typespec_reserved_attr         go to state 56
    typespec_nonreserved_nonattr   go to state 57
    scspec                         go to state 60
    struct_head                    go to state 61
    union_head                     go to state 62
    enum_head                      go to state 63
    structsp_attr                  go to state 64
    structsp_nonattr               go to state 65
    non_empty_protocolrefs         go to state 72


state 448

  322 after_type_declarator: '*' maybe_type_quals_attrs . after_type_declarator
  338 notype_declarator: '*' maybe_type_quals_attrs . notype_declarator

    IDENTIFIER  shift, and go to state 100
    TYPENAME    shift, and go to state 310
    '*'         shift, and go to state 311
    '('         shift, and go to state 312
    OBJECTNAME  shift, and go to state 313

    after_type_declarator  go to state 632
    notype_declarator      go to state 431


state 449

  319 after_type_declarator: '(' maybe_attribute . after_type_declarator ')'
  337 notype_declarator: '(' maybe_attribute . notype_declarator ')'

    IDENTIFIER  shift, and go to state 100
    TYPENAME    shift, and go to state 310
    '*'         shift, and go to state 311
    '('         shift, and go to state 312
    OBJECTNAME  shift, and go to state 313

    after_type_declarator  go to state 633
    notype_declarator      go to state 432


state 450

   13 datadef: declspecs_ts setspecs initdecls ';' .

    $default  reduce using rule 13 (datadef)


state 451

  269 initdecls: initdecls ',' . maybe_resetattrs initdcl

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 278 (maybe_attribute)

    maybe_resetattrs  go to state 634
    maybe_attribute   go to state 434
    attributes        go to state 295
    attribute         go to state 59


state 452

   19 fndef: declspecs_ts setspecs declarator error .
  433 errstmt: error . ';'

    ';'  shift, and go to state 435

    ';'       [reduce using rule 19 (fndef)]
    $default  reduce using rule 19 (fndef)


state 453

   18 fndef: declspecs_ts setspecs declarator old_style_parm_decls . save_filename save_lineno compstmt_or_error

    $default  reduce using rule 456 (save_filename)

    save_filename  go to state 635


state 454

  274 initdcl: declarator maybeasm . maybe_attribute '=' init
  275        | declarator maybeasm . maybe_attribute

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 278 (maybe_attribute)

    maybe_attribute  go to state 636
    attributes       go to state 295
    attribute        go to state 59


state 455

  320 after_type_declarator: after_type_declarator '(' . parmlist_or_identifiers

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 278 (maybe_attribute)

    maybe_attribute          go to state 437
    attributes               go to state 295
    attribute                go to state 59
    parmlist_or_identifiers  go to state 637


state 456

  321 after_type_declarator: after_type_declarator array_declarator .

    $default  reduce using rule 321 (after_type_declarator)


state 457

   12 datadef: declspecs_nots setspecs notype_initdecls ';' .

    $default  reduce using rule 12 (datadef)


state 458

   21 fndef: declspecs_nots setspecs notype_declarator error .
  433 errstmt: error . ';'

    ';'  shift, and go to state 435

    ';'       [reduce using rule 21 (fndef)]
    $default  reduce using rule 21 (fndef)


state 459

   20 fndef: declspecs_nots setspecs notype_declarator old_style_parm_decls . save_filename save_lineno compstmt_or_error

    $default  reduce using rule 456 (save_filename)

    save_filename  go to state 638


state 460

  365 component_decl_list2: DEFS '(' . CLASSNAME ')'

    CLASSNAME  shift, and go to state 639


state 461

  348 structsp_attr: struct_head '{' component_decl_list '}' . maybe_attribute

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 278 (maybe_attribute)

    maybe_attribute  go to state 640
    attributes       go to state 295
    attribute        go to state 59


state 462

  370 component_decl: error .

    $default  reduce using rule 370 (component_decl)


state 463

  364 component_decl_list2: component_decl_list2 ';' .

    $default  reduce using rule 364 (component_decl_list2)


state 464

  122 declspecs_nosc_nots_nosa_noea: declspecs_nosc_nots_nosa_noea . TYPE_QUAL
  124 declspecs_nosc_nots_nosa_ea: declspecs_nosc_nots_nosa_noea . attributes
  134 declspecs_nosc_ts_nosa_noea: declspecs_nosc_nots_nosa_noea . typespec_nonattr
  140 declspecs_nosc_ts_nosa_ea: declspecs_nosc_nots_nosa_noea . typespec_attr
  226 declspecs_nosc_nots: declspecs_nosc_nots_nosa_noea .

    TYPENAME      shift, and go to state 2
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 106
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ATTRIBUTE     shift, and go to state 12
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    TYPENAME    [reduce using rule 226 (declspecs_nosc_nots)]
    OBJECTNAME  [reduce using rule 226 (declspecs_nosc_nots)]
    $default    reduce using rule 226 (declspecs_nosc_nots)

    typeof                        go to state 32
    typespec_nonattr              go to state 107
    typespec_attr                 go to state 108
    typespec_reserved_nonattr     go to state 55
    typespec_reserved_attr        go to state 56
    typespec_nonreserved_nonattr  go to state 57
    attributes                    go to state 109
    attribute                     go to state 59
    struct_head                   go to state 61
    union_head                    go to state 62
    enum_head                     go to state 63
    structsp_attr                 go to state 64
    structsp_nonattr              go to state 65
    non_empty_protocolrefs        go to state 72


state 465

  123 declspecs_nosc_nots_nosa_noea: declspecs_nosc_nots_nosa_ea . TYPE_QUAL
  135 declspecs_nosc_ts_nosa_noea: declspecs_nosc_nots_nosa_ea . typespec_nonattr
  141 declspecs_nosc_ts_nosa_ea: declspecs_nosc_nots_nosa_ea . typespec_attr
  227 declspecs_nosc_nots: declspecs_nosc_nots_nosa_ea .

    TYPENAME      shift, and go to state 2
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 111
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    TYPENAME    [reduce using rule 227 (declspecs_nosc_nots)]
    OBJECTNAME  [reduce using rule 227 (declspecs_nosc_nots)]
    $default    reduce using rule 227 (declspecs_nosc_nots)

    typeof                        go to state 32
    typespec_nonattr              go to state 112
    typespec_attr                 go to state 113
    typespec_reserved_nonattr     go to state 55
    typespec_reserved_attr        go to state 56
    typespec_nonreserved_nonattr  go to state 57
    struct_head                   go to state 61
    union_head                    go to state 62
    enum_head                     go to state 63
    structsp_attr                 go to state 64
    structsp_nonattr              go to state 65
    non_empty_protocolrefs        go to state 72


state 466

  125 declspecs_nosc_nots_sa_noea: declspecs_nosc_nots_sa_noea . TYPE_QUAL
  128 declspecs_nosc_nots_sa_ea: declspecs_nosc_nots_sa_noea . attributes
  146 declspecs_nosc_ts_sa_noea: declspecs_nosc_nots_sa_noea . typespec_nonattr
  151 declspecs_nosc_ts_sa_ea: declspecs_nosc_nots_sa_noea . typespec_attr
  228 declspecs_nosc_nots: declspecs_nosc_nots_sa_noea .

    TYPENAME      shift, and go to state 2
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 115
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ATTRIBUTE     shift, and go to state 12
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    TYPENAME    [reduce using rule 228 (declspecs_nosc_nots)]
    OBJECTNAME  [reduce using rule 228 (declspecs_nosc_nots)]
    $default    reduce using rule 228 (declspecs_nosc_nots)

    typeof                        go to state 32
    typespec_nonattr              go to state 116
    typespec_attr                 go to state 117
    typespec_reserved_nonattr     go to state 55
    typespec_reserved_attr        go to state 56
    typespec_nonreserved_nonattr  go to state 57
    attributes                    go to state 118
    attribute                     go to state 59
    struct_head                   go to state 61
    union_head                    go to state 62
    enum_head                     go to state 63
    structsp_attr                 go to state 64
    structsp_nonattr              go to state 65
    non_empty_protocolrefs        go to state 72


state 467

  126 declspecs_nosc_nots_sa_noea: declspecs_nosc_nots_sa_ea . TYPE_QUAL
  147 declspecs_nosc_ts_sa_noea: declspecs_nosc_nots_sa_ea . typespec_nonattr
  152 declspecs_nosc_ts_sa_ea: declspecs_nosc_nots_sa_ea . typespec_attr
  229 declspecs_nosc_nots: declspecs_nosc_nots_sa_ea .

    TYPENAME      shift, and go to state 2
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 120
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    TYPENAME    [reduce using rule 229 (declspecs_nosc_nots)]
    OBJECTNAME  [reduce using rule 229 (declspecs_nosc_nots)]
    $default    reduce using rule 229 (declspecs_nosc_nots)

    typeof                        go to state 32
    typespec_nonattr              go to state 121
    typespec_attr                 go to state 122
    typespec_reserved_nonattr     go to state 55
    typespec_reserved_attr        go to state 56
    typespec_nonreserved_nonattr  go to state 57
    struct_head                   go to state 61
    union_head                    go to state 62
    enum_head                     go to state 63
    structsp_attr                 go to state 64
    structsp_nonattr              go to state 65
    non_empty_protocolrefs        go to state 72


state 468

  130 declspecs_nosc_ts_nosa_noea: declspecs_nosc_ts_nosa_noea . TYPE_QUAL
  132                            | declspecs_nosc_ts_nosa_noea . typespec_reserved_nonattr
  137 declspecs_nosc_ts_nosa_ea: declspecs_nosc_ts_nosa_noea . attributes
  138                          | declspecs_nosc_ts_nosa_noea . typespec_reserved_attr
  222 declspecs_nosc_ts: declspecs_nosc_ts_nosa_noea .

    TYPESPEC   shift, and go to state 5
    TYPE_QUAL  shift, and go to state 124
    ENUM       shift, and go to state 7
    STRUCT     shift, and go to state 8
    UNION      shift, and go to state 9
    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 222 (declspecs_nosc_ts)

    typespec_reserved_nonattr  go to state 125
    typespec_reserved_attr     go to state 126
    attributes                 go to state 127
    attribute                  go to state 59
    struct_head                go to state 61
    union_head                 go to state 62
    enum_head                  go to state 63
    structsp_attr              go to state 64
    structsp_nonattr           go to state 65


state 469

  131 declspecs_nosc_ts_nosa_noea: declspecs_nosc_ts_nosa_ea . TYPE_QUAL
  133                            | declspecs_nosc_ts_nosa_ea . typespec_reserved_nonattr
  139 declspecs_nosc_ts_nosa_ea: declspecs_nosc_ts_nosa_ea . typespec_reserved_attr
  223 declspecs_nosc_ts: declspecs_nosc_ts_nosa_ea .

    TYPESPEC   shift, and go to state 5
    TYPE_QUAL  shift, and go to state 129
    ENUM       shift, and go to state 7
    STRUCT     shift, and go to state 8
    UNION      shift, and go to state 9

    $default  reduce using rule 223 (declspecs_nosc_ts)

    typespec_reserved_nonattr  go to state 130
    typespec_reserved_attr     go to state 131
    struct_head                go to state 61
    union_head                 go to state 62
    enum_head                  go to state 63
    structsp_attr              go to state 64
    structsp_nonattr           go to state 65


state 470

  142 declspecs_nosc_ts_sa_noea: declspecs_nosc_ts_sa_noea . TYPE_QUAL
  144                          | declspecs_nosc_ts_sa_noea . typespec_reserved_nonattr
  148 declspecs_nosc_ts_sa_ea: declspecs_nosc_ts_sa_noea . attributes
  149                        | declspecs_nosc_ts_sa_noea . typespec_reserved_attr
  224 declspecs_nosc_ts: declspecs_nosc_ts_sa_noea .

    TYPESPEC   shift, and go to state 5
    TYPE_QUAL  shift, and go to state 133
    ENUM       shift, and go to state 7
    STRUCT     shift, and go to state 8
    UNION      shift, and go to state 9
    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 224 (declspecs_nosc_ts)

    typespec_reserved_nonattr  go to state 134
    typespec_reserved_attr     go to state 135
    attributes                 go to state 136
    attribute                  go to state 59
    struct_head                go to state 61
    union_head                 go to state 62
    enum_head                  go to state 63
    structsp_attr              go to state 64
    structsp_nonattr           go to state 65


state 471

  143 declspecs_nosc_ts_sa_noea: declspecs_nosc_ts_sa_ea . TYPE_QUAL
  145                          | declspecs_nosc_ts_sa_ea . typespec_reserved_nonattr
  150 declspecs_nosc_ts_sa_ea: declspecs_nosc_ts_sa_ea . typespec_reserved_attr
  225 declspecs_nosc_ts: declspecs_nosc_ts_sa_ea .

    TYPESPEC   shift, and go to state 5
    TYPE_QUAL  shift, and go to state 138
    ENUM       shift, and go to state 7
    STRUCT     shift, and go to state 8
    UNION      shift, and go to state 9

    $default  reduce using rule 225 (declspecs_nosc_ts)

    typespec_reserved_nonattr  go to state 139
    typespec_reserved_attr     go to state 140
    struct_head                go to state 61
    union_head                 go to state 62
    enum_head                  go to state 63
    structsp_attr              go to state 64
    structsp_nonattr           go to state 65


state 472

  366 component_decl: declspecs_nosc_ts . setspecs components
  367               | declspecs_nosc_ts . setspecs save_filename save_lineno

    $default  reduce using rule 113 (setspecs)

    setspecs  go to state 641


state 473

  368 component_decl: declspecs_nosc_nots . setspecs components_notype
  369               | declspecs_nosc_nots .

    ';'       reduce using rule 369 (component_decl)
    '}'       reduce using rule 369 (component_decl)
    $default  reduce using rule 113 (setspecs)

    setspecs  go to state 642


state 474

  361 component_decl_list: component_decl_list2 component_decl .
  363 component_decl_list2: component_decl_list2 component_decl . ';'

    ';'  shift, and go to state 643

    $default  reduce using rule 361 (component_decl_list)


state 475

  371 component_decl: extension . component_decl

    error         shift, and go to state 462
    TYPENAME      shift, and go to state 2
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 6
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ATTRIBUTE     shift, and go to state 12
    EXTENSION     shift, and go to state 13
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    typeof                         go to state 32
    declspecs_nosc_nots_nosa_noea  go to state 464
    declspecs_nosc_nots_nosa_ea    go to state 465
    declspecs_nosc_nots_sa_noea    go to state 466
    declspecs_nosc_nots_sa_ea      go to state 467
    declspecs_nosc_ts_nosa_noea    go to state 468
    declspecs_nosc_ts_nosa_ea      go to state 469
    declspecs_nosc_ts_sa_noea      go to state 470
    declspecs_nosc_ts_sa_ea        go to state 471
    declspecs_nosc_ts              go to state 472
    declspecs_nosc_nots            go to state 473
    typespec_nonattr               go to state 53
    typespec_attr                  go to state 54
    typespec_reserved_nonattr      go to state 55
    typespec_reserved_attr         go to state 56
    typespec_nonreserved_nonattr   go to state 57
    attributes                     go to state 58
    attribute                      go to state 59
    struct_head                    go to state 61
    union_head                     go to state 62
    enum_head                      go to state 63
    structsp_attr                  go to state 64
    structsp_nonattr               go to state 65
    component_decl                 go to state 644
    extension                      go to state 475
    non_empty_protocolrefs         go to state 72


state 476

  347 structsp_attr: struct_head identifier '{' component_decl_list . '}' maybe_attribute

    '}'  shift, and go to state 645


state 477

  350 structsp_attr: union_head '{' component_decl_list '}' . maybe_attribute

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 278 (maybe_attribute)

    maybe_attribute  go to state 646
    attributes       go to state 295
    attribute        go to state 59


state 478

  349 structsp_attr: union_head identifier '{' component_decl_list . '}' maybe_attribute

    '}'  shift, and go to state 647


state 479

  386 enumerator: identifier '=' . expr_no_commas

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 648
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 480

  359 maybecomma_warn: ',' .
  383 enumlist: enumlist ',' . enumerator

    IDENTIFIER  shift, and go to state 82
    TYPENAME    shift, and go to state 83
    CLASSNAME   shift, and go to state 84
    OBJECTNAME  shift, and go to state 85

    $default  reduce using rule 359 (maybecomma_warn)

    identifier  go to state 328
    enumerator  go to state 649


state 481

  352 structsp_attr: enum_head '{' enumlist maybecomma_warn . '}' maybe_attribute

    '}'  shift, and go to state 650


state 482

  351 structsp_attr: enum_head identifier '{' enumlist . maybecomma_warn '}' maybe_attribute
  383 enumlist: enumlist . ',' enumerator

    ','  shift, and go to state 480

    $default  reduce using rule 358 (maybecomma_warn)

    maybecomma_warn  go to state 651


state 483

  640 keyworddecl: ':' '(' typename . ')' identifier

    ')'  shift, and go to state 652


state 484

  586 methoddecl: '(' typename ')' . unaryselector
  588           | '(' typename ')' . keywordselector optparmlist

    IDENTIFIER   shift, and go to state 189
    TYPENAME     shift, and go to state 190
    TYPESPEC     shift, and go to state 191
    TYPE_QUAL    shift, and go to state 192
    SIZEOF       shift, and go to state 193
    ENUM         shift, and go to state 194
    STRUCT       shift, and go to state 195
    UNION        shift, and go to state 196
    IF           shift, and go to state 197
    ELSE         shift, and go to state 198
    WHILE        shift, and go to state 199
    DO           shift, and go to state 200
    FOR          shift, and go to state 201
    SWITCH       shift, and go to state 202
    CASE         shift, and go to state 203
    DEFAULT      shift, and go to state 204
    BREAK        shift, and go to state 205
    CONTINUE     shift, and go to state 206
    RETURN       shift, and go to state 207
    GOTO         shift, and go to state 208
    ASM_KEYWORD  shift, and go to state 209
    TYPEOF       shift, and go to state 210
    ALIGNOF      shift, and go to state 211
    ':'          shift, and go to state 212
    CLASSNAME    shift, and go to state 214
    OBJECTNAME   shift, and go to state 215

    unaryselector    go to state 653
    keywordselector  go to state 654
    selector         go to state 219
    reservedwords    go to state 220
    keyworddecl      go to state 221


state 485

  122 declspecs_nosc_nots_nosa_noea: declspecs_nosc_nots_nosa_noea . TYPE_QUAL
  124 declspecs_nosc_nots_nosa_ea: declspecs_nosc_nots_nosa_noea . attributes
  134 declspecs_nosc_ts_nosa_noea: declspecs_nosc_nots_nosa_noea . typespec_nonattr
  140 declspecs_nosc_ts_nosa_ea: declspecs_nosc_nots_nosa_noea . typespec_attr
  156 declspecs_sc_nots_nosa_noea: declspecs_nosc_nots_nosa_noea . scspec
  206 declspecs_nots: declspecs_nosc_nots_nosa_noea .

    TYPENAME      shift, and go to state 2
    SCSPEC        shift, and go to state 3
    STATIC        shift, and go to state 4
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 106
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ATTRIBUTE     shift, and go to state 12
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    $default  reduce using rule 206 (declspecs_nots)

    typeof                        go to state 32
    typespec_nonattr              go to state 107
    typespec_attr                 go to state 108
    typespec_reserved_nonattr     go to state 55
    typespec_reserved_attr        go to state 56
    typespec_nonreserved_nonattr  go to state 57
    attributes                    go to state 109
    attribute                     go to state 59
    scspec                        go to state 110
    struct_head                   go to state 61
    union_head                    go to state 62
    enum_head                     go to state 63
    structsp_attr                 go to state 64
    structsp_nonattr              go to state 65
    non_empty_protocolrefs        go to state 72


state 486

  123 declspecs_nosc_nots_nosa_noea: declspecs_nosc_nots_nosa_ea . TYPE_QUAL
  135 declspecs_nosc_ts_nosa_noea: declspecs_nosc_nots_nosa_ea . typespec_nonattr
  141 declspecs_nosc_ts_nosa_ea: declspecs_nosc_nots_nosa_ea . typespec_attr
  157 declspecs_sc_nots_nosa_noea: declspecs_nosc_nots_nosa_ea . scspec
  207 declspecs_nots: declspecs_nosc_nots_nosa_ea .

    TYPENAME      shift, and go to state 2
    SCSPEC        shift, and go to state 3
    STATIC        shift, and go to state 4
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 111
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    $default  reduce using rule 207 (declspecs_nots)

    typeof                        go to state 32
    typespec_nonattr              go to state 112
    typespec_attr                 go to state 113
    typespec_reserved_nonattr     go to state 55
    typespec_reserved_attr        go to state 56
    typespec_nonreserved_nonattr  go to state 57
    scspec                        go to state 114
    struct_head                   go to state 61
    union_head                    go to state 62
    enum_head                     go to state 63
    structsp_attr                 go to state 64
    structsp_nonattr              go to state 65
    non_empty_protocolrefs        go to state 72


state 487

  125 declspecs_nosc_nots_sa_noea: declspecs_nosc_nots_sa_noea . TYPE_QUAL
  128 declspecs_nosc_nots_sa_ea: declspecs_nosc_nots_sa_noea . attributes
  146 declspecs_nosc_ts_sa_noea: declspecs_nosc_nots_sa_noea . typespec_nonattr
  151 declspecs_nosc_ts_sa_ea: declspecs_nosc_nots_sa_noea . typespec_attr
  163 declspecs_sc_nots_sa_noea: declspecs_nosc_nots_sa_noea . scspec
  208 declspecs_nots: declspecs_nosc_nots_sa_noea .

    TYPENAME      shift, and go to state 2
    SCSPEC        shift, and go to state 3
    STATIC        shift, and go to state 4
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 115
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ATTRIBUTE     shift, and go to state 12
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    $default  reduce using rule 208 (declspecs_nots)

    typeof                        go to state 32
    typespec_nonattr              go to state 116
    typespec_attr                 go to state 117
    typespec_reserved_nonattr     go to state 55
    typespec_reserved_attr        go to state 56
    typespec_nonreserved_nonattr  go to state 57
    attributes                    go to state 118
    attribute                     go to state 59
    scspec                        go to state 119
    struct_head                   go to state 61
    union_head                    go to state 62
    enum_head                     go to state 63
    structsp_attr                 go to state 64
    structsp_nonattr              go to state 65
    non_empty_protocolrefs        go to state 72


state 488

  126 declspecs_nosc_nots_sa_noea: declspecs_nosc_nots_sa_ea . TYPE_QUAL
  147 declspecs_nosc_ts_sa_noea: declspecs_nosc_nots_sa_ea . typespec_nonattr
  152 declspecs_nosc_ts_sa_ea: declspecs_nosc_nots_sa_ea . typespec_attr
  164 declspecs_sc_nots_sa_noea: declspecs_nosc_nots_sa_ea . scspec
  209 declspecs_nots: declspecs_nosc_nots_sa_ea .

    TYPENAME      shift, and go to state 2
    SCSPEC        shift, and go to state 3
    STATIC        shift, and go to state 4
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 120
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    $default  reduce using rule 209 (declspecs_nots)

    typeof                        go to state 32
    typespec_nonattr              go to state 121
    typespec_attr                 go to state 122
    typespec_reserved_nonattr     go to state 55
    typespec_reserved_attr        go to state 56
    typespec_nonreserved_nonattr  go to state 57
    scspec                        go to state 123
    struct_head                   go to state 61
    union_head                    go to state 62
    enum_head                     go to state 63
    structsp_attr                 go to state 64
    structsp_nonattr              go to state 65
    non_empty_protocolrefs        go to state 72


state 489

  130 declspecs_nosc_ts_nosa_noea: declspecs_nosc_ts_nosa_noea . TYPE_QUAL
  132                            | declspecs_nosc_ts_nosa_noea . typespec_reserved_nonattr
  137 declspecs_nosc_ts_nosa_ea: declspecs_nosc_ts_nosa_noea . attributes
  138                          | declspecs_nosc_ts_nosa_noea . typespec_reserved_attr
  174 declspecs_sc_ts_nosa_noea: declspecs_nosc_ts_nosa_noea . scspec
  198 declspecs_ts: declspecs_nosc_ts_nosa_noea .

    SCSPEC     shift, and go to state 3
    STATIC     shift, and go to state 4
    TYPESPEC   shift, and go to state 5
    TYPE_QUAL  shift, and go to state 124
    ENUM       shift, and go to state 7
    STRUCT     shift, and go to state 8
    UNION      shift, and go to state 9
    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 198 (declspecs_ts)

    typespec_reserved_nonattr  go to state 125
    typespec_reserved_attr     go to state 126
    attributes                 go to state 127
    attribute                  go to state 59
    scspec                     go to state 128
    struct_head                go to state 61
    union_head                 go to state 62
    enum_head                  go to state 63
    structsp_attr              go to state 64
    structsp_nonattr           go to state 65


state 490

  131 declspecs_nosc_ts_nosa_noea: declspecs_nosc_ts_nosa_ea . TYPE_QUAL
  133                            | declspecs_nosc_ts_nosa_ea . typespec_reserved_nonattr
  139 declspecs_nosc_ts_nosa_ea: declspecs_nosc_ts_nosa_ea . typespec_reserved_attr
  175 declspecs_sc_ts_nosa_noea: declspecs_nosc_ts_nosa_ea . scspec
  199 declspecs_ts: declspecs_nosc_ts_nosa_ea .

    SCSPEC     shift, and go to state 3
    STATIC     shift, and go to state 4
    TYPESPEC   shift, and go to state 5
    TYPE_QUAL  shift, and go to state 129
    ENUM       shift, and go to state 7
    STRUCT     shift, and go to state 8
    UNION      shift, and go to state 9

    $default  reduce using rule 199 (declspecs_ts)

    typespec_reserved_nonattr  go to state 130
    typespec_reserved_attr     go to state 131
    scspec                     go to state 132
    struct_head                go to state 61
    union_head                 go to state 62
    enum_head                  go to state 63
    structsp_attr              go to state 64
    structsp_nonattr           go to state 65


state 491

  142 declspecs_nosc_ts_sa_noea: declspecs_nosc_ts_sa_noea . TYPE_QUAL
  144                          | declspecs_nosc_ts_sa_noea . typespec_reserved_nonattr
  148 declspecs_nosc_ts_sa_ea: declspecs_nosc_ts_sa_noea . attributes
  149                        | declspecs_nosc_ts_sa_noea . typespec_reserved_attr
  189 declspecs_sc_ts_sa_noea: declspecs_nosc_ts_sa_noea . scspec
  200 declspecs_ts: declspecs_nosc_ts_sa_noea .

    SCSPEC     shift, and go to state 3
    STATIC     shift, and go to state 4
    TYPESPEC   shift, and go to state 5
    TYPE_QUAL  shift, and go to state 133
    ENUM       shift, and go to state 7
    STRUCT     shift, and go to state 8
    UNION      shift, and go to state 9
    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 200 (declspecs_ts)

    typespec_reserved_nonattr  go to state 134
    typespec_reserved_attr     go to state 135
    attributes                 go to state 136
    attribute                  go to state 59
    scspec                     go to state 137
    struct_head                go to state 61
    union_head                 go to state 62
    enum_head                  go to state 63
    structsp_attr              go to state 64
    structsp_nonattr           go to state 65


state 492

  143 declspecs_nosc_ts_sa_noea: declspecs_nosc_ts_sa_ea . TYPE_QUAL
  145                          | declspecs_nosc_ts_sa_ea . typespec_reserved_nonattr
  150 declspecs_nosc_ts_sa_ea: declspecs_nosc_ts_sa_ea . typespec_reserved_attr
  190 declspecs_sc_ts_sa_noea: declspecs_nosc_ts_sa_ea . scspec
  201 declspecs_ts: declspecs_nosc_ts_sa_ea .

    SCSPEC     shift, and go to state 3
    STATIC     shift, and go to state 4
    TYPESPEC   shift, and go to state 5
    TYPE_QUAL  shift, and go to state 138
    ENUM       shift, and go to state 7
    STRUCT     shift, and go to state 8
    UNION      shift, and go to state 9

    $default  reduce using rule 201 (declspecs_ts)

    typespec_reserved_nonattr  go to state 139
    typespec_reserved_attr     go to state 140
    scspec                     go to state 141
    struct_head                go to state 61
    union_head                 go to state 62
    enum_head                  go to state 63
    structsp_attr              go to state 64
    structsp_nonattr           go to state 65


state 493

  154 declspecs_sc_nots_nosa_noea: declspecs_sc_nots_nosa_noea . TYPE_QUAL
  158                            | declspecs_sc_nots_nosa_noea . scspec
  160 declspecs_sc_nots_nosa_ea: declspecs_sc_nots_nosa_noea . attributes
  172 declspecs_sc_ts_nosa_noea: declspecs_sc_nots_nosa_noea . typespec_nonattr
  181 declspecs_sc_ts_nosa_ea: declspecs_sc_nots_nosa_noea . typespec_attr
  210 declspecs_nots: declspecs_sc_nots_nosa_noea .

    TYPENAME      shift, and go to state 2
    SCSPEC        shift, and go to state 3
    STATIC        shift, and go to state 4
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 142
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ATTRIBUTE     shift, and go to state 12
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    $default  reduce using rule 210 (declspecs_nots)

    typeof                        go to state 32
    typespec_nonattr              go to state 143
    typespec_attr                 go to state 144
    typespec_reserved_nonattr     go to state 55
    typespec_reserved_attr        go to state 56
    typespec_nonreserved_nonattr  go to state 57
    attributes                    go to state 145
    attribute                     go to state 59
    scspec                        go to state 146
    struct_head                   go to state 61
    union_head                    go to state 62
    enum_head                     go to state 63
    structsp_attr                 go to state 64
    structsp_nonattr              go to state 65
    non_empty_protocolrefs        go to state 72


state 494

  155 declspecs_sc_nots_nosa_noea: declspecs_sc_nots_nosa_ea . TYPE_QUAL
  159                            | declspecs_sc_nots_nosa_ea . scspec
  173 declspecs_sc_ts_nosa_noea: declspecs_sc_nots_nosa_ea . typespec_nonattr
  182 declspecs_sc_ts_nosa_ea: declspecs_sc_nots_nosa_ea . typespec_attr
  211 declspecs_nots: declspecs_sc_nots_nosa_ea .

    TYPENAME      shift, and go to state 2
    SCSPEC        shift, and go to state 3
    STATIC        shift, and go to state 4
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 147
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    $default  reduce using rule 211 (declspecs_nots)

    typeof                        go to state 32
    typespec_nonattr              go to state 148
    typespec_attr                 go to state 149
    typespec_reserved_nonattr     go to state 55
    typespec_reserved_attr        go to state 56
    typespec_nonreserved_nonattr  go to state 57
    scspec                        go to state 150
    struct_head                   go to state 61
    union_head                    go to state 62
    enum_head                     go to state 63
    structsp_attr                 go to state 64
    structsp_nonattr              go to state 65
    non_empty_protocolrefs        go to state 72


state 495

  161 declspecs_sc_nots_sa_noea: declspecs_sc_nots_sa_noea . TYPE_QUAL
  165                          | declspecs_sc_nots_sa_noea . scspec
  167 declspecs_sc_nots_sa_ea: declspecs_sc_nots_sa_noea . attributes
  187 declspecs_sc_ts_sa_noea: declspecs_sc_nots_sa_noea . typespec_nonattr
  196 declspecs_sc_ts_sa_ea: declspecs_sc_nots_sa_noea . typespec_attr
  212 declspecs_nots: declspecs_sc_nots_sa_noea .

    TYPENAME      shift, and go to state 2
    SCSPEC        shift, and go to state 3
    STATIC        shift, and go to state 4
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 151
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ATTRIBUTE     shift, and go to state 12
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    $default  reduce using rule 212 (declspecs_nots)

    typeof                        go to state 32
    typespec_nonattr              go to state 152
    typespec_attr                 go to state 153
    typespec_reserved_nonattr     go to state 55
    typespec_reserved_attr        go to state 56
    typespec_nonreserved_nonattr  go to state 57
    attributes                    go to state 154
    attribute                     go to state 59
    scspec                        go to state 155
    struct_head                   go to state 61
    union_head                    go to state 62
    enum_head                     go to state 63
    structsp_attr                 go to state 64
    structsp_nonattr              go to state 65
    non_empty_protocolrefs        go to state 72


state 496

  162 declspecs_sc_nots_sa_noea: declspecs_sc_nots_sa_ea . TYPE_QUAL
  166                          | declspecs_sc_nots_sa_ea . scspec
  188 declspecs_sc_ts_sa_noea: declspecs_sc_nots_sa_ea . typespec_nonattr
  197 declspecs_sc_ts_sa_ea: declspecs_sc_nots_sa_ea . typespec_attr
  213 declspecs_nots: declspecs_sc_nots_sa_ea .

    TYPENAME      shift, and go to state 2
    SCSPEC        shift, and go to state 3
    STATIC        shift, and go to state 4
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 156
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    $default  reduce using rule 213 (declspecs_nots)

    typeof                        go to state 32
    typespec_nonattr              go to state 157
    typespec_attr                 go to state 158
    typespec_reserved_nonattr     go to state 55
    typespec_reserved_attr        go to state 56
    typespec_nonreserved_nonattr  go to state 57
    scspec                        go to state 159
    struct_head                   go to state 61
    union_head                    go to state 62
    enum_head                     go to state 63
    structsp_attr                 go to state 64
    structsp_nonattr              go to state 65
    non_empty_protocolrefs        go to state 72


state 497

  168 declspecs_sc_ts_nosa_noea: declspecs_sc_ts_nosa_noea . TYPE_QUAL
  170                          | declspecs_sc_ts_nosa_noea . typespec_reserved_nonattr
  176                          | declspecs_sc_ts_nosa_noea . scspec
  178 declspecs_sc_ts_nosa_ea: declspecs_sc_ts_nosa_noea . attributes
  179                        | declspecs_sc_ts_nosa_noea . typespec_reserved_attr
  202 declspecs_ts: declspecs_sc_ts_nosa_noea .

    SCSPEC     shift, and go to state 3
    STATIC     shift, and go to state 4
    TYPESPEC   shift, and go to state 5
    TYPE_QUAL  shift, and go to state 160
    ENUM       shift, and go to state 7
    STRUCT     shift, and go to state 8
    UNION      shift, and go to state 9
    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 202 (declspecs_ts)

    typespec_reserved_nonattr  go to state 161
    typespec_reserved_attr     go to state 162
    attributes                 go to state 163
    attribute                  go to state 59
    scspec                     go to state 164
    struct_head                go to state 61
    union_head                 go to state 62
    enum_head                  go to state 63
    structsp_attr              go to state 64
    structsp_nonattr           go to state 65


state 498

  169 declspecs_sc_ts_nosa_noea: declspecs_sc_ts_nosa_ea . TYPE_QUAL
  171                          | declspecs_sc_ts_nosa_ea . typespec_reserved_nonattr
  177                          | declspecs_sc_ts_nosa_ea . scspec
  180 declspecs_sc_ts_nosa_ea: declspecs_sc_ts_nosa_ea . typespec_reserved_attr
  203 declspecs_ts: declspecs_sc_ts_nosa_ea .

    SCSPEC     shift, and go to state 3
    STATIC     shift, and go to state 4
    TYPESPEC   shift, and go to state 5
    TYPE_QUAL  shift, and go to state 165
    ENUM       shift, and go to state 7
    STRUCT     shift, and go to state 8
    UNION      shift, and go to state 9

    $default  reduce using rule 203 (declspecs_ts)

    typespec_reserved_nonattr  go to state 166
    typespec_reserved_attr     go to state 167
    scspec                     go to state 168
    struct_head                go to state 61
    union_head                 go to state 62
    enum_head                  go to state 63
    structsp_attr              go to state 64
    structsp_nonattr           go to state 65


state 499

  183 declspecs_sc_ts_sa_noea: declspecs_sc_ts_sa_noea . TYPE_QUAL
  185                        | declspecs_sc_ts_sa_noea . typespec_reserved_nonattr
  191                        | declspecs_sc_ts_sa_noea . scspec
  193 declspecs_sc_ts_sa_ea: declspecs_sc_ts_sa_noea . attributes
  194                      | declspecs_sc_ts_sa_noea . typespec_reserved_attr
  204 declspecs_ts: declspecs_sc_ts_sa_noea .

    SCSPEC     shift, and go to state 3
    STATIC     shift, and go to state 4
    TYPESPEC   shift, and go to state 5
    TYPE_QUAL  shift, and go to state 169
    ENUM       shift, and go to state 7
    STRUCT     shift, and go to state 8
    UNION      shift, and go to state 9
    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 204 (declspecs_ts)

    typespec_reserved_nonattr  go to state 170
    typespec_reserved_attr     go to state 171
    attributes                 go to state 172
    attribute                  go to state 59
    scspec                     go to state 173
    struct_head                go to state 61
    union_head                 go to state 62
    enum_head                  go to state 63
    structsp_attr              go to state 64
    structsp_nonattr           go to state 65


state 500

  184 declspecs_sc_ts_sa_noea: declspecs_sc_ts_sa_ea . TYPE_QUAL
  186                        | declspecs_sc_ts_sa_ea . typespec_reserved_nonattr
  192                        | declspecs_sc_ts_sa_ea . scspec
  195 declspecs_sc_ts_sa_ea: declspecs_sc_ts_sa_ea . typespec_reserved_attr
  205 declspecs_ts: declspecs_sc_ts_sa_ea .

    SCSPEC     shift, and go to state 3
    STATIC     shift, and go to state 4
    TYPESPEC   shift, and go to state 5
    TYPE_QUAL  shift, and go to state 174
    ENUM       shift, and go to state 7
    STRUCT     shift, and go to state 8
    UNION      shift, and go to state 9

    $default  reduce using rule 205 (declspecs_ts)

    typespec_reserved_nonattr  go to state 175
    typespec_reserved_attr     go to state 176
    scspec                     go to state 177
    struct_head                go to state 61
    union_head                 go to state 62
    enum_head                  go to state 63
    structsp_attr              go to state 64
    structsp_nonattr           go to state 65


state 501

  598 mydecl: declspecs_ts . setspecs myparms ';'
  599       | declspecs_ts . ';'

    ';'  shift, and go to state 655

    ';'       [reduce using rule 113 (setspecs)]
    $default  reduce using rule 113 (setspecs)

    setspecs  go to state 656


state 502

  600 mydecl: declspecs_nots . ';'

    ';'  shift, and go to state 657


state 503

  595 mydecls: errstmt .

    $default  reduce using rule 595 (mydecls)


state 504

  591 optarglist: ';' myxdecls .

    $default  reduce using rule 591 (optarglist)


state 505

  593 myxdecls: mydecls .
  596 mydecls: mydecls . mydecl

    TYPENAME      shift, and go to state 2
    SCSPEC        shift, and go to state 3
    STATIC        shift, and go to state 4
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 6
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ATTRIBUTE     shift, and go to state 12
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    $default  reduce using rule 593 (myxdecls)

    typeof                         go to state 32
    declspecs_nosc_nots_nosa_noea  go to state 485
    declspecs_nosc_nots_nosa_ea    go to state 486
    declspecs_nosc_nots_sa_noea    go to state 487
    declspecs_nosc_nots_sa_ea      go to state 488
    declspecs_nosc_ts_nosa_noea    go to state 489
    declspecs_nosc_ts_nosa_ea      go to state 490
    declspecs_nosc_ts_sa_noea      go to state 491
    declspecs_nosc_ts_sa_ea        go to state 492
    declspecs_sc_nots_nosa_noea    go to state 493
    declspecs_sc_nots_nosa_ea      go to state 494
    declspecs_sc_nots_sa_noea      go to state 495
    declspecs_sc_nots_sa_ea        go to state 496
    declspecs_sc_ts_nosa_noea      go to state 497
    declspecs_sc_ts_nosa_ea        go to state 498
    declspecs_sc_ts_sa_noea        go to state 499
    declspecs_sc_ts_sa_ea          go to state 500
    declspecs_ts                   go to state 501
    declspecs_nots                 go to state 502
    typespec_nonattr               go to state 53
    typespec_attr                  go to state 54
    typespec_reserved_nonattr      go to state 55
    typespec_reserved_attr         go to state 56
    typespec_nonreserved_nonattr   go to state 57
    attributes                     go to state 58
    attribute                      go to state 59
    scspec                         go to state 60
    struct_head                    go to state 61
    union_head                     go to state 62
    enum_head                      go to state 63
    structsp_attr                  go to state 64
    structsp_nonattr               go to state 65
    non_empty_protocolrefs         go to state 72
    mydecl                         go to state 658


state 506

  594 mydecls: mydecl .
  597        | mydecl . errstmt

    error  shift, and go to state 443

    error         [reduce using rule 594 (mydecls)]
    TYPENAME      reduce using rule 594 (mydecls)
    SCSPEC        reduce using rule 594 (mydecls)
    STATIC        reduce using rule 594 (mydecls)
    TYPESPEC      reduce using rule 594 (mydecls)
    TYPE_QUAL     reduce using rule 594 (mydecls)
    ENUM          reduce using rule 594 (mydecls)
    STRUCT        reduce using rule 594 (mydecls)
    UNION         reduce using rule 594 (mydecls)
    TYPEOF        reduce using rule 594 (mydecls)
    ATTRIBUTE     reduce using rule 594 (mydecls)
    ARITHCOMPARE  reduce using rule 594 (mydecls)
    CLASSNAME     reduce using rule 594 (mydecls)
    OBJECTNAME    reduce using rule 594 (mydecls)
    '{'           reduce using rule 594 (mydecls)

    errstmt  go to state 659


state 507

  444 compstmt_or_error: error . compstmt

    '{'  shift, and go to state 508

    compstmt_start  go to state 510
    compstmt        go to state 660


state 508

  445 compstmt_start: '{' .

    $default  reduce using rule 445 (compstmt_start)


state 509

  576 methoddef: methodtype methoddecl optarglist compstmt_or_error .

    $default  reduce using rule 576 (methoddef)


state 510

  451 compstmt: compstmt_start . compstmt_nostart

    '}'  shift, and go to state 392

    $default  reduce using rule 434 (pushlevel)

    pushlevel         go to state 393
    compstmt_nostart  go to state 661


state 511

  443 compstmt_or_error: compstmt .

    $default  reduce using rule 443 (compstmt_or_error)


state 512

  508 parmlist_2: ELLIPSIS .
  607 optparmlist: ',' ELLIPSIS .

    error     reduce using rule 508 (parmlist_2)
    error     [reduce using rule 607 (optparmlist)]
    ';'       reduce using rule 508 (parmlist_2)
    ';'       [reduce using rule 607 (optparmlist)]
    '{'       reduce using rule 508 (parmlist_2)
    '{'       [reduce using rule 607 (optparmlist)]
    $default  reduce using rule 508 (parmlist_2)


state 513

  122 declspecs_nosc_nots_nosa_noea: declspecs_nosc_nots_nosa_noea . TYPE_QUAL
  124 declspecs_nosc_nots_nosa_ea: declspecs_nosc_nots_nosa_noea . attributes
  134 declspecs_nosc_ts_nosa_noea: declspecs_nosc_nots_nosa_noea . typespec_nonattr
  140 declspecs_nosc_ts_nosa_ea: declspecs_nosc_nots_nosa_noea . typespec_attr
  156 declspecs_sc_nots_nosa_noea: declspecs_nosc_nots_nosa_noea . scspec
  218 declspecs_nots_nosa: declspecs_nosc_nots_nosa_noea .

    TYPENAME      shift, and go to state 2
    SCSPEC        shift, and go to state 3
    STATIC        shift, and go to state 4
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 106
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ATTRIBUTE     shift, and go to state 12
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    $default  reduce using rule 218 (declspecs_nots_nosa)

    typeof                        go to state 32
    typespec_nonattr              go to state 107
    typespec_attr                 go to state 108
    typespec_reserved_nonattr     go to state 55
    typespec_reserved_attr        go to state 56
    typespec_nonreserved_nonattr  go to state 57
    attributes                    go to state 109
    attribute                     go to state 59
    scspec                        go to state 110
    struct_head                   go to state 61
    union_head                    go to state 62
    enum_head                     go to state 63
    structsp_attr                 go to state 64
    structsp_nonattr              go to state 65
    non_empty_protocolrefs        go to state 72


state 514

  123 declspecs_nosc_nots_nosa_noea: declspecs_nosc_nots_nosa_ea . TYPE_QUAL
  135 declspecs_nosc_ts_nosa_noea: declspecs_nosc_nots_nosa_ea . typespec_nonattr
  141 declspecs_nosc_ts_nosa_ea: declspecs_nosc_nots_nosa_ea . typespec_attr
  157 declspecs_sc_nots_nosa_noea: declspecs_nosc_nots_nosa_ea . scspec
  219 declspecs_nots_nosa: declspecs_nosc_nots_nosa_ea .

    TYPENAME      shift, and go to state 2
    SCSPEC        shift, and go to state 3
    STATIC        shift, and go to state 4
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 111
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    $default  reduce using rule 219 (declspecs_nots_nosa)

    typeof                        go to state 32
    typespec_nonattr              go to state 112
    typespec_attr                 go to state 113
    typespec_reserved_nonattr     go to state 55
    typespec_reserved_attr        go to state 56
    typespec_nonreserved_nonattr  go to state 57
    scspec                        go to state 114
    struct_head                   go to state 61
    union_head                    go to state 62
    enum_head                     go to state 63
    structsp_attr                 go to state 64
    structsp_nonattr              go to state 65
    non_empty_protocolrefs        go to state 72


state 515

  130 declspecs_nosc_ts_nosa_noea: declspecs_nosc_ts_nosa_noea . TYPE_QUAL
  132                            | declspecs_nosc_ts_nosa_noea . typespec_reserved_nonattr
  137 declspecs_nosc_ts_nosa_ea: declspecs_nosc_ts_nosa_noea . attributes
  138                          | declspecs_nosc_ts_nosa_noea . typespec_reserved_attr
  174 declspecs_sc_ts_nosa_noea: declspecs_nosc_ts_nosa_noea . scspec
  214 declspecs_ts_nosa: declspecs_nosc_ts_nosa_noea .

    SCSPEC     shift, and go to state 3
    STATIC     shift, and go to state 4
    TYPESPEC   shift, and go to state 5
    TYPE_QUAL  shift, and go to state 124
    ENUM       shift, and go to state 7
    STRUCT     shift, and go to state 8
    UNION      shift, and go to state 9
    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 214 (declspecs_ts_nosa)

    typespec_reserved_nonattr  go to state 125
    typespec_reserved_attr     go to state 126
    attributes                 go to state 127
    attribute                  go to state 59
    scspec                     go to state 128
    struct_head                go to state 61
    union_head                 go to state 62
    enum_head                  go to state 63
    structsp_attr              go to state 64
    structsp_nonattr           go to state 65


state 516

  131 declspecs_nosc_ts_nosa_noea: declspecs_nosc_ts_nosa_ea . TYPE_QUAL
  133                            | declspecs_nosc_ts_nosa_ea . typespec_reserved_nonattr
  139 declspecs_nosc_ts_nosa_ea: declspecs_nosc_ts_nosa_ea . typespec_reserved_attr
  175 declspecs_sc_ts_nosa_noea: declspecs_nosc_ts_nosa_ea . scspec
  215 declspecs_ts_nosa: declspecs_nosc_ts_nosa_ea .

    SCSPEC     shift, and go to state 3
    STATIC     shift, and go to state 4
    TYPESPEC   shift, and go to state 5
    TYPE_QUAL  shift, and go to state 129
    ENUM       shift, and go to state 7
    STRUCT     shift, and go to state 8
    UNION      shift, and go to state 9

    $default  reduce using rule 215 (declspecs_ts_nosa)

    typespec_reserved_nonattr  go to state 130
    typespec_reserved_attr     go to state 131
    scspec                     go to state 132
    struct_head                go to state 61
    union_head                 go to state 62
    enum_head                  go to state 63
    structsp_attr              go to state 64
    structsp_nonattr           go to state 65


state 517

  154 declspecs_sc_nots_nosa_noea: declspecs_sc_nots_nosa_noea . TYPE_QUAL
  158                            | declspecs_sc_nots_nosa_noea . scspec
  160 declspecs_sc_nots_nosa_ea: declspecs_sc_nots_nosa_noea . attributes
  172 declspecs_sc_ts_nosa_noea: declspecs_sc_nots_nosa_noea . typespec_nonattr
  181 declspecs_sc_ts_nosa_ea: declspecs_sc_nots_nosa_noea . typespec_attr
  220 declspecs_nots_nosa: declspecs_sc_nots_nosa_noea .

    TYPENAME      shift, and go to state 2
    SCSPEC        shift, and go to state 3
    STATIC        shift, and go to state 4
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 142
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ATTRIBUTE     shift, and go to state 12
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    $default  reduce using rule 220 (declspecs_nots_nosa)

    typeof                        go to state 32
    typespec_nonattr              go to state 143
    typespec_attr                 go to state 144
    typespec_reserved_nonattr     go to state 55
    typespec_reserved_attr        go to state 56
    typespec_nonreserved_nonattr  go to state 57
    attributes                    go to state 145
    attribute                     go to state 59
    scspec                        go to state 146
    struct_head                   go to state 61
    union_head                    go to state 62
    enum_head                     go to state 63
    structsp_attr                 go to state 64
    structsp_nonattr              go to state 65
    non_empty_protocolrefs        go to state 72


state 518

  155 declspecs_sc_nots_nosa_noea: declspecs_sc_nots_nosa_ea . TYPE_QUAL
  159                            | declspecs_sc_nots_nosa_ea . scspec
  173 declspecs_sc_ts_nosa_noea: declspecs_sc_nots_nosa_ea . typespec_nonattr
  182 declspecs_sc_ts_nosa_ea: declspecs_sc_nots_nosa_ea . typespec_attr
  221 declspecs_nots_nosa: declspecs_sc_nots_nosa_ea .

    TYPENAME      shift, and go to state 2
    SCSPEC        shift, and go to state 3
    STATIC        shift, and go to state 4
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 147
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    $default  reduce using rule 221 (declspecs_nots_nosa)

    typeof                        go to state 32
    typespec_nonattr              go to state 148
    typespec_attr                 go to state 149
    typespec_reserved_nonattr     go to state 55
    typespec_reserved_attr        go to state 56
    typespec_nonreserved_nonattr  go to state 57
    scspec                        go to state 150
    struct_head                   go to state 61
    union_head                    go to state 62
    enum_head                     go to state 63
    structsp_attr                 go to state 64
    structsp_nonattr              go to state 65
    non_empty_protocolrefs        go to state 72


state 519

  168 declspecs_sc_ts_nosa_noea: declspecs_sc_ts_nosa_noea . TYPE_QUAL
  170                          | declspecs_sc_ts_nosa_noea . typespec_reserved_nonattr
  176                          | declspecs_sc_ts_nosa_noea . scspec
  178 declspecs_sc_ts_nosa_ea: declspecs_sc_ts_nosa_noea . attributes
  179                        | declspecs_sc_ts_nosa_noea . typespec_reserved_attr
  216 declspecs_ts_nosa: declspecs_sc_ts_nosa_noea .

    SCSPEC     shift, and go to state 3
    STATIC     shift, and go to state 4
    TYPESPEC   shift, and go to state 5
    TYPE_QUAL  shift, and go to state 160
    ENUM       shift, and go to state 7
    STRUCT     shift, and go to state 8
    UNION      shift, and go to state 9
    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 216 (declspecs_ts_nosa)

    typespec_reserved_nonattr  go to state 161
    typespec_reserved_attr     go to state 162
    attributes                 go to state 163
    attribute                  go to state 59
    scspec                     go to state 164
    struct_head                go to state 61
    union_head                 go to state 62
    enum_head                  go to state 63
    structsp_attr              go to state 64
    structsp_nonattr           go to state 65


state 520

  169 declspecs_sc_ts_nosa_noea: declspecs_sc_ts_nosa_ea . TYPE_QUAL
  171                          | declspecs_sc_ts_nosa_ea . typespec_reserved_nonattr
  177                          | declspecs_sc_ts_nosa_ea . scspec
  180 declspecs_sc_ts_nosa_ea: declspecs_sc_ts_nosa_ea . typespec_reserved_attr
  217 declspecs_ts_nosa: declspecs_sc_ts_nosa_ea .

    SCSPEC     shift, and go to state 3
    STATIC     shift, and go to state 4
    TYPESPEC   shift, and go to state 5
    TYPE_QUAL  shift, and go to state 165
    ENUM       shift, and go to state 7
    STRUCT     shift, and go to state 8
    UNION      shift, and go to state 9

    $default  reduce using rule 217 (declspecs_ts_nosa)

    typespec_reserved_nonattr  go to state 166
    typespec_reserved_attr     go to state 167
    scspec                     go to state 168
    struct_head                go to state 61
    union_head                 go to state 62
    enum_head                  go to state 63
    structsp_attr              go to state 64
    structsp_nonattr           go to state 65


state 521

  518 firstparm: declspecs_ts_nosa . setspecs_fp parm_declarator maybe_attribute
  519          | declspecs_ts_nosa . setspecs_fp notype_declarator maybe_attribute
  520          | declspecs_ts_nosa . setspecs_fp absdcl_maybe_attribute

    $default  reduce using rule 113 (setspecs)

    setspecs     go to state 662
    setspecs_fp  go to state 663


state 522

  521 firstparm: declspecs_nots_nosa . setspecs_fp notype_declarator maybe_attribute
  522          | declspecs_nots_nosa . setspecs_fp absdcl_maybe_attribute

    $default  reduce using rule 113 (setspecs)

    setspecs     go to state 662
    setspecs_fp  go to state 664


state 523

  608 optparmlist: ',' parmlist_2 .

    $default  reduce using rule 608 (optparmlist)


state 524

  509 parmlist_2: parms .
  510           | parms . ',' ELLIPSIS
  512 parms: parms . ',' parm

    ','  shift, and go to state 665

    $default  reduce using rule 509 (parmlist_2)


state 525

  511 parms: firstparm .

    $default  reduce using rule 511 (parms)


state 526

  638 keyworddecl: selector ':' '(' . typename ')' identifier

    TYPENAME      shift, and go to state 2
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 6
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ATTRIBUTE     shift, and go to state 12
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    typeof                         go to state 32
    declspecs_nosc_nots_nosa_noea  go to state 278
    declspecs_nosc_nots_nosa_ea    go to state 279
    declspecs_nosc_nots_sa_noea    go to state 280
    declspecs_nosc_nots_sa_ea      go to state 281
    declspecs_nosc_ts_nosa_noea    go to state 282
    declspecs_nosc_ts_nosa_ea      go to state 283
    declspecs_nosc_ts_sa_noea      go to state 284
    declspecs_nosc_ts_sa_ea        go to state 285
    declspecs_nosc                 go to state 286
    typespec_nonattr               go to state 53
    typespec_attr                  go to state 54
    typespec_reserved_nonattr      go to state 55
    typespec_reserved_attr         go to state 56
    typespec_nonreserved_nonattr   go to state 57
    attributes                     go to state 58
    attribute                      go to state 59
    struct_head                    go to state 61
    union_head                     go to state 62
    enum_head                      go to state 63
    structsp_attr                  go to state 64
    structsp_nonattr               go to state 65
    typename                       go to state 666
    non_empty_protocolrefs         go to state 72


state 527

  639 keyworddecl: selector ':' identifier .

    $default  reduce using rule 639 (keyworddecl)


state 528

   57 expr_no_commas: expr_no_commas . '+' expr_no_commas
   58               | expr_no_commas . '-' expr_no_commas
   59               | expr_no_commas . '*' expr_no_commas
   60               | expr_no_commas . '/' expr_no_commas
   61               | expr_no_commas . '%' expr_no_commas
   62               | expr_no_commas . LSHIFT expr_no_commas
   63               | expr_no_commas . RSHIFT expr_no_commas
   64               | expr_no_commas . ARITHCOMPARE expr_no_commas
   65               | expr_no_commas . EQCOMPARE expr_no_commas
   66               | expr_no_commas . '&' expr_no_commas
   67               | expr_no_commas . '|' expr_no_commas
   68               | expr_no_commas . '^' expr_no_commas
   69               | expr_no_commas . ANDAND expr_no_commas
   70               | expr_no_commas . OROR expr_no_commas
   71               | expr_no_commas . '?' expr ':' expr_no_commas
   72               | expr_no_commas . '?' ':' expr_no_commas
   73               | expr_no_commas . '=' expr_no_commas
   74               | expr_no_commas . ASSIGN expr_no_commas
   85 primary: VA_ARG '(' expr_no_commas . ',' typename ')'

    '='           shift, and go to state 367
    ASSIGN        shift, and go to state 368
    '?'           shift, and go to state 369
    OROR          shift, and go to state 370
    ANDAND        shift, and go to state 371
    '|'           shift, and go to state 372
    '^'           shift, and go to state 373
    '&'           shift, and go to state 374
    EQCOMPARE     shift, and go to state 375
    ARITHCOMPARE  shift, and go to state 376
    RSHIFT        shift, and go to state 377
    LSHIFT        shift, and go to state 378
    '+'           shift, and go to state 379
    '-'           shift, and go to state 380
    '*'           shift, and go to state 381
    '/'           shift, and go to state 382
    '%'           shift, and go to state 383
    ','           shift, and go to state 667


state 529

   57 expr_no_commas: expr_no_commas . '+' expr_no_commas
   58               | expr_no_commas . '-' expr_no_commas
   59               | expr_no_commas . '*' expr_no_commas
   60               | expr_no_commas . '/' expr_no_commas
   61               | expr_no_commas . '%' expr_no_commas
   62               | expr_no_commas . LSHIFT expr_no_commas
   63               | expr_no_commas . RSHIFT expr_no_commas
   64               | expr_no_commas . ARITHCOMPARE expr_no_commas
   65               | expr_no_commas . EQCOMPARE expr_no_commas
   66               | expr_no_commas . '&' expr_no_commas
   67               | expr_no_commas . '|' expr_no_commas
   68               | expr_no_commas . '^' expr_no_commas
   69               | expr_no_commas . ANDAND expr_no_commas
   70               | expr_no_commas . OROR expr_no_commas
   71               | expr_no_commas . '?' expr ':' expr_no_commas
   72               | expr_no_commas . '?' ':' expr_no_commas
   73               | expr_no_commas . '=' expr_no_commas
   74               | expr_no_commas . ASSIGN expr_no_commas
   86 primary: CHOOSE_EXPR '(' expr_no_commas . ',' expr_no_commas ',' expr_no_commas ')'

    '='           shift, and go to state 367
    ASSIGN        shift, and go to state 368
    '?'           shift, and go to state 369
    OROR          shift, and go to state 370
    ANDAND        shift, and go to state 371
    '|'           shift, and go to state 372
    '^'           shift, and go to state 373
    '&'           shift, and go to state 374
    EQCOMPARE     shift, and go to state 375
    ARITHCOMPARE  shift, and go to state 376
    RSHIFT        shift, and go to state 377
    LSHIFT        shift, and go to state 378
    '+'           shift, and go to state 379
    '-'           shift, and go to state 380
    '*'           shift, and go to state 381
    '/'           shift, and go to state 382
    '%'           shift, and go to state 383
    ','           shift, and go to state 668


state 530

   87 primary: TYPES_COMPATIBLE_P '(' typename . ',' typename ')'

    ','  shift, and go to state 669


state 531

   81 primary: '(' error ')' .

    $default  reduce using rule 81 (primary)


state 532

   80 primary: '(' expr ')' .

    $default  reduce using rule 80 (primary)


state 533

   55 cast_expr: '(' typename ')' . cast_expr
   79 primary: '(' typename ')' . '{' initlist_maybe_comma '}'

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '{'                 shift, and go to state 670
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 671
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 534

  648 keywordarg: ':' . keywordexpr

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    nonnull_exprlist        go to state 672
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 255
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    keywordexpr             go to state 673
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 535

  642 messageargs: selector .
  647 keywordarg: selector . ':' keywordexpr

    ':'  shift, and go to state 674

    $default  reduce using rule 642 (messageargs)


state 536

  651 objcmessageexpr: '[' receiver messageargs . ']'

    ']'  shift, and go to state 675


state 537

  643 messageargs: keywordarglist .
  645 keywordarglist: keywordarglist . keywordarg

    IDENTIFIER   shift, and go to state 189
    TYPENAME     shift, and go to state 190
    TYPESPEC     shift, and go to state 191
    TYPE_QUAL    shift, and go to state 192
    SIZEOF       shift, and go to state 193
    ENUM         shift, and go to state 194
    STRUCT       shift, and go to state 195
    UNION        shift, and go to state 196
    IF           shift, and go to state 197
    ELSE         shift, and go to state 198
    WHILE        shift, and go to state 199
    DO           shift, and go to state 200
    FOR          shift, and go to state 201
    SWITCH       shift, and go to state 202
    CASE         shift, and go to state 203
    DEFAULT      shift, and go to state 204
    BREAK        shift, and go to state 205
    CONTINUE     shift, and go to state 206
    RETURN       shift, and go to state 207
    GOTO         shift, and go to state 208
    ASM_KEYWORD  shift, and go to state 209
    TYPEOF       shift, and go to state 210
    ALIGNOF      shift, and go to state 211
    ':'          shift, and go to state 534
    CLASSNAME    shift, and go to state 214
    OBJECTNAME   shift, and go to state 215

    $default  reduce using rule 643 (messageargs)

    selector       go to state 676
    reservedwords  go to state 220
    keywordarg     go to state 677


state 538

  644 keywordarglist: keywordarg .

    $default  reduce using rule 644 (keywordarglist)


state 539

  657 keywordname: ':' .

    $default  reduce using rule 657 (keywordname)


state 540

  652 selectorarg: selector .
  656 keywordname: selector . ':'

    ':'  shift, and go to state 678

    $default  reduce using rule 652 (selectorarg)


state 541

  658 objcselectorexpr: SELECTOR '(' selectorarg . ')'

    ')'  shift, and go to state 679


state 542

  653 selectorarg: keywordnamelist .
  655 keywordnamelist: keywordnamelist . keywordname

    IDENTIFIER   shift, and go to state 189
    TYPENAME     shift, and go to state 190
    TYPESPEC     shift, and go to state 191
    TYPE_QUAL    shift, and go to state 192
    SIZEOF       shift, and go to state 193
    ENUM         shift, and go to state 194
    STRUCT       shift, and go to state 195
    UNION        shift, and go to state 196
    IF           shift, and go to state 197
    ELSE         shift, and go to state 198
    WHILE        shift, and go to state 199
    DO           shift, and go to state 200
    FOR          shift, and go to state 201
    SWITCH       shift, and go to state 202
    CASE         shift, and go to state 203
    DEFAULT      shift, and go to state 204
    BREAK        shift, and go to state 205
    CONTINUE     shift, and go to state 206
    RETURN       shift, and go to state 207
    GOTO         shift, and go to state 208
    ASM_KEYWORD  shift, and go to state 209
    TYPEOF       shift, and go to state 210
    ALIGNOF      shift, and go to state 211
    ':'          shift, and go to state 539
    CLASSNAME    shift, and go to state 214
    OBJECTNAME   shift, and go to state 215

    $default  reduce using rule 653 (selectorarg)

    selector       go to state 680
    reservedwords  go to state 220
    keywordname    go to state 681


state 543

  654 keywordnamelist: keywordname .

    $default  reduce using rule 654 (keywordnamelist)


state 544

  660 objcencodeexpr: ENCODE '(' typename . ')'

    ')'  shift, and go to state 682


state 545

  659 objcprotocolexpr: PROTOCOL '(' identifier . ')'

    ')'  shift, and go to state 683


state 546

    9 extdef_1: ASM_KEYWORD '(' expr ')' ';' .

    $default  reduce using rule 9 (extdef_1)


state 547

   39 nonnull_exprlist: nonnull_exprlist ',' expr_no_commas .
   57 expr_no_commas: expr_no_commas . '+' expr_no_commas
   58               | expr_no_commas . '-' expr_no_commas
   59               | expr_no_commas . '*' expr_no_commas
   60               | expr_no_commas . '/' expr_no_commas
   61               | expr_no_commas . '%' expr_no_commas
   62               | expr_no_commas . LSHIFT expr_no_commas
   63               | expr_no_commas . RSHIFT expr_no_commas
   64               | expr_no_commas . ARITHCOMPARE expr_no_commas
   65               | expr_no_commas . EQCOMPARE expr_no_commas
   66               | expr_no_commas . '&' expr_no_commas
   67               | expr_no_commas . '|' expr_no_commas
   68               | expr_no_commas . '^' expr_no_commas
   69               | expr_no_commas . ANDAND expr_no_commas
   70               | expr_no_commas . OROR expr_no_commas
   71               | expr_no_commas . '?' expr ':' expr_no_commas
   72               | expr_no_commas . '?' ':' expr_no_commas
   73               | expr_no_commas . '=' expr_no_commas
   74               | expr_no_commas . ASSIGN expr_no_commas

    '='           shift, and go to state 367
    ASSIGN        shift, and go to state 368
    '?'           shift, and go to state 369
    OROR          shift, and go to state 370
    ANDAND        shift, and go to state 371
    '|'           shift, and go to state 372
    '^'           shift, and go to state 373
    '&'           shift, and go to state 374
    EQCOMPARE     shift, and go to state 375
    ARITHCOMPARE  shift, and go to state 376
    RSHIFT        shift, and go to state 377
    LSHIFT        shift, and go to state 378
    '+'           shift, and go to state 379
    '-'           shift, and go to state 380
    '*'           shift, and go to state 381
    '/'           shift, and go to state 382
    '%'           shift, and go to state 383

    $default  reduce using rule 39 (nonnull_exprlist)


state 548

   46 unary_expr: sizeof '(' typename . ')'
   79 primary: '(' typename . ')' '{' initlist_maybe_comma '}'

    ')'  shift, and go to state 684


state 549

   48 unary_expr: alignof '(' typename . ')'
   79 primary: '(' typename . ')' '{' initlist_maybe_comma '}'

    ')'  shift, and go to state 685


state 550

   57 expr_no_commas: expr_no_commas . '+' expr_no_commas
   58               | expr_no_commas . '-' expr_no_commas
   59               | expr_no_commas . '*' expr_no_commas
   60               | expr_no_commas . '/' expr_no_commas
   61               | expr_no_commas . '%' expr_no_commas
   62               | expr_no_commas . LSHIFT expr_no_commas
   63               | expr_no_commas . RSHIFT expr_no_commas
   64               | expr_no_commas . ARITHCOMPARE expr_no_commas
   65               | expr_no_commas . EQCOMPARE expr_no_commas
   66               | expr_no_commas . '&' expr_no_commas
   67               | expr_no_commas . '|' expr_no_commas
   68               | expr_no_commas . '^' expr_no_commas
   69               | expr_no_commas . ANDAND expr_no_commas
   70               | expr_no_commas . OROR expr_no_commas
   71               | expr_no_commas . '?' expr ':' expr_no_commas
   72               | expr_no_commas . '?' ':' expr_no_commas
   73               | expr_no_commas . '=' expr_no_commas
   73               | expr_no_commas '=' expr_no_commas .
   74               | expr_no_commas . ASSIGN expr_no_commas

    '='           shift, and go to state 367
    ASSIGN        shift, and go to state 368
    '?'           shift, and go to state 369
    OROR          shift, and go to state 370
    ANDAND        shift, and go to state 371
    '|'           shift, and go to state 372
    '^'           shift, and go to state 373
    '&'           shift, and go to state 374
    EQCOMPARE     shift, and go to state 375
    ARITHCOMPARE  shift, and go to state 376
    RSHIFT        shift, and go to state 377
    LSHIFT        shift, and go to state 378
    '+'           shift, and go to state 379
    '-'           shift, and go to state 380
    '*'           shift, and go to state 381
    '/'           shift, and go to state 382
    '%'           shift, and go to state 383

    $default  reduce using rule 73 (expr_no_commas)


state 551

   57 expr_no_commas: expr_no_commas . '+' expr_no_commas
   58               | expr_no_commas . '-' expr_no_commas
   59               | expr_no_commas . '*' expr_no_commas
   60               | expr_no_commas . '/' expr_no_commas
   61               | expr_no_commas . '%' expr_no_commas
   62               | expr_no_commas . LSHIFT expr_no_commas
   63               | expr_no_commas . RSHIFT expr_no_commas
   64               | expr_no_commas . ARITHCOMPARE expr_no_commas
   65               | expr_no_commas . EQCOMPARE expr_no_commas
   66               | expr_no_commas . '&' expr_no_commas
   67               | expr_no_commas . '|' expr_no_commas
   68               | expr_no_commas . '^' expr_no_commas
   69               | expr_no_commas . ANDAND expr_no_commas
   70               | expr_no_commas . OROR expr_no_commas
   71               | expr_no_commas . '?' expr ':' expr_no_commas
   72               | expr_no_commas . '?' ':' expr_no_commas
   73               | expr_no_commas . '=' expr_no_commas
   74               | expr_no_commas . ASSIGN expr_no_commas
   74               | expr_no_commas ASSIGN expr_no_commas .

    '='           shift, and go to state 367
    ASSIGN        shift, and go to state 368
    '?'           shift, and go to state 369
    OROR          shift, and go to state 370
    ANDAND        shift, and go to state 371
    '|'           shift, and go to state 372
    '^'           shift, and go to state 373
    '&'           shift, and go to state 374
    EQCOMPARE     shift, and go to state 375
    ARITHCOMPARE  shift, and go to state 376
    RSHIFT        shift, and go to state 377
    LSHIFT        shift, and go to state 378
    '+'           shift, and go to state 379
    '-'           shift, and go to state 380
    '*'           shift, and go to state 381
    '/'           shift, and go to state 382
    '%'           shift, and go to state 383

    $default  reduce using rule 74 (expr_no_commas)


state 552

   72 expr_no_commas: expr_no_commas '?' ':' . expr_no_commas

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 686
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 553

   71 expr_no_commas: expr_no_commas '?' expr . ':' expr_no_commas

    ':'  shift, and go to state 687


state 554

   57 expr_no_commas: expr_no_commas . '+' expr_no_commas
   58               | expr_no_commas . '-' expr_no_commas
   59               | expr_no_commas . '*' expr_no_commas
   60               | expr_no_commas . '/' expr_no_commas
   61               | expr_no_commas . '%' expr_no_commas
   62               | expr_no_commas . LSHIFT expr_no_commas
   63               | expr_no_commas . RSHIFT expr_no_commas
   64               | expr_no_commas . ARITHCOMPARE expr_no_commas
   65               | expr_no_commas . EQCOMPARE expr_no_commas
   66               | expr_no_commas . '&' expr_no_commas
   67               | expr_no_commas . '|' expr_no_commas
   68               | expr_no_commas . '^' expr_no_commas
   69               | expr_no_commas . ANDAND expr_no_commas
   70               | expr_no_commas . OROR expr_no_commas
   70               | expr_no_commas OROR expr_no_commas .
   71               | expr_no_commas . '?' expr ':' expr_no_commas
   72               | expr_no_commas . '?' ':' expr_no_commas
   73               | expr_no_commas . '=' expr_no_commas
   74               | expr_no_commas . ASSIGN expr_no_commas

    ANDAND        shift, and go to state 371
    '|'           shift, and go to state 372
    '^'           shift, and go to state 373
    '&'           shift, and go to state 374
    EQCOMPARE     shift, and go to state 375
    ARITHCOMPARE  shift, and go to state 376
    RSHIFT        shift, and go to state 377
    LSHIFT        shift, and go to state 378
    '+'           shift, and go to state 379
    '-'           shift, and go to state 380
    '*'           shift, and go to state 381
    '/'           shift, and go to state 382
    '%'           shift, and go to state 383

    $default  reduce using rule 70 (expr_no_commas)


state 555

   57 expr_no_commas: expr_no_commas . '+' expr_no_commas
   58               | expr_no_commas . '-' expr_no_commas
   59               | expr_no_commas . '*' expr_no_commas
   60               | expr_no_commas . '/' expr_no_commas
   61               | expr_no_commas . '%' expr_no_commas
   62               | expr_no_commas . LSHIFT expr_no_commas
   63               | expr_no_commas . RSHIFT expr_no_commas
   64               | expr_no_commas . ARITHCOMPARE expr_no_commas
   65               | expr_no_commas . EQCOMPARE expr_no_commas
   66               | expr_no_commas . '&' expr_no_commas
   67               | expr_no_commas . '|' expr_no_commas
   68               | expr_no_commas . '^' expr_no_commas
   69               | expr_no_commas . ANDAND expr_no_commas
   69               | expr_no_commas ANDAND expr_no_commas .
   70               | expr_no_commas . OROR expr_no_commas
   71               | expr_no_commas . '?' expr ':' expr_no_commas
   72               | expr_no_commas . '?' ':' expr_no_commas
   73               | expr_no_commas . '=' expr_no_commas
   74               | expr_no_commas . ASSIGN expr_no_commas

    '|'           shift, and go to state 372
    '^'           shift, and go to state 373
    '&'           shift, and go to state 374
    EQCOMPARE     shift, and go to state 375
    ARITHCOMPARE  shift, and go to state 376
    RSHIFT        shift, and go to state 377
    LSHIFT        shift, and go to state 378
    '+'           shift, and go to state 379
    '-'           shift, and go to state 380
    '*'           shift, and go to state 381
    '/'           shift, and go to state 382
    '%'           shift, and go to state 383

    $default  reduce using rule 69 (expr_no_commas)


state 556

   57 expr_no_commas: expr_no_commas . '+' expr_no_commas
   58               | expr_no_commas . '-' expr_no_commas
   59               | expr_no_commas . '*' expr_no_commas
   60               | expr_no_commas . '/' expr_no_commas
   61               | expr_no_commas . '%' expr_no_commas
   62               | expr_no_commas . LSHIFT expr_no_commas
   63               | expr_no_commas . RSHIFT expr_no_commas
   64               | expr_no_commas . ARITHCOMPARE expr_no_commas
   65               | expr_no_commas . EQCOMPARE expr_no_commas
   66               | expr_no_commas . '&' expr_no_commas
   67               | expr_no_commas . '|' expr_no_commas
   67               | expr_no_commas '|' expr_no_commas .
   68               | expr_no_commas . '^' expr_no_commas
   69               | expr_no_commas . ANDAND expr_no_commas
   70               | expr_no_commas . OROR expr_no_commas
   71               | expr_no_commas . '?' expr ':' expr_no_commas
   72               | expr_no_commas . '?' ':' expr_no_commas
   73               | expr_no_commas . '=' expr_no_commas
   74               | expr_no_commas . ASSIGN expr_no_commas

    '^'           shift, and go to state 373
    '&'           shift, and go to state 374
    EQCOMPARE     shift, and go to state 375
    ARITHCOMPARE  shift, and go to state 376
    RSHIFT        shift, and go to state 377
    LSHIFT        shift, and go to state 378
    '+'           shift, and go to state 379
    '-'           shift, and go to state 380
    '*'           shift, and go to state 381
    '/'           shift, and go to state 382
    '%'           shift, and go to state 383

    $default  reduce using rule 67 (expr_no_commas)


state 557

   57 expr_no_commas: expr_no_commas . '+' expr_no_commas
   58               | expr_no_commas . '-' expr_no_commas
   59               | expr_no_commas . '*' expr_no_commas
   60               | expr_no_commas . '/' expr_no_commas
   61               | expr_no_commas . '%' expr_no_commas
   62               | expr_no_commas . LSHIFT expr_no_commas
   63               | expr_no_commas . RSHIFT expr_no_commas
   64               | expr_no_commas . ARITHCOMPARE expr_no_commas
   65               | expr_no_commas . EQCOMPARE expr_no_commas
   66               | expr_no_commas . '&' expr_no_commas
   67               | expr_no_commas . '|' expr_no_commas
   68               | expr_no_commas . '^' expr_no_commas
   68               | expr_no_commas '^' expr_no_commas .
   69               | expr_no_commas . ANDAND expr_no_commas
   70               | expr_no_commas . OROR expr_no_commas
   71               | expr_no_commas . '?' expr ':' expr_no_commas
   72               | expr_no_commas . '?' ':' expr_no_commas
   73               | expr_no_commas . '=' expr_no_commas
   74               | expr_no_commas . ASSIGN expr_no_commas

    '&'           shift, and go to state 374
    EQCOMPARE     shift, and go to state 375
    ARITHCOMPARE  shift, and go to state 376
    RSHIFT        shift, and go to state 377
    LSHIFT        shift, and go to state 378
    '+'           shift, and go to state 379
    '-'           shift, and go to state 380
    '*'           shift, and go to state 381
    '/'           shift, and go to state 382
    '%'           shift, and go to state 383

    $default  reduce using rule 68 (expr_no_commas)


state 558

   57 expr_no_commas: expr_no_commas . '+' expr_no_commas
   58               | expr_no_commas . '-' expr_no_commas
   59               | expr_no_commas . '*' expr_no_commas
   60               | expr_no_commas . '/' expr_no_commas
   61               | expr_no_commas . '%' expr_no_commas
   62               | expr_no_commas . LSHIFT expr_no_commas
   63               | expr_no_commas . RSHIFT expr_no_commas
   64               | expr_no_commas . ARITHCOMPARE expr_no_commas
   65               | expr_no_commas . EQCOMPARE expr_no_commas
   66               | expr_no_commas . '&' expr_no_commas
   66               | expr_no_commas '&' expr_no_commas .
   67               | expr_no_commas . '|' expr_no_commas
   68               | expr_no_commas . '^' expr_no_commas
   69               | expr_no_commas . ANDAND expr_no_commas
   70               | expr_no_commas . OROR expr_no_commas
   71               | expr_no_commas . '?' expr ':' expr_no_commas
   72               | expr_no_commas . '?' ':' expr_no_commas
   73               | expr_no_commas . '=' expr_no_commas
   74               | expr_no_commas . ASSIGN expr_no_commas

    EQCOMPARE     shift, and go to state 375
    ARITHCOMPARE  shift, and go to state 376
    RSHIFT        shift, and go to state 377
    LSHIFT        shift, and go to state 378
    '+'           shift, and go to state 379
    '-'           shift, and go to state 380
    '*'           shift, and go to state 381
    '/'           shift, and go to state 382
    '%'           shift, and go to state 383

    $default  reduce using rule 66 (expr_no_commas)


state 559

   57 expr_no_commas: expr_no_commas . '+' expr_no_commas
   58               | expr_no_commas . '-' expr_no_commas
   59               | expr_no_commas . '*' expr_no_commas
   60               | expr_no_commas . '/' expr_no_commas
   61               | expr_no_commas . '%' expr_no_commas
   62               | expr_no_commas . LSHIFT expr_no_commas
   63               | expr_no_commas . RSHIFT expr_no_commas
   64               | expr_no_commas . ARITHCOMPARE expr_no_commas
   65               | expr_no_commas . EQCOMPARE expr_no_commas
   65               | expr_no_commas EQCOMPARE expr_no_commas .
   66               | expr_no_commas . '&' expr_no_commas
   67               | expr_no_commas . '|' expr_no_commas
   68               | expr_no_commas . '^' expr_no_commas
   69               | expr_no_commas . ANDAND expr_no_commas
   70               | expr_no_commas . OROR expr_no_commas
   71               | expr_no_commas . '?' expr ':' expr_no_commas
   72               | expr_no_commas . '?' ':' expr_no_commas
   73               | expr_no_commas . '=' expr_no_commas
   74               | expr_no_commas . ASSIGN expr_no_commas

    ARITHCOMPARE  shift, and go to state 376
    RSHIFT        shift, and go to state 377
    LSHIFT        shift, and go to state 378
    '+'           shift, and go to state 379
    '-'           shift, and go to state 380
    '*'           shift, and go to state 381
    '/'           shift, and go to state 382
    '%'           shift, and go to state 383

    $default  reduce using rule 65 (expr_no_commas)


state 560

   57 expr_no_commas: expr_no_commas . '+' expr_no_commas
   58               | expr_no_commas . '-' expr_no_commas
   59               | expr_no_commas . '*' expr_no_commas
   60               | expr_no_commas . '/' expr_no_commas
   61               | expr_no_commas . '%' expr_no_commas
   62               | expr_no_commas . LSHIFT expr_no_commas
   63               | expr_no_commas . RSHIFT expr_no_commas
   64               | expr_no_commas . ARITHCOMPARE expr_no_commas
   64               | expr_no_commas ARITHCOMPARE expr_no_commas .
   65               | expr_no_commas . EQCOMPARE expr_no_commas
   66               | expr_no_commas . '&' expr_no_commas
   67               | expr_no_commas . '|' expr_no_commas
   68               | expr_no_commas . '^' expr_no_commas
   69               | expr_no_commas . ANDAND expr_no_commas
   70               | expr_no_commas . OROR expr_no_commas
   71               | expr_no_commas . '?' expr ':' expr_no_commas
   72               | expr_no_commas . '?' ':' expr_no_commas
   73               | expr_no_commas . '=' expr_no_commas
   74               | expr_no_commas . ASSIGN expr_no_commas

    RSHIFT  shift, and go to state 377
    LSHIFT  shift, and go to state 378
    '+'     shift, and go to state 379
    '-'     shift, and go to state 380
    '*'     shift, and go to state 381
    '/'     shift, and go to state 382
    '%'     shift, and go to state 383

    $default  reduce using rule 64 (expr_no_commas)


state 561

   57 expr_no_commas: expr_no_commas . '+' expr_no_commas
   58               | expr_no_commas . '-' expr_no_commas
   59               | expr_no_commas . '*' expr_no_commas
   60               | expr_no_commas . '/' expr_no_commas
   61               | expr_no_commas . '%' expr_no_commas
   62               | expr_no_commas . LSHIFT expr_no_commas
   63               | expr_no_commas . RSHIFT expr_no_commas
   63               | expr_no_commas RSHIFT expr_no_commas .
   64               | expr_no_commas . ARITHCOMPARE expr_no_commas
   65               | expr_no_commas . EQCOMPARE expr_no_commas
   66               | expr_no_commas . '&' expr_no_commas
   67               | expr_no_commas . '|' expr_no_commas
   68               | expr_no_commas . '^' expr_no_commas
   69               | expr_no_commas . ANDAND expr_no_commas
   70               | expr_no_commas . OROR expr_no_commas
   71               | expr_no_commas . '?' expr ':' expr_no_commas
   72               | expr_no_commas . '?' ':' expr_no_commas
   73               | expr_no_commas . '=' expr_no_commas
   74               | expr_no_commas . ASSIGN expr_no_commas

    '+'  shift, and go to state 379
    '-'  shift, and go to state 380
    '*'  shift, and go to state 381
    '/'  shift, and go to state 382
    '%'  shift, and go to state 383

    $default  reduce using rule 63 (expr_no_commas)


state 562

   57 expr_no_commas: expr_no_commas . '+' expr_no_commas
   58               | expr_no_commas . '-' expr_no_commas
   59               | expr_no_commas . '*' expr_no_commas
   60               | expr_no_commas . '/' expr_no_commas
   61               | expr_no_commas . '%' expr_no_commas
   62               | expr_no_commas . LSHIFT expr_no_commas
   62               | expr_no_commas LSHIFT expr_no_commas .
   63               | expr_no_commas . RSHIFT expr_no_commas
   64               | expr_no_commas . ARITHCOMPARE expr_no_commas
   65               | expr_no_commas . EQCOMPARE expr_no_commas
   66               | expr_no_commas . '&' expr_no_commas
   67               | expr_no_commas . '|' expr_no_commas
   68               | expr_no_commas . '^' expr_no_commas
   69               | expr_no_commas . ANDAND expr_no_commas
   70               | expr_no_commas . OROR expr_no_commas
   71               | expr_no_commas . '?' expr ':' expr_no_commas
   72               | expr_no_commas . '?' ':' expr_no_commas
   73               | expr_no_commas . '=' expr_no_commas
   74               | expr_no_commas . ASSIGN expr_no_commas

    '+'  shift, and go to state 379
    '-'  shift, and go to state 380
    '*'  shift, and go to state 381
    '/'  shift, and go to state 382
    '%'  shift, and go to state 383

    $default  reduce using rule 62 (expr_no_commas)


state 563

   57 expr_no_commas: expr_no_commas . '+' expr_no_commas
   57               | expr_no_commas '+' expr_no_commas .
   58               | expr_no_commas . '-' expr_no_commas
   59               | expr_no_commas . '*' expr_no_commas
   60               | expr_no_commas . '/' expr_no_commas
   61               | expr_no_commas . '%' expr_no_commas
   62               | expr_no_commas . LSHIFT expr_no_commas
   63               | expr_no_commas . RSHIFT expr_no_commas
   64               | expr_no_commas . ARITHCOMPARE expr_no_commas
   65               | expr_no_commas . EQCOMPARE expr_no_commas
   66               | expr_no_commas . '&' expr_no_commas
   67               | expr_no_commas . '|' expr_no_commas
   68               | expr_no_commas . '^' expr_no_commas
   69               | expr_no_commas . ANDAND expr_no_commas
   70               | expr_no_commas . OROR expr_no_commas
   71               | expr_no_commas . '?' expr ':' expr_no_commas
   72               | expr_no_commas . '?' ':' expr_no_commas
   73               | expr_no_commas . '=' expr_no_commas
   74               | expr_no_commas . ASSIGN expr_no_commas

    '*'  shift, and go to state 381
    '/'  shift, and go to state 382
    '%'  shift, and go to state 383

    $default  reduce using rule 57 (expr_no_commas)


state 564

   57 expr_no_commas: expr_no_commas . '+' expr_no_commas
   58               | expr_no_commas . '-' expr_no_commas
   58               | expr_no_commas '-' expr_no_commas .
   59               | expr_no_commas . '*' expr_no_commas
   60               | expr_no_commas . '/' expr_no_commas
   61               | expr_no_commas . '%' expr_no_commas
   62               | expr_no_commas . LSHIFT expr_no_commas
   63               | expr_no_commas . RSHIFT expr_no_commas
   64               | expr_no_commas . ARITHCOMPARE expr_no_commas
   65               | expr_no_commas . EQCOMPARE expr_no_commas
   66               | expr_no_commas . '&' expr_no_commas
   67               | expr_no_commas . '|' expr_no_commas
   68               | expr_no_commas . '^' expr_no_commas
   69               | expr_no_commas . ANDAND expr_no_commas
   70               | expr_no_commas . OROR expr_no_commas
   71               | expr_no_commas . '?' expr ':' expr_no_commas
   72               | expr_no_commas . '?' ':' expr_no_commas
   73               | expr_no_commas . '=' expr_no_commas
   74               | expr_no_commas . ASSIGN expr_no_commas

    '*'  shift, and go to state 381
    '/'  shift, and go to state 382
    '%'  shift, and go to state 383

    $default  reduce using rule 58 (expr_no_commas)


state 565

   57 expr_no_commas: expr_no_commas . '+' expr_no_commas
   58               | expr_no_commas . '-' expr_no_commas
   59               | expr_no_commas . '*' expr_no_commas
   59               | expr_no_commas '*' expr_no_commas .
   60               | expr_no_commas . '/' expr_no_commas
   61               | expr_no_commas . '%' expr_no_commas
   62               | expr_no_commas . LSHIFT expr_no_commas
   63               | expr_no_commas . RSHIFT expr_no_commas
   64               | expr_no_commas . ARITHCOMPARE expr_no_commas
   65               | expr_no_commas . EQCOMPARE expr_no_commas
   66               | expr_no_commas . '&' expr_no_commas
   67               | expr_no_commas . '|' expr_no_commas
   68               | expr_no_commas . '^' expr_no_commas
   69               | expr_no_commas . ANDAND expr_no_commas
   70               | expr_no_commas . OROR expr_no_commas
   71               | expr_no_commas . '?' expr ':' expr_no_commas
   72               | expr_no_commas . '?' ':' expr_no_commas
   73               | expr_no_commas . '=' expr_no_commas
   74               | expr_no_commas . ASSIGN expr_no_commas

    $default  reduce using rule 59 (expr_no_commas)


state 566

   57 expr_no_commas: expr_no_commas . '+' expr_no_commas
   58               | expr_no_commas . '-' expr_no_commas
   59               | expr_no_commas . '*' expr_no_commas
   60               | expr_no_commas . '/' expr_no_commas
   60               | expr_no_commas '/' expr_no_commas .
   61               | expr_no_commas . '%' expr_no_commas
   62               | expr_no_commas . LSHIFT expr_no_commas
   63               | expr_no_commas . RSHIFT expr_no_commas
   64               | expr_no_commas . ARITHCOMPARE expr_no_commas
   65               | expr_no_commas . EQCOMPARE expr_no_commas
   66               | expr_no_commas . '&' expr_no_commas
   67               | expr_no_commas . '|' expr_no_commas
   68               | expr_no_commas . '^' expr_no_commas
   69               | expr_no_commas . ANDAND expr_no_commas
   70               | expr_no_commas . OROR expr_no_commas
   71               | expr_no_commas . '?' expr ':' expr_no_commas
   72               | expr_no_commas . '?' ':' expr_no_commas
   73               | expr_no_commas . '=' expr_no_commas
   74               | expr_no_commas . ASSIGN expr_no_commas

    $default  reduce using rule 60 (expr_no_commas)


state 567

   57 expr_no_commas: expr_no_commas . '+' expr_no_commas
   58               | expr_no_commas . '-' expr_no_commas
   59               | expr_no_commas . '*' expr_no_commas
   60               | expr_no_commas . '/' expr_no_commas
   61               | expr_no_commas . '%' expr_no_commas
   61               | expr_no_commas '%' expr_no_commas .
   62               | expr_no_commas . LSHIFT expr_no_commas
   63               | expr_no_commas . RSHIFT expr_no_commas
   64               | expr_no_commas . ARITHCOMPARE expr_no_commas
   65               | expr_no_commas . EQCOMPARE expr_no_commas
   66               | expr_no_commas . '&' expr_no_commas
   67               | expr_no_commas . '|' expr_no_commas
   68               | expr_no_commas . '^' expr_no_commas
   69               | expr_no_commas . ANDAND expr_no_commas
   70               | expr_no_commas . OROR expr_no_commas
   71               | expr_no_commas . '?' expr ':' expr_no_commas
   72               | expr_no_commas . '?' ':' expr_no_commas
   73               | expr_no_commas . '=' expr_no_commas
   74               | expr_no_commas . ASSIGN expr_no_commas

    $default  reduce using rule 61 (expr_no_commas)


state 568

   89 primary: primary '.' identifier .

    $default  reduce using rule 89 (primary)


state 569

   84 primary: primary '(' exprlist . ')'

    ')'  shift, and go to state 688


state 570

   37 exprlist: nonnull_exprlist .
   39 nonnull_exprlist: nonnull_exprlist . ',' expr_no_commas

    ','  shift, and go to state 362

    $default  reduce using rule 37 (exprlist)


state 571

   88 primary: primary '[' expr . ']'

    ']'  shift, and go to state 689


state 572

   90 primary: primary POINTSAT identifier .

    $default  reduce using rule 90 (primary)


state 573

   99 objc_string: objc_string '@' STRING .

    $default  reduce using rule 99 (objc_string)


state 574

   83 primary: compstmt_primary_start error ')' .

    $default  reduce using rule 83 (primary)


state 575

  442 label_decl: LABEL . identifiers_or_typenames ';'

    IDENTIFIER  shift, and go to state 82
    TYPENAME    shift, and go to state 83
    CLASSNAME   shift, and go to state 84
    OBJECTNAME  shift, and go to state 85

    identifier                go to state 690
    identifiers_or_typenames  go to state 691


state 576

  447 compstmt_nostart: pushlevel maybe_label_decls . compstmt_contents_nonempty '}' poplevel

    error  shift, and go to state 692

    IDENTIFIER          reduce using rule 456 (save_filename)
    TYPENAME            reduce using rule 456 (save_filename)
    SCSPEC              reduce using rule 456 (save_filename)
    STATIC              reduce using rule 456 (save_filename)
    TYPESPEC            reduce using rule 456 (save_filename)
    TYPE_QUAL           reduce using rule 456 (save_filename)
    CONSTANT            reduce using rule 456 (save_filename)
    STRING              reduce using rule 456 (save_filename)
    SIZEOF              reduce using rule 456 (save_filename)
    ENUM                reduce using rule 456 (save_filename)
    STRUCT              reduce using rule 456 (save_filename)
    UNION               reduce using rule 456 (save_filename)
    IF                  reduce using rule 456 (save_filename)
    WHILE               reduce using rule 456 (save_filename)
    DO                  reduce using rule 456 (save_filename)
    FOR                 reduce using rule 456 (save_filename)
    SWITCH              reduce using rule 456 (save_filename)
    CASE                reduce using rule 456 (save_filename)
    DEFAULT             reduce using rule 456 (save_filename)
    BREAK               reduce using rule 456 (save_filename)
    CONTINUE            reduce using rule 456 (save_filename)
    RETURN              reduce using rule 456 (save_filename)
    GOTO                reduce using rule 456 (save_filename)
    ASM_KEYWORD         reduce using rule 456 (save_filename)
    TYPEOF              reduce using rule 456 (save_filename)
    ALIGNOF             reduce using rule 456 (save_filename)
    ATTRIBUTE           reduce using rule 456 (save_filename)
    EXTENSION           reduce using rule 456 (save_filename)
    REALPART            reduce using rule 456 (save_filename)
    IMAGPART            reduce using rule 456 (save_filename)
    VA_ARG              reduce using rule 456 (save_filename)
    CHOOSE_EXPR         reduce using rule 456 (save_filename)
    TYPES_COMPATIBLE_P  reduce using rule 456 (save_filename)
    VAR_FUNC_NAME       reduce using rule 456 (save_filename)
    ANDAND              reduce using rule 456 (save_filename)
    '&'                 reduce using rule 456 (save_filename)
    ARITHCOMPARE        reduce using rule 456 (save_filename)
    '+'                 reduce using rule 456 (save_filename)
    '-'                 reduce using rule 456 (save_filename)
    '*'                 reduce using rule 456 (save_filename)
    MINUSMINUS          reduce using rule 456 (save_filename)
    PLUSPLUS            reduce using rule 456 (save_filename)
    '('                 reduce using rule 456 (save_filename)
    '['                 reduce using rule 456 (save_filename)
    SELECTOR            reduce using rule 456 (save_filename)
    ENCODE              reduce using rule 456 (save_filename)
    CLASSNAME           reduce using rule 456 (save_filename)
    PROTOCOL            reduce using rule 456 (save_filename)
    OBJECTNAME          reduce using rule 456 (save_filename)
    ';'                 reduce using rule 456 (save_filename)
    '~'                 reduce using rule 456 (save_filename)
    '!'                 reduce using rule 456 (save_filename)
    '{'                 reduce using rule 456 (save_filename)
    '@'                 reduce using rule 456 (save_filename)

    lineno_decl                              go to state 693
    stmts_and_decls                          go to state 694
    lineno_stmt_decl_or_labels_ending_stmt   go to state 695
    lineno_stmt_decl_or_labels_ending_decl   go to state 696
    lineno_stmt_decl_or_labels_ending_label  go to state 697
    lineno_stmt_decl_or_labels_ending_error  go to state 698
    lineno_stmt_decl_or_labels               go to state 699
    errstmt                                  go to state 700
    compstmt_contents_nonempty               go to state 701
    save_filename                            go to state 702
    lineno_stmt                              go to state 703
    lineno_label                             go to state 704


state 577

  439 maybe_label_decls: label_decls .
  441 label_decls: label_decls . label_decl

    LABEL  shift, and go to state 575

    $default  reduce using rule 439 (maybe_label_decls)

    label_decl  go to state 705


state 578

  440 label_decls: label_decl .

    $default  reduce using rule 440 (label_decls)


state 579

   82 primary: compstmt_primary_start compstmt_nostart ')' .

    $default  reduce using rule 82 (primary)


state 580

  282 attribute: ATTRIBUTE '(' '(' attribute_list ')' . ')'

    ')'  shift, and go to state 706


state 581

  284 attribute_list: attribute_list ',' . attrib

    IDENTIFIER  shift, and go to state 82
    TYPENAME    shift, and go to state 83
    SCSPEC      shift, and go to state 3
    STATIC      shift, and go to state 4
    TYPESPEC    shift, and go to state 396
    TYPE_QUAL   shift, and go to state 397
    CLASSNAME   shift, and go to state 84
    OBJECTNAME  shift, and go to state 85

    $default  reduce using rule 285 (attrib)

    identifier  go to state 398
    attrib      go to state 707
    any_word    go to state 401
    scspec      go to state 402


state 582

  287 attrib: any_word '(' . IDENTIFIER ')'
  288       | any_word '(' . IDENTIFIER ',' nonnull_exprlist ')'
  289       | any_word '(' . exprlist ')'

    IDENTIFIER          shift, and go to state 708
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    $default  reduce using rule 36 (exprlist)

    unop                    go to state 248
    exprlist                go to state 709
    nonnull_exprlist        go to state 570
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 255
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 583

  544 classdef: INTERFACE identifier ':' identifier protocolrefs . '{' ivar_decl_list '}' methodprotolist END
  545         | INTERFACE identifier ':' identifier protocolrefs . methodprotolist END

    error         shift, and go to state 1
    TYPENAME      shift, and go to state 2
    SCSPEC        shift, and go to state 3
    STATIC        shift, and go to state 4
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 6
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ATTRIBUTE     shift, and go to state 12
    ARITHCOMPARE  shift, and go to state 14
    '+'           shift, and go to state 15
    '-'           shift, and go to state 16
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22
    ';'           shift, and go to state 25
    '{'           shift, and go to state 710

    IDENTIFIER  reduce using rule 113 (setspecs)
    '*'         reduce using rule 113 (setspecs)
    '('         reduce using rule 113 (setspecs)
    END         reduce using rule 577 (methodprotolist)

    datadef                        go to state 407
    typeof                         go to state 32
    setspecs                       go to state 408
    declspecs_nosc_nots_nosa_noea  go to state 34
    declspecs_nosc_nots_nosa_ea    go to state 35
    declspecs_nosc_nots_sa_noea    go to state 36
    declspecs_nosc_nots_sa_ea      go to state 37
    declspecs_nosc_ts_nosa_noea    go to state 38
    declspecs_nosc_ts_nosa_ea      go to state 39
    declspecs_nosc_ts_sa_noea      go to state 40
    declspecs_nosc_ts_sa_ea        go to state 41
    declspecs_sc_nots_nosa_noea    go to state 42
    declspecs_sc_nots_nosa_ea      go to state 43
    declspecs_sc_nots_sa_noea      go to state 44
    declspecs_sc_nots_sa_ea        go to state 45
    declspecs_sc_ts_nosa_noea      go to state 46
    declspecs_sc_ts_nosa_ea        go to state 47
    declspecs_sc_ts_sa_noea        go to state 48
    declspecs_sc_ts_sa_ea          go to state 49
    declspecs_ts                   go to state 409
    declspecs_nots                 go to state 410
    declspecs                      go to state 52
    typespec_nonattr               go to state 53
    typespec_attr                  go to state 54
    typespec_reserved_nonattr      go to state 55
    typespec_reserved_attr         go to state 56
    typespec_nonreserved_nonattr   go to state 57
    attributes                     go to state 58
    attribute                      go to state 59
    scspec                         go to state 60
    struct_head                    go to state 61
    union_head                     go to state 62
    enum_head                      go to state 63
    structsp_attr                  go to state 64
    structsp_nonattr               go to state 65
    non_empty_protocolrefs         go to state 72
    methodtype                     go to state 411
    methodprotolist                go to state 711
    methodprotolist2               go to state 413
    methodproto                    go to state 414


state 584

  550 classdef: INTERFACE identifier '(' identifier ')' . protocolrefs methodprotolist END

    ARITHCOMPARE  shift, and go to state 14

    ARITHCOMPARE  [reduce using rule 554 (protocolrefs)]
    $default      reduce using rule 554 (protocolrefs)

    protocolrefs            go to state 712
    non_empty_protocolrefs  go to state 91


state 585

  542 classdef: INTERFACE identifier protocolrefs '{' ivar_decl_list . '}' methodprotolist END
  557 ivar_decl_list: ivar_decl_list . visibility_spec ivar_decls

    PUBLIC     shift, and go to state 595
    PRIVATE    shift, and go to state 596
    PROTECTED  shift, and go to state 597
    '}'        shift, and go to state 713

    visibility_spec  go to state 599


state 586

  276 notype_initdcl: notype_declarator . maybeasm maybe_attribute '=' init
  277               | notype_declarator . maybeasm maybe_attribute
  336 notype_declarator: notype_declarator . '(' parmlist_or_identifiers
  339                  | notype_declarator . array_declarator

    ASM_KEYWORD  shift, and go to state 299
    '('          shift, and go to state 300
    '['          shift, and go to state 301

    $default  reduce using rule 272 (maybeasm)

    maybeasm          go to state 306
    array_declarator  go to state 307


state 587

   13 datadef: declspecs_ts setspecs . initdecls ';'

    IDENTIFIER  shift, and go to state 100
    TYPENAME    shift, and go to state 310
    '*'         shift, and go to state 311
    '('         shift, and go to state 312
    OBJECTNAME  shift, and go to state 313

    initdecls              go to state 314
    initdcl                go to state 315
    declarator             go to state 714
    after_type_declarator  go to state 317
    notype_declarator      go to state 318


state 588

   12 datadef: declspecs_nots setspecs . notype_initdecls ';'

    IDENTIFIER  shift, and go to state 100
    '*'         shift, and go to state 101
    '('         shift, and go to state 102

    notype_initdecls   go to state 319
    notype_initdcl     go to state 104
    notype_declarator  go to state 586


state 589

  585 methodproto: methodtype methoddecl . semi_or_error

    error  shift, and go to state 715
    ';'    shift, and go to state 716

    semi_or_error  go to state 717


state 590

  543 classdef: INTERFACE identifier protocolrefs methodprotolist END .

    $default  reduce using rule 543 (classdef)


state 591

  582 methodprotolist2: methodprotolist2 datadef .

    $default  reduce using rule 582 (methodprotolist2)


state 592

  581 methodprotolist2: methodprotolist2 methodproto .

    $default  reduce using rule 581 (methodprotolist2)


state 593

  548 classdef: IMPLEMENTATION identifier ':' identifier '{' . ivar_decl_list '}'

    $default  reduce using rule 562 (ivar_decls)

    ivar_decl_list  go to state 718
    ivar_decls      go to state 418


state 594

  551 classdef: IMPLEMENTATION identifier '(' identifier ')' .

    $default  reduce using rule 551 (classdef)


state 595

  561 visibility_spec: PUBLIC .

    $default  reduce using rule 561 (visibility_spec)


state 596

  559 visibility_spec: PRIVATE .

    $default  reduce using rule 559 (visibility_spec)


state 597

  560 visibility_spec: PROTECTED .

    $default  reduce using rule 560 (visibility_spec)


state 598

  546 classdef: IMPLEMENTATION identifier '{' ivar_decl_list '}' .

    $default  reduce using rule 546 (classdef)


state 599

  557 ivar_decl_list: ivar_decl_list visibility_spec . ivar_decls

    $default  reduce using rule 562 (ivar_decls)

    ivar_decls  go to state 719


state 600

  567 ivar_decl: error .

    $default  reduce using rule 567 (ivar_decl)


state 601

  564 ivar_decls: ivar_decls ';' .

    $default  reduce using rule 564 (ivar_decls)


state 602

  565 ivar_decl: declspecs_nosc_ts . setspecs ivars

    $default  reduce using rule 113 (setspecs)

    setspecs  go to state 720


state 603

  566 ivar_decl: declspecs_nosc_nots . setspecs ivars

    $default  reduce using rule 113 (setspecs)

    setspecs  go to state 721


state 604

  563 ivar_decls: ivar_decls ivar_decl . ';'

    ';'  shift, and go to state 722


state 605

  552 protocoldef: PROTOCOL identifier protocolrefs methodprotolist END .

    $default  reduce using rule 552 (protocoldef)


state 606

  396 absdcl1_noea: '*' maybe_type_quals_attrs . absdcl1_noea
  397 absdcl1_ea: '*' maybe_type_quals_attrs .
  398           | '*' maybe_type_quals_attrs . absdcl1_ea

    '*'  shift, and go to state 422
    '('  shift, and go to state 423
    '['  shift, and go to state 301

    $default  reduce using rule 397 (absdcl1_ea)

    absdcl1_noea      go to state 723
    absdcl1_ea        go to state 724
    direct_absdcl1    go to state 428
    array_declarator  go to state 429


state 607

  399 direct_absdcl1: '(' maybe_attribute . absdcl1 ')'
  503 parmlist: maybe_attribute . parmlist_1

    error         shift, and go to state 614
    TYPENAME      shift, and go to state 2
    SCSPEC        shift, and go to state 3
    STATIC        shift, and go to state 4
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 6
    ELLIPSIS      shift, and go to state 616
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ARITHCOMPARE  shift, and go to state 14
    '*'           shift, and go to state 422
    '('           shift, and go to state 423
    '['           shift, and go to state 301
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    ')'  reduce using rule 507 (parmlist_2)

    typeof                         go to state 32
    declspecs_nosc_nots_nosa_noea  go to state 513
    declspecs_nosc_nots_nosa_ea    go to state 514
    declspecs_nosc_ts_nosa_noea    go to state 515
    declspecs_nosc_ts_nosa_ea      go to state 516
    declspecs_sc_nots_nosa_noea    go to state 517
    declspecs_sc_nots_nosa_ea      go to state 518
    declspecs_sc_ts_nosa_noea      go to state 519
    declspecs_sc_ts_nosa_ea        go to state 520
    declspecs_ts_nosa              go to state 521
    declspecs_nots_nosa            go to state 522
    typespec_nonattr               go to state 53
    typespec_attr                  go to state 54
    typespec_reserved_nonattr      go to state 55
    typespec_reserved_attr         go to state 56
    typespec_nonreserved_nonattr   go to state 57
    scspec                         go to state 60
    struct_head                    go to state 61
    union_head                     go to state 62
    enum_head                      go to state 63
    structsp_attr                  go to state 64
    structsp_nonattr               go to state 65
    absdcl1                        go to state 725
    absdcl1_noea                   go to state 426
    absdcl1_ea                     go to state 427
    direct_absdcl1                 go to state 428
    array_declarator               go to state 429
    parmlist_1                     go to state 726
    parmlist_2                     go to state 618
    parms                          go to state 619
    firstparm                      go to state 525
    non_empty_protocolrefs         go to state 72


state 608

  402 direct_absdcl1: '(' parmlist .

    $default  reduce using rule 402 (direct_absdcl1)


state 609

  400 direct_absdcl1: direct_absdcl1 '(' . parmlist

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 278 (maybe_attribute)

    maybe_attribute  go to state 727
    attributes       go to state 295
    attribute        go to state 59
    parmlist         go to state 728


state 610

  401 direct_absdcl1: direct_absdcl1 array_declarator .

    $default  reduce using rule 401 (direct_absdcl1)


state 611

  337 notype_declarator: '(' maybe_attribute notype_declarator ')' .

    $default  reduce using rule 337 (notype_declarator)


state 612

  271 notype_initdecls: notype_initdecls ',' maybe_resetattrs notype_initdcl .

    $default  reduce using rule 271 (notype_initdecls)


state 613

  273 maybeasm: ASM_KEYWORD '(' STRING . ')'

    ')'  shift, and go to state 729


state 614

  506 parmlist_1: error . ')'

    ')'  shift, and go to state 730


state 615

  527 identifiers: IDENTIFIER .

    $default  reduce using rule 527 (identifiers)


state 616

  508 parmlist_2: ELLIPSIS .

    $default  reduce using rule 508 (parmlist_2)


state 617

  525 parmlist_or_identifiers_1: parmlist_1 .

    $default  reduce using rule 525 (parmlist_or_identifiers_1)


state 618

  504 parmlist_1: parmlist_2 . ')'

    ')'  shift, and go to state 731


state 619

  505 parmlist_1: parms . ';' maybe_attribute parmlist_1
  509 parmlist_2: parms .
  510           | parms . ',' ELLIPSIS
  512 parms: parms . ',' parm

    ';'  shift, and go to state 732
    ','  shift, and go to state 665

    $default  reduce using rule 509 (parmlist_2)


state 620

  524 parmlist_or_identifiers: maybe_attribute parmlist_or_identifiers_1 .

    $default  reduce using rule 524 (parmlist_or_identifiers)


state 621

  526 parmlist_or_identifiers_1: identifiers . ')'
  528 identifiers: identifiers . ',' IDENTIFIER

    ')'  shift, and go to state 733
    ','  shift, and go to state 734


state 622

  407 array_declarator: '[' STATIC maybe_type_quals_attrs . expr ']'

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    expr                    go to state 735
    nonnull_exprlist        go to state 250
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 255
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 623

  408 array_declarator: '[' declspecs_nosc_nots STATIC . expr ']'

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    expr                    go to state 736
    nonnull_exprlist        go to state 250
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 255
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 624

   41 unary_expr: '*' . cast_expr
  406 array_declarator: '[' maybe_type_quals_attrs '*' . ']'

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    ']'                 shift, and go to state 737
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 348
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 625

  405 array_declarator: '[' maybe_type_quals_attrs ']' .

    $default  reduce using rule 405 (array_declarator)


state 626

  404 array_declarator: '[' maybe_type_quals_attrs expr . ']'

    ']'  shift, and go to state 738


state 627

   22 fndef: setspecs notype_declarator old_style_parm_decls save_filename save_lineno . compstmt_or_error

    error  shift, and go to state 507
    '{'    shift, and go to state 508

    compstmt_or_error  go to state 739
    compstmt_start     go to state 510
    compstmt           go to state 511


state 628

  276 notype_initdcl: notype_declarator maybeasm maybe_attribute '=' . init

    error               shift, and go to state 740
    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '{'                 shift, and go to state 741
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 742
    primary                 go to state 256
    objc_string             go to state 257
    init                    go to state 743
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 629

  103 lineno_datadecl: save_filename save_lineno datadecl .

    $default  reduce using rule 103 (lineno_datadecl)


state 630

  108 datadecl: declspecs_ts_nosa . setspecs initdecls ';'
  110         | declspecs_ts_nosa . ';'

    ';'  shift, and go to state 744

    $default  reduce using rule 113 (setspecs)

    setspecs  go to state 745


state 631

  109 datadecl: declspecs_nots_nosa . setspecs notype_initdecls ';'
  111         | declspecs_nots_nosa . ';'

    ';'  shift, and go to state 746

    $default  reduce using rule 113 (setspecs)

    setspecs  go to state 747


state 632

  320 after_type_declarator: after_type_declarator . '(' parmlist_or_identifiers
  321                      | after_type_declarator . array_declarator
  322                      | '*' maybe_type_quals_attrs after_type_declarator .

    '('  shift, and go to state 455
    '['  shift, and go to state 301

    $default  reduce using rule 322 (after_type_declarator)

    array_declarator  go to state 456


state 633

  319 after_type_declarator: '(' maybe_attribute after_type_declarator . ')'
  320                      | after_type_declarator . '(' parmlist_or_identifiers
  321                      | after_type_declarator . array_declarator

    '('  shift, and go to state 455
    '['  shift, and go to state 301
    ')'  shift, and go to state 748

    array_declarator  go to state 456


state 634

  269 initdecls: initdecls ',' maybe_resetattrs . initdcl

    IDENTIFIER  shift, and go to state 100
    TYPENAME    shift, and go to state 310
    '*'         shift, and go to state 311
    '('         shift, and go to state 312
    OBJECTNAME  shift, and go to state 313

    initdcl                go to state 749
    declarator             go to state 714
    after_type_declarator  go to state 317
    notype_declarator      go to state 318


state 635

   18 fndef: declspecs_ts setspecs declarator old_style_parm_decls save_filename . save_lineno compstmt_or_error

    $default  reduce using rule 457 (save_lineno)

    save_lineno  go to state 750


state 636

  274 initdcl: declarator maybeasm maybe_attribute . '=' init
  275        | declarator maybeasm maybe_attribute .

    '='  shift, and go to state 751

    $default  reduce using rule 275 (initdcl)


state 637

  320 after_type_declarator: after_type_declarator '(' parmlist_or_identifiers .

    $default  reduce using rule 320 (after_type_declarator)


state 638

   20 fndef: declspecs_nots setspecs notype_declarator old_style_parm_decls save_filename . save_lineno compstmt_or_error

    $default  reduce using rule 457 (save_lineno)

    save_lineno  go to state 752


state 639

  365 component_decl_list2: DEFS '(' CLASSNAME . ')'

    ')'  shift, and go to state 753


state 640

  348 structsp_attr: struct_head '{' component_decl_list '}' maybe_attribute .

    $default  reduce using rule 348 (structsp_attr)


state 641

  366 component_decl: declspecs_nosc_ts setspecs . components
  367               | declspecs_nosc_ts setspecs . save_filename save_lineno

    $default  reduce using rule 456 (save_filename)

    components            go to state 754
    component_declarator  go to state 755
    save_filename         go to state 756


state 642

  368 component_decl: declspecs_nosc_nots setspecs . components_notype

    $default  reduce using rule 456 (save_filename)

    components_notype            go to state 757
    component_notype_declarator  go to state 758
    save_filename                go to state 759


state 643

  363 component_decl_list2: component_decl_list2 component_decl ';' .

    $default  reduce using rule 363 (component_decl_list2)


state 644

  371 component_decl: extension component_decl .

    $default  reduce using rule 371 (component_decl)


state 645

  347 structsp_attr: struct_head identifier '{' component_decl_list '}' . maybe_attribute

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 278 (maybe_attribute)

    maybe_attribute  go to state 760
    attributes       go to state 295
    attribute        go to state 59


state 646

  350 structsp_attr: union_head '{' component_decl_list '}' maybe_attribute .

    $default  reduce using rule 350 (structsp_attr)


state 647

  349 structsp_attr: union_head identifier '{' component_decl_list '}' . maybe_attribute

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 278 (maybe_attribute)

    maybe_attribute  go to state 761
    attributes       go to state 295
    attribute        go to state 59


state 648

   57 expr_no_commas: expr_no_commas . '+' expr_no_commas
   58               | expr_no_commas . '-' expr_no_commas
   59               | expr_no_commas . '*' expr_no_commas
   60               | expr_no_commas . '/' expr_no_commas
   61               | expr_no_commas . '%' expr_no_commas
   62               | expr_no_commas . LSHIFT expr_no_commas
   63               | expr_no_commas . RSHIFT expr_no_commas
   64               | expr_no_commas . ARITHCOMPARE expr_no_commas
   65               | expr_no_commas . EQCOMPARE expr_no_commas
   66               | expr_no_commas . '&' expr_no_commas
   67               | expr_no_commas . '|' expr_no_commas
   68               | expr_no_commas . '^' expr_no_commas
   69               | expr_no_commas . ANDAND expr_no_commas
   70               | expr_no_commas . OROR expr_no_commas
   71               | expr_no_commas . '?' expr ':' expr_no_commas
   72               | expr_no_commas . '?' ':' expr_no_commas
   73               | expr_no_commas . '=' expr_no_commas
   74               | expr_no_commas . ASSIGN expr_no_commas
  386 enumerator: identifier '=' expr_no_commas .

    '='           shift, and go to state 367
    ASSIGN        shift, and go to state 368
    '?'           shift, and go to state 369
    OROR          shift, and go to state 370
    ANDAND        shift, and go to state 371
    '|'           shift, and go to state 372
    '^'           shift, and go to state 373
    '&'           shift, and go to state 374
    EQCOMPARE     shift, and go to state 375
    ARITHCOMPARE  shift, and go to state 376
    RSHIFT        shift, and go to state 377
    LSHIFT        shift, and go to state 378
    '+'           shift, and go to state 379
    '-'           shift, and go to state 380
    '*'           shift, and go to state 381
    '/'           shift, and go to state 382
    '%'           shift, and go to state 383

    $default  reduce using rule 386 (enumerator)


state 649

  383 enumlist: enumlist ',' enumerator .

    $default  reduce using rule 383 (enumlist)


state 650

  352 structsp_attr: enum_head '{' enumlist maybecomma_warn '}' . maybe_attribute

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 278 (maybe_attribute)

    maybe_attribute  go to state 762
    attributes       go to state 295
    attribute        go to state 59


state 651

  351 structsp_attr: enum_head identifier '{' enumlist maybecomma_warn . '}' maybe_attribute

    '}'  shift, and go to state 763


state 652

  640 keyworddecl: ':' '(' typename ')' . identifier

    IDENTIFIER  shift, and go to state 82
    TYPENAME    shift, and go to state 83
    CLASSNAME   shift, and go to state 84
    OBJECTNAME  shift, and go to state 85

    identifier  go to state 764


state 653

  586 methoddecl: '(' typename ')' unaryselector .

    $default  reduce using rule 586 (methoddecl)


state 654

  588 methoddecl: '(' typename ')' keywordselector . optparmlist
  611 keywordselector: keywordselector . keyworddecl

    IDENTIFIER   shift, and go to state 189
    TYPENAME     shift, and go to state 190
    TYPESPEC     shift, and go to state 191
    TYPE_QUAL    shift, and go to state 192
    SIZEOF       shift, and go to state 193
    ENUM         shift, and go to state 194
    STRUCT       shift, and go to state 195
    UNION        shift, and go to state 196
    IF           shift, and go to state 197
    ELSE         shift, and go to state 198
    WHILE        shift, and go to state 199
    DO           shift, and go to state 200
    FOR          shift, and go to state 201
    SWITCH       shift, and go to state 202
    CASE         shift, and go to state 203
    DEFAULT      shift, and go to state 204
    BREAK        shift, and go to state 205
    CONTINUE     shift, and go to state 206
    RETURN       shift, and go to state 207
    GOTO         shift, and go to state 208
    ASM_KEYWORD  shift, and go to state 209
    TYPEOF       shift, and go to state 210
    ALIGNOF      shift, and go to state 211
    ':'          shift, and go to state 212
    CLASSNAME    shift, and go to state 214
    OBJECTNAME   shift, and go to state 215
    ','          shift, and go to state 337

    $default  reduce using rule 606 (optparmlist)

    optparmlist    go to state 765
    selector       go to state 339
    reservedwords  go to state 220
    keyworddecl    go to state 340


state 655

  599 mydecl: declspecs_ts ';' .

    $default  reduce using rule 599 (mydecl)


state 656

  598 mydecl: declspecs_ts setspecs . myparms ';'

    IDENTIFIER  shift, and go to state 100
    TYPENAME    shift, and go to state 766
    '*'         shift, and go to state 767
    '('         shift, and go to state 768
    '['         shift, and go to state 301
    OBJECTNAME  shift, and go to state 769

    $default  reduce using rule 390 (absdcl_maybe_attribute)

    parm_declarator                  go to state 770
    parm_declarator_starttypename    go to state 771
    parm_declarator_nostarttypename  go to state 772
    notype_declarator                go to state 773
    absdcl_maybe_attribute           go to state 774
    absdcl1                          go to state 775
    absdcl1_noea                     go to state 776
    absdcl1_ea                       go to state 427
    direct_absdcl1                   go to state 428
    array_declarator                 go to state 429
    myparms                          go to state 777
    myparm                           go to state 778


state 657

  600 mydecl: declspecs_nots ';' .

    $default  reduce using rule 600 (mydecl)


state 658

  596 mydecls: mydecls mydecl .

    $default  reduce using rule 596 (mydecls)


state 659

  597 mydecls: mydecl errstmt .

    $default  reduce using rule 597 (mydecls)


state 660

  444 compstmt_or_error: error compstmt .

    $default  reduce using rule 444 (compstmt_or_error)


state 661

  451 compstmt: compstmt_start compstmt_nostart .

    $default  reduce using rule 451 (compstmt)


state 662

  523 setspecs_fp: setspecs .

    $default  reduce using rule 523 (setspecs_fp)


state 663

  518 firstparm: declspecs_ts_nosa setspecs_fp . parm_declarator maybe_attribute
  519          | declspecs_ts_nosa setspecs_fp . notype_declarator maybe_attribute
  520          | declspecs_ts_nosa setspecs_fp . absdcl_maybe_attribute

    IDENTIFIER  shift, and go to state 100
    TYPENAME    shift, and go to state 766
    '*'         shift, and go to state 767
    '('         shift, and go to state 768
    '['         shift, and go to state 301
    OBJECTNAME  shift, and go to state 769

    $default  reduce using rule 390 (absdcl_maybe_attribute)

    parm_declarator                  go to state 779
    parm_declarator_starttypename    go to state 771
    parm_declarator_nostarttypename  go to state 772
    notype_declarator                go to state 780
    absdcl_maybe_attribute           go to state 781
    absdcl1                          go to state 775
    absdcl1_noea                     go to state 776
    absdcl1_ea                       go to state 427
    direct_absdcl1                   go to state 428
    array_declarator                 go to state 429


state 664

  521 firstparm: declspecs_nots_nosa setspecs_fp . notype_declarator maybe_attribute
  522          | declspecs_nots_nosa setspecs_fp . absdcl_maybe_attribute

    IDENTIFIER  shift, and go to state 100
    '*'         shift, and go to state 782
    '('         shift, and go to state 783
    '['         shift, and go to state 301

    $default  reduce using rule 390 (absdcl_maybe_attribute)

    notype_declarator       go to state 784
    absdcl_maybe_attribute  go to state 785
    absdcl1                 go to state 775
    absdcl1_noea            go to state 776
    absdcl1_ea              go to state 427
    direct_absdcl1          go to state 428
    array_declarator        go to state 429


state 665

  510 parmlist_2: parms ',' . ELLIPSIS
  512 parms: parms ',' . parm

    TYPENAME      shift, and go to state 2
    SCSPEC        shift, and go to state 3
    STATIC        shift, and go to state 4
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 6
    ELLIPSIS      shift, and go to state 786
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ATTRIBUTE     shift, and go to state 12
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    typeof                         go to state 32
    declspecs_nosc_nots_nosa_noea  go to state 485
    declspecs_nosc_nots_nosa_ea    go to state 486
    declspecs_nosc_nots_sa_noea    go to state 487
    declspecs_nosc_nots_sa_ea      go to state 488
    declspecs_nosc_ts_nosa_noea    go to state 489
    declspecs_nosc_ts_nosa_ea      go to state 490
    declspecs_nosc_ts_sa_noea      go to state 491
    declspecs_nosc_ts_sa_ea        go to state 492
    declspecs_sc_nots_nosa_noea    go to state 493
    declspecs_sc_nots_nosa_ea      go to state 494
    declspecs_sc_nots_sa_noea      go to state 495
    declspecs_sc_nots_sa_ea        go to state 496
    declspecs_sc_ts_nosa_noea      go to state 497
    declspecs_sc_ts_nosa_ea        go to state 498
    declspecs_sc_ts_sa_noea        go to state 499
    declspecs_sc_ts_sa_ea          go to state 500
    declspecs_ts                   go to state 787
    declspecs_nots                 go to state 788
    typespec_nonattr               go to state 53
    typespec_attr                  go to state 54
    typespec_reserved_nonattr      go to state 55
    typespec_reserved_attr         go to state 56
    typespec_nonreserved_nonattr   go to state 57
    attributes                     go to state 58
    attribute                      go to state 59
    scspec                         go to state 60
    struct_head                    go to state 61
    union_head                     go to state 62
    enum_head                      go to state 63
    structsp_attr                  go to state 64
    structsp_nonattr               go to state 65
    parm                           go to state 789
    non_empty_protocolrefs         go to state 72


state 666

  638 keyworddecl: selector ':' '(' typename . ')' identifier

    ')'  shift, and go to state 790


state 667

   85 primary: VA_ARG '(' expr_no_commas ',' . typename ')'

    TYPENAME      shift, and go to state 2
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 6
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ATTRIBUTE     shift, and go to state 12
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    typeof                         go to state 32
    declspecs_nosc_nots_nosa_noea  go to state 278
    declspecs_nosc_nots_nosa_ea    go to state 279
    declspecs_nosc_nots_sa_noea    go to state 280
    declspecs_nosc_nots_sa_ea      go to state 281
    declspecs_nosc_ts_nosa_noea    go to state 282
    declspecs_nosc_ts_nosa_ea      go to state 283
    declspecs_nosc_ts_sa_noea      go to state 284
    declspecs_nosc_ts_sa_ea        go to state 285
    declspecs_nosc                 go to state 286
    typespec_nonattr               go to state 53
    typespec_attr                  go to state 54
    typespec_reserved_nonattr      go to state 55
    typespec_reserved_attr         go to state 56
    typespec_nonreserved_nonattr   go to state 57
    attributes                     go to state 58
    attribute                      go to state 59
    struct_head                    go to state 61
    union_head                     go to state 62
    enum_head                      go to state 63
    structsp_attr                  go to state 64
    structsp_nonattr               go to state 65
    typename                       go to state 791
    non_empty_protocolrefs         go to state 72


state 668

   86 primary: CHOOSE_EXPR '(' expr_no_commas ',' . expr_no_commas ',' expr_no_commas ')'

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 792
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 669

   87 primary: TYPES_COMPATIBLE_P '(' typename ',' . typename ')'

    TYPENAME      shift, and go to state 2
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 6
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ATTRIBUTE     shift, and go to state 12
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    typeof                         go to state 32
    declspecs_nosc_nots_nosa_noea  go to state 278
    declspecs_nosc_nots_nosa_ea    go to state 279
    declspecs_nosc_nots_sa_noea    go to state 280
    declspecs_nosc_nots_sa_ea      go to state 281
    declspecs_nosc_ts_nosa_noea    go to state 282
    declspecs_nosc_ts_nosa_ea      go to state 283
    declspecs_nosc_ts_sa_noea      go to state 284
    declspecs_nosc_ts_sa_ea        go to state 285
    declspecs_nosc                 go to state 286
    typespec_nonattr               go to state 53
    typespec_attr                  go to state 54
    typespec_reserved_nonattr      go to state 55
    typespec_reserved_attr         go to state 56
    typespec_nonreserved_nonattr   go to state 57
    attributes                     go to state 58
    attribute                      go to state 59
    struct_head                    go to state 61
    union_head                     go to state 62
    enum_head                      go to state 63
    structsp_attr                  go to state 64
    structsp_nonattr               go to state 65
    typename                       go to state 793
    non_empty_protocolrefs         go to state 72


state 670

   79 primary: '(' typename ')' '{' . initlist_maybe_comma '}'

    error               shift, and go to state 794
    IDENTIFIER          shift, and go to state 795
    TYPENAME            shift, and go to state 83
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '.'                 shift, and go to state 796
    '('                 shift, and go to state 240
    '['                 shift, and go to state 797
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    CLASSNAME           shift, and go to state 84
    PROTOCOL            shift, and go to state 244
    OBJECTNAME          shift, and go to state 85
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '{'                 shift, and go to state 798
    '@'                 shift, and go to state 247

    '}'  reduce using rule 299 (initlist_maybe_comma)

    identifier              go to state 799
    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 800
    primary                 go to state 256
    objc_string             go to state 257
    initlist_maybe_comma    go to state 801
    initlist1               go to state 802
    initelt                 go to state 803
    initval                 go to state 804
    designator_list         go to state 805
    designator              go to state 806
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 671

   55 cast_expr: '(' typename ')' cast_expr .

    $default  reduce using rule 55 (cast_expr)


state 672

   39 nonnull_exprlist: nonnull_exprlist . ',' expr_no_commas
  646 keywordexpr: nonnull_exprlist .

    ','  shift, and go to state 362

    $default  reduce using rule 646 (keywordexpr)


state 673

  648 keywordarg: ':' keywordexpr .

    $default  reduce using rule 648 (keywordarg)


state 674

  647 keywordarg: selector ':' . keywordexpr

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    nonnull_exprlist        go to state 672
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 255
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    keywordexpr             go to state 807
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 675

  651 objcmessageexpr: '[' receiver messageargs ']' .

    $default  reduce using rule 651 (objcmessageexpr)


state 676

  647 keywordarg: selector . ':' keywordexpr

    ':'  shift, and go to state 674


state 677

  645 keywordarglist: keywordarglist keywordarg .

    $default  reduce using rule 645 (keywordarglist)


state 678

  656 keywordname: selector ':' .

    $default  reduce using rule 656 (keywordname)


state 679

  658 objcselectorexpr: SELECTOR '(' selectorarg ')' .

    $default  reduce using rule 658 (objcselectorexpr)


state 680

  656 keywordname: selector . ':'

    ':'  shift, and go to state 678


state 681

  655 keywordnamelist: keywordnamelist keywordname .

    $default  reduce using rule 655 (keywordnamelist)


state 682

  660 objcencodeexpr: ENCODE '(' typename ')' .

    $default  reduce using rule 660 (objcencodeexpr)


state 683

  659 objcprotocolexpr: PROTOCOL '(' identifier ')' .

    $default  reduce using rule 659 (objcprotocolexpr)


state 684

   46 unary_expr: sizeof '(' typename ')' .
   79 primary: '(' typename ')' . '{' initlist_maybe_comma '}'

    '{'  shift, and go to state 670

    $default  reduce using rule 46 (unary_expr)


state 685

   48 unary_expr: alignof '(' typename ')' .
   79 primary: '(' typename ')' . '{' initlist_maybe_comma '}'

    '{'  shift, and go to state 670

    $default  reduce using rule 48 (unary_expr)


state 686

   57 expr_no_commas: expr_no_commas . '+' expr_no_commas
   58               | expr_no_commas . '-' expr_no_commas
   59               | expr_no_commas . '*' expr_no_commas
   60               | expr_no_commas . '/' expr_no_commas
   61               | expr_no_commas . '%' expr_no_commas
   62               | expr_no_commas . LSHIFT expr_no_commas
   63               | expr_no_commas . RSHIFT expr_no_commas
   64               | expr_no_commas . ARITHCOMPARE expr_no_commas
   65               | expr_no_commas . EQCOMPARE expr_no_commas
   66               | expr_no_commas . '&' expr_no_commas
   67               | expr_no_commas . '|' expr_no_commas
   68               | expr_no_commas . '^' expr_no_commas
   69               | expr_no_commas . ANDAND expr_no_commas
   70               | expr_no_commas . OROR expr_no_commas
   71               | expr_no_commas . '?' expr ':' expr_no_commas
   72               | expr_no_commas . '?' ':' expr_no_commas
   72               | expr_no_commas '?' ':' expr_no_commas .
   73               | expr_no_commas . '=' expr_no_commas
   74               | expr_no_commas . ASSIGN expr_no_commas

    '?'           shift, and go to state 369
    OROR          shift, and go to state 370
    ANDAND        shift, and go to state 371
    '|'           shift, and go to state 372
    '^'           shift, and go to state 373
    '&'           shift, and go to state 374
    EQCOMPARE     shift, and go to state 375
    ARITHCOMPARE  shift, and go to state 376
    RSHIFT        shift, and go to state 377
    LSHIFT        shift, and go to state 378
    '+'           shift, and go to state 379
    '-'           shift, and go to state 380
    '*'           shift, and go to state 381
    '/'           shift, and go to state 382
    '%'           shift, and go to state 383

    $default  reduce using rule 72 (expr_no_commas)


state 687

   71 expr_no_commas: expr_no_commas '?' expr ':' . expr_no_commas

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 808
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 688

   84 primary: primary '(' exprlist ')' .

    $default  reduce using rule 84 (primary)


state 689

   88 primary: primary '[' expr ']' .

    $default  reduce using rule 88 (primary)


state 690

  529 identifiers_or_typenames: identifier .

    $default  reduce using rule 529 (identifiers_or_typenames)


state 691

  442 label_decl: LABEL identifiers_or_typenames . ';'
  530 identifiers_or_typenames: identifiers_or_typenames . ',' identifier

    ';'  shift, and go to state 809
    ','  shift, and go to state 810


state 692

  433 errstmt: error . ';'
  449 compstmt_contents_nonempty: error .

    ';'  shift, and go to state 435

    $default  reduce using rule 449 (compstmt_contents_nonempty)


state 693

  418 lineno_stmt_decl_or_labels_ending_decl: lineno_decl .

    $default  reduce using rule 418 (lineno_stmt_decl_or_labels_ending_decl)


state 694

  448 compstmt_contents_nonempty: stmts_and_decls .

    $default  reduce using rule 448 (compstmt_contents_nonempty)


state 695

  409 stmts_and_decls: lineno_stmt_decl_or_labels_ending_stmt .
  414 lineno_stmt_decl_or_labels_ending_stmt: lineno_stmt_decl_or_labels_ending_stmt . lineno_stmt
  419 lineno_stmt_decl_or_labels_ending_decl: lineno_stmt_decl_or_labels_ending_stmt . lineno_decl
  423 lineno_stmt_decl_or_labels_ending_label: lineno_stmt_decl_or_labels_ending_stmt . lineno_label
  429 lineno_stmt_decl_or_labels: lineno_stmt_decl_or_labels_ending_stmt .

    error     reduce using rule 429 (lineno_stmt_decl_or_labels)
    '}'       reduce using rule 409 (stmts_and_decls)
    $default  reduce using rule 456 (save_filename)

    lineno_decl    go to state 811
    save_filename  go to state 702
    lineno_stmt    go to state 812
    lineno_label   go to state 813


state 696

  410 stmts_and_decls: lineno_stmt_decl_or_labels_ending_decl .
  415 lineno_stmt_decl_or_labels_ending_stmt: lineno_stmt_decl_or_labels_ending_decl . lineno_stmt
  420 lineno_stmt_decl_or_labels_ending_decl: lineno_stmt_decl_or_labels_ending_decl . lineno_decl
  424 lineno_stmt_decl_or_labels_ending_label: lineno_stmt_decl_or_labels_ending_decl . lineno_label
  430 lineno_stmt_decl_or_labels: lineno_stmt_decl_or_labels_ending_decl .

    error     reduce using rule 430 (lineno_stmt_decl_or_labels)
    '}'       reduce using rule 410 (stmts_and_decls)
    $default  reduce using rule 456 (save_filename)

    lineno_decl    go to state 814
    save_filename  go to state 702
    lineno_stmt    go to state 815
    lineno_label   go to state 816


state 697

  411 stmts_and_decls: lineno_stmt_decl_or_labels_ending_label .
  416 lineno_stmt_decl_or_labels_ending_stmt: lineno_stmt_decl_or_labels_ending_label . lineno_stmt
  425 lineno_stmt_decl_or_labels_ending_label: lineno_stmt_decl_or_labels_ending_label . lineno_label
  431 lineno_stmt_decl_or_labels: lineno_stmt_decl_or_labels_ending_label .

    error     reduce using rule 431 (lineno_stmt_decl_or_labels)
    '}'       reduce using rule 411 (stmts_and_decls)
    $default  reduce using rule 456 (save_filename)

    save_filename  go to state 817
    lineno_stmt    go to state 818
    lineno_label   go to state 819


state 698

  412 stmts_and_decls: lineno_stmt_decl_or_labels_ending_error .
  417 lineno_stmt_decl_or_labels_ending_stmt: lineno_stmt_decl_or_labels_ending_error . lineno_stmt
  421 lineno_stmt_decl_or_labels_ending_decl: lineno_stmt_decl_or_labels_ending_error . lineno_decl
  426 lineno_stmt_decl_or_labels_ending_label: lineno_stmt_decl_or_labels_ending_error . lineno_label
  432 lineno_stmt_decl_or_labels: lineno_stmt_decl_or_labels_ending_error .

    error     reduce using rule 432 (lineno_stmt_decl_or_labels)
    '}'       reduce using rule 412 (stmts_and_decls)
    $default  reduce using rule 456 (save_filename)

    lineno_decl    go to state 820
    save_filename  go to state 702
    lineno_stmt    go to state 821
    lineno_label   go to state 822


state 699

  428 lineno_stmt_decl_or_labels_ending_error: lineno_stmt_decl_or_labels . errstmt

    error  shift, and go to state 443

    errstmt  go to state 823


state 700

  427 lineno_stmt_decl_or_labels_ending_error: errstmt .

    $default  reduce using rule 427 (lineno_stmt_decl_or_labels_ending_error)


state 701

  447 compstmt_nostart: pushlevel maybe_label_decls compstmt_contents_nonempty . '}' poplevel

    '}'  shift, and go to state 824


state 702

  112 lineno_decl: save_filename . save_lineno decl
  461 lineno_stmt: save_filename . save_lineno stmt
  462 lineno_label: save_filename . save_lineno label

    $default  reduce using rule 457 (save_lineno)

    save_lineno  go to state 825


state 703

  413 lineno_stmt_decl_or_labels_ending_stmt: lineno_stmt .

    $default  reduce using rule 413 (lineno_stmt_decl_or_labels_ending_stmt)


state 704

  422 lineno_stmt_decl_or_labels_ending_label: lineno_label .

    $default  reduce using rule 422 (lineno_stmt_decl_or_labels_ending_label)


state 705

  441 label_decls: label_decls label_decl .

    $default  reduce using rule 441 (label_decls)


state 706

  282 attribute: ATTRIBUTE '(' '(' attribute_list ')' ')' .

    $default  reduce using rule 282 (attribute)


state 707

  284 attribute_list: attribute_list ',' attrib .

    $default  reduce using rule 284 (attribute_list)


state 708

   75 primary: IDENTIFIER .
  287 attrib: any_word '(' IDENTIFIER . ')'
  288       | any_word '(' IDENTIFIER . ',' nonnull_exprlist ')'

    ')'  shift, and go to state 826
    ','  shift, and go to state 827

    ')'       [reduce using rule 75 (primary)]
    ','       [reduce using rule 75 (primary)]
    $default  reduce using rule 75 (primary)


state 709

  289 attrib: any_word '(' exprlist . ')'

    ')'  shift, and go to state 828


state 710

  544 classdef: INTERFACE identifier ':' identifier protocolrefs '{' . ivar_decl_list '}' methodprotolist END

    $default  reduce using rule 562 (ivar_decls)

    ivar_decl_list  go to state 829
    ivar_decls      go to state 418


state 711

  545 classdef: INTERFACE identifier ':' identifier protocolrefs methodprotolist . END

    END  shift, and go to state 830


state 712

  550 classdef: INTERFACE identifier '(' identifier ')' protocolrefs . methodprotolist END

    error         shift, and go to state 1
    TYPENAME      shift, and go to state 2
    SCSPEC        shift, and go to state 3
    STATIC        shift, and go to state 4
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 6
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ATTRIBUTE     shift, and go to state 12
    ARITHCOMPARE  shift, and go to state 14
    '+'           shift, and go to state 15
    '-'           shift, and go to state 16
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22
    ';'           shift, and go to state 25

    IDENTIFIER  reduce using rule 113 (setspecs)
    '*'         reduce using rule 113 (setspecs)
    '('         reduce using rule 113 (setspecs)
    END         reduce using rule 577 (methodprotolist)

    datadef                        go to state 407
    typeof                         go to state 32
    setspecs                       go to state 408
    declspecs_nosc_nots_nosa_noea  go to state 34
    declspecs_nosc_nots_nosa_ea    go to state 35
    declspecs_nosc_nots_sa_noea    go to state 36
    declspecs_nosc_nots_sa_ea      go to state 37
    declspecs_nosc_ts_nosa_noea    go to state 38
    declspecs_nosc_ts_nosa_ea      go to state 39
    declspecs_nosc_ts_sa_noea      go to state 40
    declspecs_nosc_ts_sa_ea        go to state 41
    declspecs_sc_nots_nosa_noea    go to state 42
    declspecs_sc_nots_nosa_ea      go to state 43
    declspecs_sc_nots_sa_noea      go to state 44
    declspecs_sc_nots_sa_ea        go to state 45
    declspecs_sc_ts_nosa_noea      go to state 46
    declspecs_sc_ts_nosa_ea        go to state 47
    declspecs_sc_ts_sa_noea        go to state 48
    declspecs_sc_ts_sa_ea          go to state 49
    declspecs_ts                   go to state 409
    declspecs_nots                 go to state 410
    declspecs                      go to state 52
    typespec_nonattr               go to state 53
    typespec_attr                  go to state 54
    typespec_reserved_nonattr      go to state 55
    typespec_reserved_attr         go to state 56
    typespec_nonreserved_nonattr   go to state 57
    attributes                     go to state 58
    attribute                      go to state 59
    scspec                         go to state 60
    struct_head                    go to state 61
    union_head                     go to state 62
    enum_head                      go to state 63
    structsp_attr                  go to state 64
    structsp_nonattr               go to state 65
    non_empty_protocolrefs         go to state 72
    methodtype                     go to state 411
    methodprotolist                go to state 831
    methodprotolist2               go to state 413
    methodproto                    go to state 414


state 713

  542 classdef: INTERFACE identifier protocolrefs '{' ivar_decl_list '}' . methodprotolist END

    error         shift, and go to state 1
    TYPENAME      shift, and go to state 2
    SCSPEC        shift, and go to state 3
    STATIC        shift, and go to state 4
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 6
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ATTRIBUTE     shift, and go to state 12
    ARITHCOMPARE  shift, and go to state 14
    '+'           shift, and go to state 15
    '-'           shift, and go to state 16
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22
    ';'           shift, and go to state 25

    IDENTIFIER  reduce using rule 113 (setspecs)
    '*'         reduce using rule 113 (setspecs)
    '('         reduce using rule 113 (setspecs)
    END         reduce using rule 577 (methodprotolist)

    datadef                        go to state 407
    typeof                         go to state 32
    setspecs                       go to state 408
    declspecs_nosc_nots_nosa_noea  go to state 34
    declspecs_nosc_nots_nosa_ea    go to state 35
    declspecs_nosc_nots_sa_noea    go to state 36
    declspecs_nosc_nots_sa_ea      go to state 37
    declspecs_nosc_ts_nosa_noea    go to state 38
    declspecs_nosc_ts_nosa_ea      go to state 39
    declspecs_nosc_ts_sa_noea      go to state 40
    declspecs_nosc_ts_sa_ea        go to state 41
    declspecs_sc_nots_nosa_noea    go to state 42
    declspecs_sc_nots_nosa_ea      go to state 43
    declspecs_sc_nots_sa_noea      go to state 44
    declspecs_sc_nots_sa_ea        go to state 45
    declspecs_sc_ts_nosa_noea      go to state 46
    declspecs_sc_ts_nosa_ea        go to state 47
    declspecs_sc_ts_sa_noea        go to state 48
    declspecs_sc_ts_sa_ea          go to state 49
    declspecs_ts                   go to state 409
    declspecs_nots                 go to state 410
    declspecs                      go to state 52
    typespec_nonattr               go to state 53
    typespec_attr                  go to state 54
    typespec_reserved_nonattr      go to state 55
    typespec_reserved_attr         go to state 56
    typespec_nonreserved_nonattr   go to state 57
    attributes                     go to state 58
    attribute                      go to state 59
    scspec                         go to state 60
    struct_head                    go to state 61
    union_head                     go to state 62
    enum_head                      go to state 63
    structsp_attr                  go to state 64
    structsp_nonattr               go to state 65
    non_empty_protocolrefs         go to state 72
    methodtype                     go to state 411
    methodprotolist                go to state 832
    methodprotolist2               go to state 413
    methodproto                    go to state 414


state 714

  274 initdcl: declarator . maybeasm maybe_attribute '=' init
  275        | declarator . maybeasm maybe_attribute

    ASM_KEYWORD  shift, and go to state 299

    $default  reduce using rule 272 (maybeasm)

    maybeasm  go to state 454


state 715

  584 semi_or_error: error .

    $default  reduce using rule 584 (semi_or_error)


state 716

  583 semi_or_error: ';' .

    $default  reduce using rule 583 (semi_or_error)


state 717

  585 methodproto: methodtype methoddecl semi_or_error .

    $default  reduce using rule 585 (methodproto)


state 718

  548 classdef: IMPLEMENTATION identifier ':' identifier '{' ivar_decl_list . '}'
  557 ivar_decl_list: ivar_decl_list . visibility_spec ivar_decls

    PUBLIC     shift, and go to state 595
    PRIVATE    shift, and go to state 596
    PROTECTED  shift, and go to state 597
    '}'        shift, and go to state 833

    visibility_spec  go to state 599


state 719

  557 ivar_decl_list: ivar_decl_list visibility_spec ivar_decls .
  563 ivar_decls: ivar_decls . ivar_decl ';'
  564           | ivar_decls . ';'

    error         shift, and go to state 600
    TYPENAME      shift, and go to state 2
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 6
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ATTRIBUTE     shift, and go to state 12
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22
    ';'           shift, and go to state 601

    PUBLIC     reduce using rule 557 (ivar_decl_list)
    PRIVATE    reduce using rule 557 (ivar_decl_list)
    PROTECTED  reduce using rule 557 (ivar_decl_list)
    '}'        reduce using rule 557 (ivar_decl_list)

    typeof                         go to state 32
    declspecs_nosc_nots_nosa_noea  go to state 464
    declspecs_nosc_nots_nosa_ea    go to state 465
    declspecs_nosc_nots_sa_noea    go to state 466
    declspecs_nosc_nots_sa_ea      go to state 467
    declspecs_nosc_ts_nosa_noea    go to state 468
    declspecs_nosc_ts_nosa_ea      go to state 469
    declspecs_nosc_ts_sa_noea      go to state 470
    declspecs_nosc_ts_sa_ea        go to state 471
    declspecs_nosc_ts              go to state 602
    declspecs_nosc_nots            go to state 603
    typespec_nonattr               go to state 53
    typespec_attr                  go to state 54
    typespec_reserved_nonattr      go to state 55
    typespec_reserved_attr         go to state 56
    typespec_nonreserved_nonattr   go to state 57
    attributes                     go to state 58
    attribute                      go to state 59
    struct_head                    go to state 61
    union_head                     go to state 62
    enum_head                      go to state 63
    structsp_attr                  go to state 64
    structsp_nonattr               go to state 65
    non_empty_protocolrefs         go to state 72
    ivar_decl                      go to state 604


state 720

  565 ivar_decl: declspecs_nosc_ts setspecs . ivars

    IDENTIFIER  shift, and go to state 100
    TYPENAME    shift, and go to state 310
    ':'         shift, and go to state 834
    '*'         shift, and go to state 311
    '('         shift, and go to state 312
    OBJECTNAME  shift, and go to state 313

    $default  reduce using rule 568 (ivars)

    declarator             go to state 835
    after_type_declarator  go to state 317
    notype_declarator      go to state 318
    ivars                  go to state 836
    ivar_declarator        go to state 837


state 721

  566 ivar_decl: declspecs_nosc_nots setspecs . ivars

    IDENTIFIER  shift, and go to state 100
    TYPENAME    shift, and go to state 310
    ':'         shift, and go to state 834
    '*'         shift, and go to state 311
    '('         shift, and go to state 312
    OBJECTNAME  shift, and go to state 313

    $default  reduce using rule 568 (ivars)

    declarator             go to state 835
    after_type_declarator  go to state 317
    notype_declarator      go to state 318
    ivars                  go to state 838
    ivar_declarator        go to state 837


state 722

  563 ivar_decls: ivar_decls ivar_decl ';' .

    $default  reduce using rule 563 (ivar_decls)


state 723

  396 absdcl1_noea: '*' maybe_type_quals_attrs absdcl1_noea .

    $default  reduce using rule 396 (absdcl1_noea)


state 724

  398 absdcl1_ea: '*' maybe_type_quals_attrs absdcl1_ea .

    $default  reduce using rule 398 (absdcl1_ea)


state 725

  399 direct_absdcl1: '(' maybe_attribute absdcl1 . ')'

    ')'  shift, and go to state 839


state 726

  503 parmlist: maybe_attribute parmlist_1 .

    $default  reduce using rule 503 (parmlist)


state 727

  503 parmlist: maybe_attribute . parmlist_1

    error         shift, and go to state 614
    TYPENAME      shift, and go to state 2
    SCSPEC        shift, and go to state 3
    STATIC        shift, and go to state 4
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 6
    ELLIPSIS      shift, and go to state 616
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    ')'  reduce using rule 507 (parmlist_2)

    typeof                         go to state 32
    declspecs_nosc_nots_nosa_noea  go to state 513
    declspecs_nosc_nots_nosa_ea    go to state 514
    declspecs_nosc_ts_nosa_noea    go to state 515
    declspecs_nosc_ts_nosa_ea      go to state 516
    declspecs_sc_nots_nosa_noea    go to state 517
    declspecs_sc_nots_nosa_ea      go to state 518
    declspecs_sc_ts_nosa_noea      go to state 519
    declspecs_sc_ts_nosa_ea        go to state 520
    declspecs_ts_nosa              go to state 521
    declspecs_nots_nosa            go to state 522
    typespec_nonattr               go to state 53
    typespec_attr                  go to state 54
    typespec_reserved_nonattr      go to state 55
    typespec_reserved_attr         go to state 56
    typespec_nonreserved_nonattr   go to state 57
    scspec                         go to state 60
    struct_head                    go to state 61
    union_head                     go to state 62
    enum_head                      go to state 63
    structsp_attr                  go to state 64
    structsp_nonattr               go to state 65
    parmlist_1                     go to state 726
    parmlist_2                     go to state 618
    parms                          go to state 619
    firstparm                      go to state 525
    non_empty_protocolrefs         go to state 72


state 728

  400 direct_absdcl1: direct_absdcl1 '(' parmlist .

    $default  reduce using rule 400 (direct_absdcl1)


state 729

  273 maybeasm: ASM_KEYWORD '(' STRING ')' .

    $default  reduce using rule 273 (maybeasm)


state 730

  506 parmlist_1: error ')' .

    $default  reduce using rule 506 (parmlist_1)


state 731

  504 parmlist_1: parmlist_2 ')' .

    $default  reduce using rule 504 (parmlist_1)


state 732

  505 parmlist_1: parms ';' . maybe_attribute parmlist_1

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 278 (maybe_attribute)

    maybe_attribute  go to state 840
    attributes       go to state 295
    attribute        go to state 59


state 733

  526 parmlist_or_identifiers_1: identifiers ')' .

    $default  reduce using rule 526 (parmlist_or_identifiers_1)


state 734

  528 identifiers: identifiers ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 841


state 735

  407 array_declarator: '[' STATIC maybe_type_quals_attrs expr . ']'

    ']'  shift, and go to state 842


state 736

  408 array_declarator: '[' declspecs_nosc_nots STATIC expr . ']'

    ']'  shift, and go to state 843


state 737

  406 array_declarator: '[' maybe_type_quals_attrs '*' ']' .

    $default  reduce using rule 406 (array_declarator)


state 738

  404 array_declarator: '[' maybe_type_quals_attrs expr ']' .

    $default  reduce using rule 404 (array_declarator)


state 739

   22 fndef: setspecs notype_declarator old_style_parm_decls save_filename save_lineno compstmt_or_error .

    $default  reduce using rule 22 (fndef)


state 740

  298 init: error .

    $default  reduce using rule 298 (init)


state 741

  297 init: '{' . initlist_maybe_comma '}'

    error               shift, and go to state 794
    IDENTIFIER          shift, and go to state 795
    TYPENAME            shift, and go to state 83
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '.'                 shift, and go to state 796
    '('                 shift, and go to state 240
    '['                 shift, and go to state 797
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    CLASSNAME           shift, and go to state 84
    PROTOCOL            shift, and go to state 244
    OBJECTNAME          shift, and go to state 85
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '{'                 shift, and go to state 798
    '@'                 shift, and go to state 247

    '}'  reduce using rule 299 (initlist_maybe_comma)

    identifier              go to state 799
    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 800
    primary                 go to state 256
    objc_string             go to state 257
    initlist_maybe_comma    go to state 844
    initlist1               go to state 802
    initelt                 go to state 803
    initval                 go to state 804
    designator_list         go to state 805
    designator              go to state 806
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 742

   57 expr_no_commas: expr_no_commas . '+' expr_no_commas
   58               | expr_no_commas . '-' expr_no_commas
   59               | expr_no_commas . '*' expr_no_commas
   60               | expr_no_commas . '/' expr_no_commas
   61               | expr_no_commas . '%' expr_no_commas
   62               | expr_no_commas . LSHIFT expr_no_commas
   63               | expr_no_commas . RSHIFT expr_no_commas
   64               | expr_no_commas . ARITHCOMPARE expr_no_commas
   65               | expr_no_commas . EQCOMPARE expr_no_commas
   66               | expr_no_commas . '&' expr_no_commas
   67               | expr_no_commas . '|' expr_no_commas
   68               | expr_no_commas . '^' expr_no_commas
   69               | expr_no_commas . ANDAND expr_no_commas
   70               | expr_no_commas . OROR expr_no_commas
   71               | expr_no_commas . '?' expr ':' expr_no_commas
   72               | expr_no_commas . '?' ':' expr_no_commas
   73               | expr_no_commas . '=' expr_no_commas
   74               | expr_no_commas . ASSIGN expr_no_commas
  296 init: expr_no_commas .

    '='           shift, and go to state 367
    ASSIGN        shift, and go to state 368
    '?'           shift, and go to state 369
    OROR          shift, and go to state 370
    ANDAND        shift, and go to state 371
    '|'           shift, and go to state 372
    '^'           shift, and go to state 373
    '&'           shift, and go to state 374
    EQCOMPARE     shift, and go to state 375
    ARITHCOMPARE  shift, and go to state 376
    RSHIFT        shift, and go to state 377
    LSHIFT        shift, and go to state 378
    '+'           shift, and go to state 379
    '-'           shift, and go to state 380
    '*'           shift, and go to state 381
    '/'           shift, and go to state 382
    '%'           shift, and go to state 383

    $default  reduce using rule 296 (init)


state 743

  276 notype_initdcl: notype_declarator maybeasm maybe_attribute '=' init .

    $default  reduce using rule 276 (notype_initdcl)


state 744

  110 datadecl: declspecs_ts_nosa ';' .

    $default  reduce using rule 110 (datadecl)


state 745

  108 datadecl: declspecs_ts_nosa setspecs . initdecls ';'

    IDENTIFIER  shift, and go to state 100
    TYPENAME    shift, and go to state 310
    '*'         shift, and go to state 311
    '('         shift, and go to state 312
    OBJECTNAME  shift, and go to state 313

    initdecls              go to state 845
    initdcl                go to state 315
    declarator             go to state 714
    after_type_declarator  go to state 317
    notype_declarator      go to state 318


state 746

  111 datadecl: declspecs_nots_nosa ';' .

    $default  reduce using rule 111 (datadecl)


state 747

  109 datadecl: declspecs_nots_nosa setspecs . notype_initdecls ';'

    IDENTIFIER  shift, and go to state 100
    '*'         shift, and go to state 101
    '('         shift, and go to state 102

    notype_initdecls   go to state 846
    notype_initdcl     go to state 104
    notype_declarator  go to state 586


state 748

  319 after_type_declarator: '(' maybe_attribute after_type_declarator ')' .

    $default  reduce using rule 319 (after_type_declarator)


state 749

  269 initdecls: initdecls ',' maybe_resetattrs initdcl .

    $default  reduce using rule 269 (initdecls)


state 750

   18 fndef: declspecs_ts setspecs declarator old_style_parm_decls save_filename save_lineno . compstmt_or_error

    error  shift, and go to state 507
    '{'    shift, and go to state 508

    compstmt_or_error  go to state 847
    compstmt_start     go to state 510
    compstmt           go to state 511


state 751

  274 initdcl: declarator maybeasm maybe_attribute '=' . init

    error               shift, and go to state 740
    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '{'                 shift, and go to state 741
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 742
    primary                 go to state 256
    objc_string             go to state 257
    init                    go to state 848
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 752

   20 fndef: declspecs_nots setspecs notype_declarator old_style_parm_decls save_filename save_lineno . compstmt_or_error

    error  shift, and go to state 507
    '{'    shift, and go to state 508

    compstmt_or_error  go to state 849
    compstmt_start     go to state 510
    compstmt           go to state 511


state 753

  365 component_decl_list2: DEFS '(' CLASSNAME ')' .

    $default  reduce using rule 365 (component_decl_list2)


state 754

  366 component_decl: declspecs_nosc_ts setspecs components .
  373 components: components . ',' maybe_resetattrs component_declarator

    ','  shift, and go to state 850

    $default  reduce using rule 366 (component_decl)


state 755

  372 components: component_declarator .

    $default  reduce using rule 372 (components)


state 756

  367 component_decl: declspecs_nosc_ts setspecs save_filename . save_lineno
  376 component_declarator: save_filename . save_lineno declarator maybe_attribute
  377                     | save_filename . save_lineno declarator ':' expr_no_commas maybe_attribute
  378                     | save_filename . save_lineno ':' expr_no_commas maybe_attribute

    $default  reduce using rule 457 (save_lineno)

    save_lineno  go to state 851


state 757

  368 component_decl: declspecs_nosc_nots setspecs components_notype .
  375 components_notype: components_notype . ',' maybe_resetattrs component_notype_declarator

    ','  shift, and go to state 852

    $default  reduce using rule 368 (component_decl)


state 758

  374 components_notype: component_notype_declarator .

    $default  reduce using rule 374 (components_notype)


state 759

  379 component_notype_declarator: save_filename . save_lineno notype_declarator maybe_attribute
  380                            | save_filename . save_lineno notype_declarator ':' expr_no_commas maybe_attribute
  381                            | save_filename . save_lineno ':' expr_no_commas maybe_attribute

    $default  reduce using rule 457 (save_lineno)

    save_lineno  go to state 853


state 760

  347 structsp_attr: struct_head identifier '{' component_decl_list '}' maybe_attribute .

    $default  reduce using rule 347 (structsp_attr)


state 761

  349 structsp_attr: union_head identifier '{' component_decl_list '}' maybe_attribute .

    $default  reduce using rule 349 (structsp_attr)


state 762

  352 structsp_attr: enum_head '{' enumlist maybecomma_warn '}' maybe_attribute .

    $default  reduce using rule 352 (structsp_attr)


state 763

  351 structsp_attr: enum_head identifier '{' enumlist maybecomma_warn '}' . maybe_attribute

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 278 (maybe_attribute)

    maybe_attribute  go to state 854
    attributes       go to state 295
    attribute        go to state 59


state 764

  640 keyworddecl: ':' '(' typename ')' identifier .

    $default  reduce using rule 640 (keyworddecl)


state 765

  588 methoddecl: '(' typename ')' keywordselector optparmlist .

    $default  reduce using rule 588 (methoddecl)


state 766

  329 parm_declarator_starttypename: TYPENAME .

    $default  reduce using rule 329 (parm_declarator_starttypename)


state 767

  333 parm_declarator_nostarttypename: '*' . maybe_type_quals_attrs parm_declarator_starttypename
  334                                | '*' . maybe_type_quals_attrs parm_declarator_nostarttypename
  338 notype_declarator: '*' . maybe_type_quals_attrs notype_declarator
  396 absdcl1_noea: '*' . maybe_type_quals_attrs absdcl1_noea
  397 absdcl1_ea: '*' . maybe_type_quals_attrs
  398           | '*' . maybe_type_quals_attrs absdcl1_ea

    TYPE_QUAL  shift, and go to state 6
    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 254 (maybe_type_quals_attrs)

    declspecs_nosc_nots_nosa_noea  go to state 288
    declspecs_nosc_nots_nosa_ea    go to state 289
    declspecs_nosc_nots_sa_noea    go to state 290
    declspecs_nosc_nots_sa_ea      go to state 291
    declspecs_nosc_nots            go to state 292
    maybe_type_quals_attrs         go to state 855
    attributes                     go to state 58
    attribute                      go to state 59


state 768

  335 parm_declarator_nostarttypename: '(' . maybe_attribute parm_declarator_nostarttypename ')'
  337 notype_declarator: '(' . maybe_attribute notype_declarator ')'
  399 direct_absdcl1: '(' . maybe_attribute absdcl1 ')'
  402               | '(' . parmlist

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 278 (maybe_attribute)

    maybe_attribute  go to state 856
    attributes       go to state 295
    attribute        go to state 59
    parmlist         go to state 608


state 769

  330 parm_declarator_starttypename: OBJECTNAME .

    $default  reduce using rule 330 (parm_declarator_starttypename)


state 770

  603 myparm: parm_declarator . maybe_attribute

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 278 (maybe_attribute)

    maybe_attribute  go to state 857
    attributes       go to state 295
    attribute        go to state 59


state 771

  325 parm_declarator: parm_declarator_starttypename .
  327 parm_declarator_starttypename: parm_declarator_starttypename . '(' parmlist_or_identifiers
  328                              | parm_declarator_starttypename . array_declarator

    '('  shift, and go to state 858
    '['  shift, and go to state 301

    $default  reduce using rule 325 (parm_declarator)

    array_declarator  go to state 859


state 772

  326 parm_declarator: parm_declarator_nostarttypename .
  331 parm_declarator_nostarttypename: parm_declarator_nostarttypename . '(' parmlist_or_identifiers
  332                                | parm_declarator_nostarttypename . array_declarator

    '('  shift, and go to state 860
    '['  shift, and go to state 301

    $default  reduce using rule 326 (parm_declarator)

    array_declarator  go to state 861


state 773

  336 notype_declarator: notype_declarator . '(' parmlist_or_identifiers
  339                  | notype_declarator . array_declarator
  604 myparm: notype_declarator . maybe_attribute

    ATTRIBUTE  shift, and go to state 12
    '('        shift, and go to state 300
    '['        shift, and go to state 301

    $default  reduce using rule 278 (maybe_attribute)

    maybe_attribute   go to state 862
    attributes        go to state 295
    attribute         go to state 59
    array_declarator  go to state 307


state 774

  605 myparm: absdcl_maybe_attribute .

    $default  reduce using rule 605 (myparm)


state 775

  391 absdcl_maybe_attribute: absdcl1 .

    $default  reduce using rule 391 (absdcl_maybe_attribute)


state 776

  392 absdcl_maybe_attribute: absdcl1_noea . attributes
  394 absdcl1: absdcl1_noea .

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 394 (absdcl1)

    attributes  go to state 863
    attribute   go to state 59


state 777

  598 mydecl: declspecs_ts setspecs myparms . ';'
  602 myparms: myparms . ',' myparm

    ';'  shift, and go to state 864
    ','  shift, and go to state 865


state 778

  601 myparms: myparm .

    $default  reduce using rule 601 (myparms)


state 779

  518 firstparm: declspecs_ts_nosa setspecs_fp parm_declarator . maybe_attribute

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 278 (maybe_attribute)

    maybe_attribute  go to state 866
    attributes       go to state 295
    attribute        go to state 59


state 780

  336 notype_declarator: notype_declarator . '(' parmlist_or_identifiers
  339                  | notype_declarator . array_declarator
  519 firstparm: declspecs_ts_nosa setspecs_fp notype_declarator . maybe_attribute

    ATTRIBUTE  shift, and go to state 12
    '('        shift, and go to state 300
    '['        shift, and go to state 301

    $default  reduce using rule 278 (maybe_attribute)

    maybe_attribute   go to state 867
    attributes        go to state 295
    attribute         go to state 59
    array_declarator  go to state 307


state 781

  520 firstparm: declspecs_ts_nosa setspecs_fp absdcl_maybe_attribute .

    $default  reduce using rule 520 (firstparm)


state 782

  338 notype_declarator: '*' . maybe_type_quals_attrs notype_declarator
  396 absdcl1_noea: '*' . maybe_type_quals_attrs absdcl1_noea
  397 absdcl1_ea: '*' . maybe_type_quals_attrs
  398           | '*' . maybe_type_quals_attrs absdcl1_ea

    TYPE_QUAL  shift, and go to state 6
    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 254 (maybe_type_quals_attrs)

    declspecs_nosc_nots_nosa_noea  go to state 288
    declspecs_nosc_nots_nosa_ea    go to state 289
    declspecs_nosc_nots_sa_noea    go to state 290
    declspecs_nosc_nots_sa_ea      go to state 291
    declspecs_nosc_nots            go to state 292
    maybe_type_quals_attrs         go to state 868
    attributes                     go to state 58
    attribute                      go to state 59


state 783

  337 notype_declarator: '(' . maybe_attribute notype_declarator ')'
  399 direct_absdcl1: '(' . maybe_attribute absdcl1 ')'
  402               | '(' . parmlist

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 278 (maybe_attribute)

    maybe_attribute  go to state 869
    attributes       go to state 295
    attribute        go to state 59
    parmlist         go to state 608


state 784

  336 notype_declarator: notype_declarator . '(' parmlist_or_identifiers
  339                  | notype_declarator . array_declarator
  521 firstparm: declspecs_nots_nosa setspecs_fp notype_declarator . maybe_attribute

    ATTRIBUTE  shift, and go to state 12
    '('        shift, and go to state 300
    '['        shift, and go to state 301

    $default  reduce using rule 278 (maybe_attribute)

    maybe_attribute   go to state 870
    attributes        go to state 295
    attribute         go to state 59
    array_declarator  go to state 307


state 785

  522 firstparm: declspecs_nots_nosa setspecs_fp absdcl_maybe_attribute .

    $default  reduce using rule 522 (firstparm)


state 786

  510 parmlist_2: parms ',' ELLIPSIS .

    $default  reduce using rule 510 (parmlist_2)


state 787

  513 parm: declspecs_ts . setspecs parm_declarator maybe_attribute
  514     | declspecs_ts . setspecs notype_declarator maybe_attribute
  515     | declspecs_ts . setspecs absdcl_maybe_attribute

    $default  reduce using rule 113 (setspecs)

    setspecs  go to state 871


state 788

  516 parm: declspecs_nots . setspecs notype_declarator maybe_attribute
  517     | declspecs_nots . setspecs absdcl_maybe_attribute

    $default  reduce using rule 113 (setspecs)

    setspecs  go to state 872


state 789

  512 parms: parms ',' parm .

    $default  reduce using rule 512 (parms)


state 790

  638 keyworddecl: selector ':' '(' typename ')' . identifier

    IDENTIFIER  shift, and go to state 82
    TYPENAME    shift, and go to state 83
    CLASSNAME   shift, and go to state 84
    OBJECTNAME  shift, and go to state 85

    identifier  go to state 873


state 791

   85 primary: VA_ARG '(' expr_no_commas ',' typename . ')'

    ')'  shift, and go to state 874


state 792

   57 expr_no_commas: expr_no_commas . '+' expr_no_commas
   58               | expr_no_commas . '-' expr_no_commas
   59               | expr_no_commas . '*' expr_no_commas
   60               | expr_no_commas . '/' expr_no_commas
   61               | expr_no_commas . '%' expr_no_commas
   62               | expr_no_commas . LSHIFT expr_no_commas
   63               | expr_no_commas . RSHIFT expr_no_commas
   64               | expr_no_commas . ARITHCOMPARE expr_no_commas
   65               | expr_no_commas . EQCOMPARE expr_no_commas
   66               | expr_no_commas . '&' expr_no_commas
   67               | expr_no_commas . '|' expr_no_commas
   68               | expr_no_commas . '^' expr_no_commas
   69               | expr_no_commas . ANDAND expr_no_commas
   70               | expr_no_commas . OROR expr_no_commas
   71               | expr_no_commas . '?' expr ':' expr_no_commas
   72               | expr_no_commas . '?' ':' expr_no_commas
   73               | expr_no_commas . '=' expr_no_commas
   74               | expr_no_commas . ASSIGN expr_no_commas
   86 primary: CHOOSE_EXPR '(' expr_no_commas ',' expr_no_commas . ',' expr_no_commas ')'

    '='           shift, and go to state 367
    ASSIGN        shift, and go to state 368
    '?'           shift, and go to state 369
    OROR          shift, and go to state 370
    ANDAND        shift, and go to state 371
    '|'           shift, and go to state 372
    '^'           shift, and go to state 373
    '&'           shift, and go to state 374
    EQCOMPARE     shift, and go to state 375
    ARITHCOMPARE  shift, and go to state 376
    RSHIFT        shift, and go to state 377
    LSHIFT        shift, and go to state 378
    '+'           shift, and go to state 379
    '-'           shift, and go to state 380
    '*'           shift, and go to state 381
    '/'           shift, and go to state 382
    '%'           shift, and go to state 383
    ','           shift, and go to state 875


state 793

   87 primary: TYPES_COMPATIBLE_P '(' typename ',' typename . ')'

    ')'  shift, and go to state 876


state 794

  309 initval: error .

    $default  reduce using rule 309 (initval)


state 795

   24 identifier: IDENTIFIER .
   75 primary: IDENTIFIER .

    ':'       reduce using rule 24 (identifier)
    $default  reduce using rule 75 (primary)


state 796

  312 designator: '.' . identifier

    IDENTIFIER  shift, and go to state 82
    TYPENAME    shift, and go to state 83
    CLASSNAME   shift, and go to state 84
    OBJECTNAME  shift, and go to state 85

    identifier  go to state 877


state 797

  313 designator: '[' . expr_no_commas ELLIPSIS expr_no_commas ']'
  314           | '[' . expr_no_commas ']'
  651 objcmessageexpr: '[' . receiver messageargs ']'

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    CLASSNAME           shift, and go to state 353
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    expr                    go to state 354
    nonnull_exprlist        go to state 250
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 878
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    receiver                go to state 355
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 798

  307 initval: '{' . initlist_maybe_comma '}'

    error               shift, and go to state 794
    IDENTIFIER          shift, and go to state 795
    TYPENAME            shift, and go to state 83
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '.'                 shift, and go to state 796
    '('                 shift, and go to state 240
    '['                 shift, and go to state 797
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    CLASSNAME           shift, and go to state 84
    PROTOCOL            shift, and go to state 244
    OBJECTNAME          shift, and go to state 85
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '{'                 shift, and go to state 798
    '@'                 shift, and go to state 247

    '}'  reduce using rule 299 (initlist_maybe_comma)

    identifier              go to state 799
    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 800
    primary                 go to state 256
    objc_string             go to state 257
    initlist_maybe_comma    go to state 879
    initlist1               go to state 802
    initelt                 go to state 803
    initval                 go to state 804
    designator_list         go to state 805
    designator              go to state 806
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 799

  305 initelt: identifier . ':' initval

    ':'  shift, and go to state 880


state 800

   57 expr_no_commas: expr_no_commas . '+' expr_no_commas
   58               | expr_no_commas . '-' expr_no_commas
   59               | expr_no_commas . '*' expr_no_commas
   60               | expr_no_commas . '/' expr_no_commas
   61               | expr_no_commas . '%' expr_no_commas
   62               | expr_no_commas . LSHIFT expr_no_commas
   63               | expr_no_commas . RSHIFT expr_no_commas
   64               | expr_no_commas . ARITHCOMPARE expr_no_commas
   65               | expr_no_commas . EQCOMPARE expr_no_commas
   66               | expr_no_commas . '&' expr_no_commas
   67               | expr_no_commas . '|' expr_no_commas
   68               | expr_no_commas . '^' expr_no_commas
   69               | expr_no_commas . ANDAND expr_no_commas
   70               | expr_no_commas . OROR expr_no_commas
   71               | expr_no_commas . '?' expr ':' expr_no_commas
   72               | expr_no_commas . '?' ':' expr_no_commas
   73               | expr_no_commas . '=' expr_no_commas
   74               | expr_no_commas . ASSIGN expr_no_commas
  308 initval: expr_no_commas .

    '='           shift, and go to state 367
    ASSIGN        shift, and go to state 368
    '?'           shift, and go to state 369
    OROR          shift, and go to state 370
    ANDAND        shift, and go to state 371
    '|'           shift, and go to state 372
    '^'           shift, and go to state 373
    '&'           shift, and go to state 374
    EQCOMPARE     shift, and go to state 375
    ARITHCOMPARE  shift, and go to state 376
    RSHIFT        shift, and go to state 377
    LSHIFT        shift, and go to state 378
    '+'           shift, and go to state 379
    '-'           shift, and go to state 380
    '*'           shift, and go to state 381
    '/'           shift, and go to state 382
    '%'           shift, and go to state 383

    $default  reduce using rule 308 (initval)


state 801

   79 primary: '(' typename ')' '{' initlist_maybe_comma . '}'

    '}'  shift, and go to state 881


state 802

  300 initlist_maybe_comma: initlist1 . maybecomma
  302 initlist1: initlist1 . ',' initelt

    ','  shift, and go to state 882

    $default  reduce using rule 356 (maybecomma)

    maybecomma  go to state 883


state 803

  301 initlist1: initelt .

    $default  reduce using rule 301 (initlist1)


state 804

  306 initelt: initval .

    $default  reduce using rule 306 (initelt)


state 805

  303 initelt: designator_list . '=' initval
  311 designator_list: designator_list . designator

    '='  shift, and go to state 884
    '.'  shift, and go to state 796
    '['  shift, and go to state 885

    designator  go to state 886


state 806

  304 initelt: designator . initval
  310 designator_list: designator .

    error               shift, and go to state 794
    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '{'                 shift, and go to state 798
    '@'                 shift, and go to state 247

    '='  reduce using rule 310 (designator_list)
    '.'  reduce using rule 310 (designator_list)
    '['  [reduce using rule 310 (designator_list)]

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 800
    primary                 go to state 256
    objc_string             go to state 257
    initval                 go to state 887
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 807

  647 keywordarg: selector ':' keywordexpr .

    $default  reduce using rule 647 (keywordarg)


state 808

   57 expr_no_commas: expr_no_commas . '+' expr_no_commas
   58               | expr_no_commas . '-' expr_no_commas
   59               | expr_no_commas . '*' expr_no_commas
   60               | expr_no_commas . '/' expr_no_commas
   61               | expr_no_commas . '%' expr_no_commas
   62               | expr_no_commas . LSHIFT expr_no_commas
   63               | expr_no_commas . RSHIFT expr_no_commas
   64               | expr_no_commas . ARITHCOMPARE expr_no_commas
   65               | expr_no_commas . EQCOMPARE expr_no_commas
   66               | expr_no_commas . '&' expr_no_commas
   67               | expr_no_commas . '|' expr_no_commas
   68               | expr_no_commas . '^' expr_no_commas
   69               | expr_no_commas . ANDAND expr_no_commas
   70               | expr_no_commas . OROR expr_no_commas
   71               | expr_no_commas . '?' expr ':' expr_no_commas
   71               | expr_no_commas '?' expr ':' expr_no_commas .
   72               | expr_no_commas . '?' ':' expr_no_commas
   73               | expr_no_commas . '=' expr_no_commas
   74               | expr_no_commas . ASSIGN expr_no_commas

    '?'           shift, and go to state 369
    OROR          shift, and go to state 370
    ANDAND        shift, and go to state 371
    '|'           shift, and go to state 372
    '^'           shift, and go to state 373
    '&'           shift, and go to state 374
    EQCOMPARE     shift, and go to state 375
    ARITHCOMPARE  shift, and go to state 376
    RSHIFT        shift, and go to state 377
    LSHIFT        shift, and go to state 378
    '+'           shift, and go to state 379
    '-'           shift, and go to state 380
    '*'           shift, and go to state 381
    '/'           shift, and go to state 382
    '%'           shift, and go to state 383

    $default  reduce using rule 71 (expr_no_commas)


state 809

  442 label_decl: LABEL identifiers_or_typenames ';' .

    $default  reduce using rule 442 (label_decl)


state 810

  530 identifiers_or_typenames: identifiers_or_typenames ',' . identifier

    IDENTIFIER  shift, and go to state 82
    TYPENAME    shift, and go to state 83
    CLASSNAME   shift, and go to state 84
    OBJECTNAME  shift, and go to state 85

    identifier  go to state 888


state 811

  419 lineno_stmt_decl_or_labels_ending_decl: lineno_stmt_decl_or_labels_ending_stmt lineno_decl .

    $default  reduce using rule 419 (lineno_stmt_decl_or_labels_ending_decl)


state 812

  414 lineno_stmt_decl_or_labels_ending_stmt: lineno_stmt_decl_or_labels_ending_stmt lineno_stmt .

    $default  reduce using rule 414 (lineno_stmt_decl_or_labels_ending_stmt)


state 813

  423 lineno_stmt_decl_or_labels_ending_label: lineno_stmt_decl_or_labels_ending_stmt lineno_label .

    $default  reduce using rule 423 (lineno_stmt_decl_or_labels_ending_label)


state 814

  420 lineno_stmt_decl_or_labels_ending_decl: lineno_stmt_decl_or_labels_ending_decl lineno_decl .

    $default  reduce using rule 420 (lineno_stmt_decl_or_labels_ending_decl)


state 815

  415 lineno_stmt_decl_or_labels_ending_stmt: lineno_stmt_decl_or_labels_ending_decl lineno_stmt .

    $default  reduce using rule 415 (lineno_stmt_decl_or_labels_ending_stmt)


state 816

  424 lineno_stmt_decl_or_labels_ending_label: lineno_stmt_decl_or_labels_ending_decl lineno_label .

    $default  reduce using rule 424 (lineno_stmt_decl_or_labels_ending_label)


state 817

  461 lineno_stmt: save_filename . save_lineno stmt
  462 lineno_label: save_filename . save_lineno label

    $default  reduce using rule 457 (save_lineno)

    save_lineno  go to state 889


state 818

  416 lineno_stmt_decl_or_labels_ending_stmt: lineno_stmt_decl_or_labels_ending_label lineno_stmt .

    $default  reduce using rule 416 (lineno_stmt_decl_or_labels_ending_stmt)


state 819

  425 lineno_stmt_decl_or_labels_ending_label: lineno_stmt_decl_or_labels_ending_label lineno_label .

    $default  reduce using rule 425 (lineno_stmt_decl_or_labels_ending_label)


state 820

  421 lineno_stmt_decl_or_labels_ending_decl: lineno_stmt_decl_or_labels_ending_error lineno_decl .

    $default  reduce using rule 421 (lineno_stmt_decl_or_labels_ending_decl)


state 821

  417 lineno_stmt_decl_or_labels_ending_stmt: lineno_stmt_decl_or_labels_ending_error lineno_stmt .

    $default  reduce using rule 417 (lineno_stmt_decl_or_labels_ending_stmt)


state 822

  426 lineno_stmt_decl_or_labels_ending_label: lineno_stmt_decl_or_labels_ending_error lineno_label .

    $default  reduce using rule 426 (lineno_stmt_decl_or_labels_ending_label)


state 823

  428 lineno_stmt_decl_or_labels_ending_error: lineno_stmt_decl_or_labels errstmt .

    $default  reduce using rule 428 (lineno_stmt_decl_or_labels_ending_error)


state 824

  447 compstmt_nostart: pushlevel maybe_label_decls compstmt_contents_nonempty '}' . poplevel

    $default  reduce using rule 435 (poplevel)

    poplevel  go to state 890


state 825

  112 lineno_decl: save_filename save_lineno . decl
  461 lineno_stmt: save_filename save_lineno . stmt
  462 lineno_label: save_filename save_lineno . label

    IDENTIFIER          shift, and go to state 795
    TYPENAME            shift, and go to state 891
    SCSPEC              shift, and go to state 3
    STATIC              shift, and go to state 4
    TYPESPEC            shift, and go to state 5
    TYPE_QUAL           shift, and go to state 6
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ENUM                shift, and go to state 7
    STRUCT              shift, and go to state 8
    UNION               shift, and go to state 9
    CASE                shift, and go to state 892
    DEFAULT             shift, and go to state 893
    BREAK               shift, and go to state 894
    CONTINUE            shift, and go to state 895
    RETURN              shift, and go to state 896
    GOTO                shift, and go to state 897
    ASM_KEYWORD         shift, and go to state 898
    TYPEOF              shift, and go to state 11
    ALIGNOF             shift, and go to state 226
    ATTRIBUTE           shift, and go to state 12
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    ARITHCOMPARE        shift, and go to state 14
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    CLASSNAME           shift, and go to state 899
    PROTOCOL            shift, and go to state 244
    OBJECTNAME          shift, and go to state 900
    ';'                 shift, and go to state 901
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '{'                 shift, and go to state 508
    '@'                 shift, and go to state 247

    $default  reduce using rule 436 (c99_block_start)

    identifier                     go to state 902
    unop                           go to state 248
    expr                           go to state 903
    nonnull_exprlist               go to state 250
    unary_expr                     go to state 251
    sizeof                         go to state 252
    alignof                        go to state 253
    typeof                         go to state 32
    cast_expr                      go to state 254
    expr_no_commas                 go to state 255
    primary                        go to state 256
    objc_string                    go to state 257
    decl                           go to state 904
    declspecs_nosc_nots_nosa_noea  go to state 34
    declspecs_nosc_nots_nosa_ea    go to state 35
    declspecs_nosc_nots_sa_noea    go to state 36
    declspecs_nosc_nots_sa_ea      go to state 37
    declspecs_nosc_ts_nosa_noea    go to state 38
    declspecs_nosc_ts_nosa_ea      go to state 39
    declspecs_nosc_ts_sa_noea      go to state 40
    declspecs_nosc_ts_sa_ea        go to state 41
    declspecs_sc_nots_nosa_noea    go to state 42
    declspecs_sc_nots_nosa_ea      go to state 43
    declspecs_sc_nots_sa_noea      go to state 44
    declspecs_sc_nots_sa_ea        go to state 45
    declspecs_sc_ts_nosa_noea      go to state 46
    declspecs_sc_ts_nosa_ea        go to state 47
    declspecs_sc_ts_sa_noea        go to state 48
    declspecs_sc_ts_sa_ea          go to state 49
    declspecs_ts                   go to state 905
    declspecs_nots                 go to state 906
    declspecs                      go to state 907
    typespec_nonattr               go to state 53
    typespec_attr                  go to state 54
    typespec_reserved_nonattr      go to state 55
    typespec_reserved_attr         go to state 56
    typespec_nonreserved_nonattr   go to state 57
    attributes                     go to state 58
    attribute                      go to state 59
    scspec                         go to state 60
    struct_head                    go to state 61
    union_head                     go to state 62
    enum_head                      go to state 63
    structsp_attr                  go to state 64
    structsp_nonattr               go to state 65
    c99_block_start                go to state 908
    compstmt_start                 go to state 510
    compstmt_primary_start         go to state 258
    compstmt                       go to state 909
    stmt                           go to state 910
    label                          go to state 911
    extension                      go to state 912
    non_empty_protocolrefs         go to state 72
    objcmessageexpr                go to state 260
    objcselectorexpr               go to state 261
    objcprotocolexpr               go to state 262
    objcencodeexpr                 go to state 263


state 826

  287 attrib: any_word '(' IDENTIFIER ')' .

    $default  reduce using rule 287 (attrib)


state 827

  288 attrib: any_word '(' IDENTIFIER ',' . nonnull_exprlist ')'

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    nonnull_exprlist        go to state 913
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 255
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 828

  289 attrib: any_word '(' exprlist ')' .

    $default  reduce using rule 289 (attrib)


state 829

  544 classdef: INTERFACE identifier ':' identifier protocolrefs '{' ivar_decl_list . '}' methodprotolist END
  557 ivar_decl_list: ivar_decl_list . visibility_spec ivar_decls

    PUBLIC     shift, and go to state 595
    PRIVATE    shift, and go to state 596
    PROTECTED  shift, and go to state 597
    '}'        shift, and go to state 914

    visibility_spec  go to state 599


state 830

  545 classdef: INTERFACE identifier ':' identifier protocolrefs methodprotolist END .

    $default  reduce using rule 545 (classdef)


state 831

  550 classdef: INTERFACE identifier '(' identifier ')' protocolrefs methodprotolist . END

    END  shift, and go to state 915


state 832

  542 classdef: INTERFACE identifier protocolrefs '{' ivar_decl_list '}' methodprotolist . END

    END  shift, and go to state 916


state 833

  548 classdef: IMPLEMENTATION identifier ':' identifier '{' ivar_decl_list '}' .

    $default  reduce using rule 548 (classdef)


state 834

  573 ivar_declarator: ':' . expr_no_commas

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 917
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 835

  571 ivar_declarator: declarator .
  572                | declarator . ':' expr_no_commas

    ':'  shift, and go to state 918

    $default  reduce using rule 571 (ivar_declarator)


state 836

  565 ivar_decl: declspecs_nosc_ts setspecs ivars .
  570 ivars: ivars . ',' maybe_resetattrs ivar_declarator

    ','  shift, and go to state 919

    $default  reduce using rule 565 (ivar_decl)


state 837

  569 ivars: ivar_declarator .

    $default  reduce using rule 569 (ivars)


state 838

  566 ivar_decl: declspecs_nosc_nots setspecs ivars .
  570 ivars: ivars . ',' maybe_resetattrs ivar_declarator

    ','  shift, and go to state 919

    $default  reduce using rule 566 (ivar_decl)


state 839

  399 direct_absdcl1: '(' maybe_attribute absdcl1 ')' .

    $default  reduce using rule 399 (direct_absdcl1)


state 840

  505 parmlist_1: parms ';' maybe_attribute . parmlist_1

    error         shift, and go to state 614
    TYPENAME      shift, and go to state 2
    SCSPEC        shift, and go to state 3
    STATIC        shift, and go to state 4
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 6
    ELLIPSIS      shift, and go to state 616
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ARITHCOMPARE  shift, and go to state 14
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    ')'  reduce using rule 507 (parmlist_2)

    typeof                         go to state 32
    declspecs_nosc_nots_nosa_noea  go to state 513
    declspecs_nosc_nots_nosa_ea    go to state 514
    declspecs_nosc_ts_nosa_noea    go to state 515
    declspecs_nosc_ts_nosa_ea      go to state 516
    declspecs_sc_nots_nosa_noea    go to state 517
    declspecs_sc_nots_nosa_ea      go to state 518
    declspecs_sc_ts_nosa_noea      go to state 519
    declspecs_sc_ts_nosa_ea        go to state 520
    declspecs_ts_nosa              go to state 521
    declspecs_nots_nosa            go to state 522
    typespec_nonattr               go to state 53
    typespec_attr                  go to state 54
    typespec_reserved_nonattr      go to state 55
    typespec_reserved_attr         go to state 56
    typespec_nonreserved_nonattr   go to state 57
    scspec                         go to state 60
    struct_head                    go to state 61
    union_head                     go to state 62
    enum_head                      go to state 63
    structsp_attr                  go to state 64
    structsp_nonattr               go to state 65
    parmlist_1                     go to state 920
    parmlist_2                     go to state 618
    parms                          go to state 619
    firstparm                      go to state 525
    non_empty_protocolrefs         go to state 72


state 841

  528 identifiers: identifiers ',' IDENTIFIER .

    $default  reduce using rule 528 (identifiers)


state 842

  407 array_declarator: '[' STATIC maybe_type_quals_attrs expr ']' .

    $default  reduce using rule 407 (array_declarator)


state 843

  408 array_declarator: '[' declspecs_nosc_nots STATIC expr ']' .

    $default  reduce using rule 408 (array_declarator)


state 844

  297 init: '{' initlist_maybe_comma . '}'

    '}'  shift, and go to state 921


state 845

  108 datadecl: declspecs_ts_nosa setspecs initdecls . ';'
  269 initdecls: initdecls . ',' maybe_resetattrs initdcl

    ';'  shift, and go to state 922
    ','  shift, and go to state 451


state 846

  109 datadecl: declspecs_nots_nosa setspecs notype_initdecls . ';'
  271 notype_initdecls: notype_initdecls . ',' maybe_resetattrs notype_initdcl

    ';'  shift, and go to state 923
    ','  shift, and go to state 297


state 847

   18 fndef: declspecs_ts setspecs declarator old_style_parm_decls save_filename save_lineno compstmt_or_error .

    $default  reduce using rule 18 (fndef)


state 848

  274 initdcl: declarator maybeasm maybe_attribute '=' init .

    $default  reduce using rule 274 (initdcl)


state 849

   20 fndef: declspecs_nots setspecs notype_declarator old_style_parm_decls save_filename save_lineno compstmt_or_error .

    $default  reduce using rule 20 (fndef)


state 850

  373 components: components ',' . maybe_resetattrs component_declarator

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 278 (maybe_attribute)

    maybe_resetattrs  go to state 924
    maybe_attribute   go to state 434
    attributes        go to state 295
    attribute         go to state 59


state 851

  367 component_decl: declspecs_nosc_ts setspecs save_filename save_lineno .
  376 component_declarator: save_filename save_lineno . declarator maybe_attribute
  377                     | save_filename save_lineno . declarator ':' expr_no_commas maybe_attribute
  378                     | save_filename save_lineno . ':' expr_no_commas maybe_attribute

    IDENTIFIER  shift, and go to state 100
    TYPENAME    shift, and go to state 310
    ':'         shift, and go to state 925
    '*'         shift, and go to state 311
    '('         shift, and go to state 312
    OBJECTNAME  shift, and go to state 313

    $default  reduce using rule 367 (component_decl)

    declarator             go to state 926
    after_type_declarator  go to state 317
    notype_declarator      go to state 318


state 852

  375 components_notype: components_notype ',' . maybe_resetattrs component_notype_declarator

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 278 (maybe_attribute)

    maybe_resetattrs  go to state 927
    maybe_attribute   go to state 434
    attributes        go to state 295
    attribute         go to state 59


state 853

  379 component_notype_declarator: save_filename save_lineno . notype_declarator maybe_attribute
  380                            | save_filename save_lineno . notype_declarator ':' expr_no_commas maybe_attribute
  381                            | save_filename save_lineno . ':' expr_no_commas maybe_attribute

    IDENTIFIER  shift, and go to state 100
    ':'         shift, and go to state 928
    '*'         shift, and go to state 101
    '('         shift, and go to state 102

    notype_declarator  go to state 929


state 854

  351 structsp_attr: enum_head identifier '{' enumlist maybecomma_warn '}' maybe_attribute .

    $default  reduce using rule 351 (structsp_attr)


state 855

  333 parm_declarator_nostarttypename: '*' maybe_type_quals_attrs . parm_declarator_starttypename
  334                                | '*' maybe_type_quals_attrs . parm_declarator_nostarttypename
  338 notype_declarator: '*' maybe_type_quals_attrs . notype_declarator
  396 absdcl1_noea: '*' maybe_type_quals_attrs . absdcl1_noea
  397 absdcl1_ea: '*' maybe_type_quals_attrs .
  398           | '*' maybe_type_quals_attrs . absdcl1_ea

    IDENTIFIER  shift, and go to state 100
    TYPENAME    shift, and go to state 766
    '*'         shift, and go to state 767
    '('         shift, and go to state 768
    '['         shift, and go to state 301
    OBJECTNAME  shift, and go to state 769

    $default  reduce using rule 397 (absdcl1_ea)

    parm_declarator_starttypename    go to state 930
    parm_declarator_nostarttypename  go to state 931
    notype_declarator                go to state 431
    absdcl1_noea                     go to state 723
    absdcl1_ea                       go to state 724
    direct_absdcl1                   go to state 428
    array_declarator                 go to state 429


state 856

  335 parm_declarator_nostarttypename: '(' maybe_attribute . parm_declarator_nostarttypename ')'
  337 notype_declarator: '(' maybe_attribute . notype_declarator ')'
  399 direct_absdcl1: '(' maybe_attribute . absdcl1 ')'
  503 parmlist: maybe_attribute . parmlist_1

    error         shift, and go to state 614
    IDENTIFIER    shift, and go to state 100
    TYPENAME      shift, and go to state 2
    SCSPEC        shift, and go to state 3
    STATIC        shift, and go to state 4
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 6
    ELLIPSIS      shift, and go to state 616
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ARITHCOMPARE  shift, and go to state 14
    '*'           shift, and go to state 767
    '('           shift, and go to state 768
    '['           shift, and go to state 301
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    ')'  reduce using rule 507 (parmlist_2)

    typeof                           go to state 32
    declspecs_nosc_nots_nosa_noea    go to state 513
    declspecs_nosc_nots_nosa_ea      go to state 514
    declspecs_nosc_ts_nosa_noea      go to state 515
    declspecs_nosc_ts_nosa_ea        go to state 516
    declspecs_sc_nots_nosa_noea      go to state 517
    declspecs_sc_nots_nosa_ea        go to state 518
    declspecs_sc_ts_nosa_noea        go to state 519
    declspecs_sc_ts_nosa_ea          go to state 520
    declspecs_ts_nosa                go to state 521
    declspecs_nots_nosa              go to state 522
    typespec_nonattr                 go to state 53
    typespec_attr                    go to state 54
    typespec_reserved_nonattr        go to state 55
    typespec_reserved_attr           go to state 56
    typespec_nonreserved_nonattr     go to state 57
    scspec                           go to state 60
    parm_declarator_nostarttypename  go to state 932
    notype_declarator                go to state 432
    struct_head                      go to state 61
    union_head                       go to state 62
    enum_head                        go to state 63
    structsp_attr                    go to state 64
    structsp_nonattr                 go to state 65
    absdcl1                          go to state 725
    absdcl1_noea                     go to state 426
    absdcl1_ea                       go to state 427
    direct_absdcl1                   go to state 428
    array_declarator                 go to state 429
    parmlist_1                       go to state 726
    parmlist_2                       go to state 618
    parms                            go to state 619
    firstparm                        go to state 525
    non_empty_protocolrefs           go to state 72


state 857

  603 myparm: parm_declarator maybe_attribute .

    $default  reduce using rule 603 (myparm)


state 858

  327 parm_declarator_starttypename: parm_declarator_starttypename '(' . parmlist_or_identifiers

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 278 (maybe_attribute)

    maybe_attribute          go to state 437
    attributes               go to state 295
    attribute                go to state 59
    parmlist_or_identifiers  go to state 933


state 859

  328 parm_declarator_starttypename: parm_declarator_starttypename array_declarator .

    $default  reduce using rule 328 (parm_declarator_starttypename)


state 860

  331 parm_declarator_nostarttypename: parm_declarator_nostarttypename '(' . parmlist_or_identifiers

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 278 (maybe_attribute)

    maybe_attribute          go to state 437
    attributes               go to state 295
    attribute                go to state 59
    parmlist_or_identifiers  go to state 934


state 861

  332 parm_declarator_nostarttypename: parm_declarator_nostarttypename array_declarator .

    $default  reduce using rule 332 (parm_declarator_nostarttypename)


state 862

  604 myparm: notype_declarator maybe_attribute .

    $default  reduce using rule 604 (myparm)


state 863

  281 attributes: attributes . attribute
  392 absdcl_maybe_attribute: absdcl1_noea attributes .

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 392 (absdcl_maybe_attribute)

    attribute  go to state 181


state 864

  598 mydecl: declspecs_ts setspecs myparms ';' .

    $default  reduce using rule 598 (mydecl)


state 865

  602 myparms: myparms ',' . myparm

    IDENTIFIER  shift, and go to state 100
    TYPENAME    shift, and go to state 766
    '*'         shift, and go to state 767
    '('         shift, and go to state 768
    '['         shift, and go to state 301
    OBJECTNAME  shift, and go to state 769

    $default  reduce using rule 390 (absdcl_maybe_attribute)

    parm_declarator                  go to state 770
    parm_declarator_starttypename    go to state 771
    parm_declarator_nostarttypename  go to state 772
    notype_declarator                go to state 773
    absdcl_maybe_attribute           go to state 774
    absdcl1                          go to state 775
    absdcl1_noea                     go to state 776
    absdcl1_ea                       go to state 427
    direct_absdcl1                   go to state 428
    array_declarator                 go to state 429
    myparm                           go to state 935


state 866

  518 firstparm: declspecs_ts_nosa setspecs_fp parm_declarator maybe_attribute .

    $default  reduce using rule 518 (firstparm)


state 867

  519 firstparm: declspecs_ts_nosa setspecs_fp notype_declarator maybe_attribute .

    $default  reduce using rule 519 (firstparm)


state 868

  338 notype_declarator: '*' maybe_type_quals_attrs . notype_declarator
  396 absdcl1_noea: '*' maybe_type_quals_attrs . absdcl1_noea
  397 absdcl1_ea: '*' maybe_type_quals_attrs .
  398           | '*' maybe_type_quals_attrs . absdcl1_ea

    IDENTIFIER  shift, and go to state 100
    '*'         shift, and go to state 782
    '('         shift, and go to state 783
    '['         shift, and go to state 301

    $default  reduce using rule 397 (absdcl1_ea)

    notype_declarator  go to state 431
    absdcl1_noea       go to state 723
    absdcl1_ea         go to state 724
    direct_absdcl1     go to state 428
    array_declarator   go to state 429


state 869

  337 notype_declarator: '(' maybe_attribute . notype_declarator ')'
  399 direct_absdcl1: '(' maybe_attribute . absdcl1 ')'
  503 parmlist: maybe_attribute . parmlist_1

    error         shift, and go to state 614
    IDENTIFIER    shift, and go to state 100
    TYPENAME      shift, and go to state 2
    SCSPEC        shift, and go to state 3
    STATIC        shift, and go to state 4
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 6
    ELLIPSIS      shift, and go to state 616
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ARITHCOMPARE  shift, and go to state 14
    '*'           shift, and go to state 782
    '('           shift, and go to state 783
    '['           shift, and go to state 301
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22

    ')'  reduce using rule 507 (parmlist_2)

    typeof                         go to state 32
    declspecs_nosc_nots_nosa_noea  go to state 513
    declspecs_nosc_nots_nosa_ea    go to state 514
    declspecs_nosc_ts_nosa_noea    go to state 515
    declspecs_nosc_ts_nosa_ea      go to state 516
    declspecs_sc_nots_nosa_noea    go to state 517
    declspecs_sc_nots_nosa_ea      go to state 518
    declspecs_sc_ts_nosa_noea      go to state 519
    declspecs_sc_ts_nosa_ea        go to state 520
    declspecs_ts_nosa              go to state 521
    declspecs_nots_nosa            go to state 522
    typespec_nonattr               go to state 53
    typespec_attr                  go to state 54
    typespec_reserved_nonattr      go to state 55
    typespec_reserved_attr         go to state 56
    typespec_nonreserved_nonattr   go to state 57
    scspec                         go to state 60
    notype_declarator              go to state 432
    struct_head                    go to state 61
    union_head                     go to state 62
    enum_head                      go to state 63
    structsp_attr                  go to state 64
    structsp_nonattr               go to state 65
    absdcl1                        go to state 725
    absdcl1_noea                   go to state 426
    absdcl1_ea                     go to state 427
    direct_absdcl1                 go to state 428
    array_declarator               go to state 429
    parmlist_1                     go to state 726
    parmlist_2                     go to state 618
    parms                          go to state 619
    firstparm                      go to state 525
    non_empty_protocolrefs         go to state 72


state 870

  521 firstparm: declspecs_nots_nosa setspecs_fp notype_declarator maybe_attribute .

    $default  reduce using rule 521 (firstparm)


state 871

  513 parm: declspecs_ts setspecs . parm_declarator maybe_attribute
  514     | declspecs_ts setspecs . notype_declarator maybe_attribute
  515     | declspecs_ts setspecs . absdcl_maybe_attribute

    IDENTIFIER  shift, and go to state 100
    TYPENAME    shift, and go to state 766
    '*'         shift, and go to state 767
    '('         shift, and go to state 768
    '['         shift, and go to state 301
    OBJECTNAME  shift, and go to state 769

    $default  reduce using rule 390 (absdcl_maybe_attribute)

    parm_declarator                  go to state 936
    parm_declarator_starttypename    go to state 771
    parm_declarator_nostarttypename  go to state 772
    notype_declarator                go to state 937
    absdcl_maybe_attribute           go to state 938
    absdcl1                          go to state 775
    absdcl1_noea                     go to state 776
    absdcl1_ea                       go to state 427
    direct_absdcl1                   go to state 428
    array_declarator                 go to state 429


state 872

  516 parm: declspecs_nots setspecs . notype_declarator maybe_attribute
  517     | declspecs_nots setspecs . absdcl_maybe_attribute

    IDENTIFIER  shift, and go to state 100
    '*'         shift, and go to state 782
    '('         shift, and go to state 783
    '['         shift, and go to state 301

    $default  reduce using rule 390 (absdcl_maybe_attribute)

    notype_declarator       go to state 939
    absdcl_maybe_attribute  go to state 940
    absdcl1                 go to state 775
    absdcl1_noea            go to state 776
    absdcl1_ea              go to state 427
    direct_absdcl1          go to state 428
    array_declarator        go to state 429


state 873

  638 keyworddecl: selector ':' '(' typename ')' identifier .

    $default  reduce using rule 638 (keyworddecl)


state 874

   85 primary: VA_ARG '(' expr_no_commas ',' typename ')' .

    $default  reduce using rule 85 (primary)


state 875

   86 primary: CHOOSE_EXPR '(' expr_no_commas ',' expr_no_commas ',' . expr_no_commas ')'

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 941
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 876

   87 primary: TYPES_COMPATIBLE_P '(' typename ',' typename ')' .

    $default  reduce using rule 87 (primary)


state 877

  312 designator: '.' identifier .

    $default  reduce using rule 312 (designator)


state 878

   38 nonnull_exprlist: expr_no_commas .
   57 expr_no_commas: expr_no_commas . '+' expr_no_commas
   58               | expr_no_commas . '-' expr_no_commas
   59               | expr_no_commas . '*' expr_no_commas
   60               | expr_no_commas . '/' expr_no_commas
   61               | expr_no_commas . '%' expr_no_commas
   62               | expr_no_commas . LSHIFT expr_no_commas
   63               | expr_no_commas . RSHIFT expr_no_commas
   64               | expr_no_commas . ARITHCOMPARE expr_no_commas
   65               | expr_no_commas . EQCOMPARE expr_no_commas
   66               | expr_no_commas . '&' expr_no_commas
   67               | expr_no_commas . '|' expr_no_commas
   68               | expr_no_commas . '^' expr_no_commas
   69               | expr_no_commas . ANDAND expr_no_commas
   70               | expr_no_commas . OROR expr_no_commas
   71               | expr_no_commas . '?' expr ':' expr_no_commas
   72               | expr_no_commas . '?' ':' expr_no_commas
   73               | expr_no_commas . '=' expr_no_commas
   74               | expr_no_commas . ASSIGN expr_no_commas
  313 designator: '[' expr_no_commas . ELLIPSIS expr_no_commas ']'
  314           | '[' expr_no_commas . ']'

    ELLIPSIS      shift, and go to state 942
    '='           shift, and go to state 367
    ASSIGN        shift, and go to state 368
    '?'           shift, and go to state 369
    OROR          shift, and go to state 370
    ANDAND        shift, and go to state 371
    '|'           shift, and go to state 372
    '^'           shift, and go to state 373
    '&'           shift, and go to state 374
    EQCOMPARE     shift, and go to state 375
    ARITHCOMPARE  shift, and go to state 376
    RSHIFT        shift, and go to state 377
    LSHIFT        shift, and go to state 378
    '+'           shift, and go to state 379
    '-'           shift, and go to state 380
    '*'           shift, and go to state 381
    '/'           shift, and go to state 382
    '%'           shift, and go to state 383
    ']'           shift, and go to state 943

    $default  reduce using rule 38 (nonnull_exprlist)


state 879

  307 initval: '{' initlist_maybe_comma . '}'

    '}'  shift, and go to state 944


state 880

  305 initelt: identifier ':' . initval

    error               shift, and go to state 794
    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '{'                 shift, and go to state 798
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 800
    primary                 go to state 256
    objc_string             go to state 257
    initval                 go to state 945
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 881

   79 primary: '(' typename ')' '{' initlist_maybe_comma '}' .

    $default  reduce using rule 79 (primary)


state 882

  302 initlist1: initlist1 ',' . initelt
  357 maybecomma: ',' .

    error               shift, and go to state 794
    IDENTIFIER          shift, and go to state 795
    TYPENAME            shift, and go to state 83
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '.'                 shift, and go to state 796
    '('                 shift, and go to state 240
    '['                 shift, and go to state 797
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    CLASSNAME           shift, and go to state 84
    PROTOCOL            shift, and go to state 244
    OBJECTNAME          shift, and go to state 85
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '{'                 shift, and go to state 798
    '@'                 shift, and go to state 247

    '}'  reduce using rule 357 (maybecomma)

    identifier              go to state 799
    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 800
    primary                 go to state 256
    objc_string             go to state 257
    initelt                 go to state 946
    initval                 go to state 804
    designator_list         go to state 805
    designator              go to state 806
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 883

  300 initlist_maybe_comma: initlist1 maybecomma .

    $default  reduce using rule 300 (initlist_maybe_comma)


state 884

  303 initelt: designator_list '=' . initval

    error               shift, and go to state 794
    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '{'                 shift, and go to state 798
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 800
    primary                 go to state 256
    objc_string             go to state 257
    initval                 go to state 947
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 885

  313 designator: '[' . expr_no_commas ELLIPSIS expr_no_commas ']'
  314           | '[' . expr_no_commas ']'

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 948
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 886

  311 designator_list: designator_list designator .

    $default  reduce using rule 311 (designator_list)


state 887

  304 initelt: designator initval .

    $default  reduce using rule 304 (initelt)


state 888

  530 identifiers_or_typenames: identifiers_or_typenames ',' identifier .

    $default  reduce using rule 530 (identifiers_or_typenames)


state 889

  461 lineno_stmt: save_filename save_lineno . stmt
  462 lineno_label: save_filename save_lineno . label

    IDENTIFIER          shift, and go to state 795
    TYPENAME            shift, and go to state 83
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    CASE                shift, and go to state 892
    DEFAULT             shift, and go to state 893
    BREAK               shift, and go to state 894
    CONTINUE            shift, and go to state 895
    RETURN              shift, and go to state 896
    GOTO                shift, and go to state 897
    ASM_KEYWORD         shift, and go to state 898
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    CLASSNAME           shift, and go to state 84
    PROTOCOL            shift, and go to state 244
    OBJECTNAME          shift, and go to state 85
    ';'                 shift, and go to state 901
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '{'                 shift, and go to state 508
    '@'                 shift, and go to state 247

    $default  reduce using rule 436 (c99_block_start)

    identifier              go to state 902
    unop                    go to state 248
    expr                    go to state 903
    nonnull_exprlist        go to state 250
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 255
    primary                 go to state 256
    objc_string             go to state 257
    c99_block_start         go to state 908
    compstmt_start          go to state 510
    compstmt_primary_start  go to state 258
    compstmt                go to state 909
    stmt                    go to state 910
    label                   go to state 911
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 890

  447 compstmt_nostart: pushlevel maybe_label_decls compstmt_contents_nonempty '}' poplevel .

    $default  reduce using rule 447 (compstmt_nostart)


state 891

   25 identifier: TYPENAME .
  262 typespec_nonreserved_nonattr: TYPENAME .

    ':'       reduce using rule 25 (identifier)
    $default  reduce using rule 262 (typespec_nonreserved_nonattr)


state 892

  487 label: CASE . expr_no_commas ':'
  488      | CASE . expr_no_commas ELLIPSIS expr_no_commas ':'

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 949
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 893

  489 label: DEFAULT . ':'

    ':'  shift, and go to state 950


state 894

  476 stmt: BREAK . ';'

    ';'  shift, and go to state 951


state 895

  477 stmt: CONTINUE . ';'

    ';'  shift, and go to state 952


state 896

  478 stmt: RETURN . ';'
  479     | RETURN . expr ';'

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    ';'                 shift, and go to state 953
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    expr                    go to state 954
    nonnull_exprlist        go to state 250
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 255
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 897

  484 stmt: GOTO . identifier ';'
  485     | GOTO . '*' expr ';'

    IDENTIFIER  shift, and go to state 82
    TYPENAME    shift, and go to state 83
    '*'         shift, and go to state 955
    CLASSNAME   shift, and go to state 84
    OBJECTNAME  shift, and go to state 85

    identifier  go to state 956


state 898

  480 stmt: ASM_KEYWORD . maybe_type_qual '(' expr ')' ';'
  481     | ASM_KEYWORD . maybe_type_qual '(' expr ':' asm_operands ')' ';'
  482     | ASM_KEYWORD . maybe_type_qual '(' expr ':' asm_operands ':' asm_operands ')' ';'
  483     | ASM_KEYWORD . maybe_type_qual '(' expr ':' asm_operands ':' asm_operands ':' asm_clobbers ')' ';'

    TYPE_QUAL  shift, and go to state 957

    $default  reduce using rule 491 (maybe_type_qual)

    maybe_type_qual  go to state 958


state 899

   27 identifier: CLASSNAME .
  263 typespec_nonreserved_nonattr: CLASSNAME . protocolrefs

    ARITHCOMPARE  shift, and go to state 14

    ':'       reduce using rule 27 (identifier)
    $default  reduce using rule 554 (protocolrefs)

    protocolrefs            go to state 90
    non_empty_protocolrefs  go to state 91


state 900

   26 identifier: OBJECTNAME .
  264 typespec_nonreserved_nonattr: OBJECTNAME . protocolrefs

    ARITHCOMPARE  shift, and go to state 14

    ':'       reduce using rule 26 (identifier)
    $default  reduce using rule 554 (protocolrefs)

    protocolrefs            go to state 94
    non_empty_protocolrefs  go to state 91


state 901

  486 stmt: ';' .

    $default  reduce using rule 486 (stmt)


state 902

  490 label: identifier . save_filename save_lineno ':' maybe_attribute

    $default  reduce using rule 456 (save_filename)

    save_filename  go to state 959


state 903

  474 stmt: expr . ';'

    ';'  shift, and go to state 960


state 904

  112 lineno_decl: save_filename save_lineno decl .

    $default  reduce using rule 112 (lineno_decl)


state 905

  115 decl: declspecs_ts . setspecs initdecls ';'
  117     | declspecs_ts . setspecs nested_function

    $default  reduce using rule 113 (setspecs)

    setspecs  go to state 961


state 906

  116 decl: declspecs_nots . setspecs notype_initdecls ';'
  118     | declspecs_nots . setspecs notype_nested_function

    $default  reduce using rule 113 (setspecs)

    setspecs  go to state 962


state 907

  119 decl: declspecs . ';'

    ';'  shift, and go to state 963


state 908

  475 stmt: c99_block_start . select_or_iter_stmt c99_block_end

    IF      shift, and go to state 964
    WHILE   shift, and go to state 965
    DO      shift, and go to state 966
    FOR     shift, and go to state 967
    SWITCH  shift, and go to state 968

    simple_if            go to state 969
    if_prefix            go to state 970
    do_stmt_start        go to state 971
    select_or_iter_stmt  go to state 972


state 909

  473 stmt: compstmt .

    $default  reduce using rule 473 (stmt)


state 910

  461 lineno_stmt: save_filename save_lineno stmt .

    $default  reduce using rule 461 (lineno_stmt)


state 911

  462 lineno_label: save_filename save_lineno label .

    $default  reduce using rule 462 (lineno_label)


state 912

   42 unary_expr: extension . cast_expr
  120 decl: extension . decl

    IDENTIFIER          shift, and go to state 222
    TYPENAME            shift, and go to state 2
    SCSPEC              shift, and go to state 3
    STATIC              shift, and go to state 4
    TYPESPEC            shift, and go to state 5
    TYPE_QUAL           shift, and go to state 6
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ENUM                shift, and go to state 7
    STRUCT              shift, and go to state 8
    UNION               shift, and go to state 9
    TYPEOF              shift, and go to state 11
    ALIGNOF             shift, and go to state 226
    ATTRIBUTE           shift, and go to state 12
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    ARITHCOMPARE        shift, and go to state 14
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    CLASSNAME           shift, and go to state 20
    PROTOCOL            shift, and go to state 244
    OBJECTNAME          shift, and go to state 22
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                           go to state 248
    unary_expr                     go to state 251
    sizeof                         go to state 252
    alignof                        go to state 253
    typeof                         go to state 32
    cast_expr                      go to state 395
    primary                        go to state 256
    objc_string                    go to state 257
    decl                           go to state 973
    declspecs_nosc_nots_nosa_noea  go to state 34
    declspecs_nosc_nots_nosa_ea    go to state 35
    declspecs_nosc_nots_sa_noea    go to state 36
    declspecs_nosc_nots_sa_ea      go to state 37
    declspecs_nosc_ts_nosa_noea    go to state 38
    declspecs_nosc_ts_nosa_ea      go to state 39
    declspecs_nosc_ts_sa_noea      go to state 40
    declspecs_nosc_ts_sa_ea        go to state 41
    declspecs_sc_nots_nosa_noea    go to state 42
    declspecs_sc_nots_nosa_ea      go to state 43
    declspecs_sc_nots_sa_noea      go to state 44
    declspecs_sc_nots_sa_ea        go to state 45
    declspecs_sc_ts_nosa_noea      go to state 46
    declspecs_sc_ts_nosa_ea        go to state 47
    declspecs_sc_ts_sa_noea        go to state 48
    declspecs_sc_ts_sa_ea          go to state 49
    declspecs_ts                   go to state 905
    declspecs_nots                 go to state 906
    declspecs                      go to state 907
    typespec_nonattr               go to state 53
    typespec_attr                  go to state 54
    typespec_reserved_nonattr      go to state 55
    typespec_reserved_attr         go to state 56
    typespec_nonreserved_nonattr   go to state 57
    attributes                     go to state 58
    attribute                      go to state 59
    scspec                         go to state 60
    struct_head                    go to state 61
    union_head                     go to state 62
    enum_head                      go to state 63
    structsp_attr                  go to state 64
    structsp_nonattr               go to state 65
    compstmt_primary_start         go to state 258
    extension                      go to state 912
    non_empty_protocolrefs         go to state 72
    objcmessageexpr                go to state 260
    objcselectorexpr               go to state 261
    objcprotocolexpr               go to state 262
    objcencodeexpr                 go to state 263


state 913

   39 nonnull_exprlist: nonnull_exprlist . ',' expr_no_commas
  288 attrib: any_word '(' IDENTIFIER ',' nonnull_exprlist . ')'

    ')'  shift, and go to state 974
    ','  shift, and go to state 362


state 914

  544 classdef: INTERFACE identifier ':' identifier protocolrefs '{' ivar_decl_list '}' . methodprotolist END

    error         shift, and go to state 1
    TYPENAME      shift, and go to state 2
    SCSPEC        shift, and go to state 3
    STATIC        shift, and go to state 4
    TYPESPEC      shift, and go to state 5
    TYPE_QUAL     shift, and go to state 6
    ENUM          shift, and go to state 7
    STRUCT        shift, and go to state 8
    UNION         shift, and go to state 9
    TYPEOF        shift, and go to state 11
    ATTRIBUTE     shift, and go to state 12
    ARITHCOMPARE  shift, and go to state 14
    '+'           shift, and go to state 15
    '-'           shift, and go to state 16
    CLASSNAME     shift, and go to state 20
    OBJECTNAME    shift, and go to state 22
    ';'           shift, and go to state 25

    IDENTIFIER  reduce using rule 113 (setspecs)
    '*'         reduce using rule 113 (setspecs)
    '('         reduce using rule 113 (setspecs)
    END         reduce using rule 577 (methodprotolist)

    datadef                        go to state 407
    typeof                         go to state 32
    setspecs                       go to state 408
    declspecs_nosc_nots_nosa_noea  go to state 34
    declspecs_nosc_nots_nosa_ea    go to state 35
    declspecs_nosc_nots_sa_noea    go to state 36
    declspecs_nosc_nots_sa_ea      go to state 37
    declspecs_nosc_ts_nosa_noea    go to state 38
    declspecs_nosc_ts_nosa_ea      go to state 39
    declspecs_nosc_ts_sa_noea      go to state 40
    declspecs_nosc_ts_sa_ea        go to state 41
    declspecs_sc_nots_nosa_noea    go to state 42
    declspecs_sc_nots_nosa_ea      go to state 43
    declspecs_sc_nots_sa_noea      go to state 44
    declspecs_sc_nots_sa_ea        go to state 45
    declspecs_sc_ts_nosa_noea      go to state 46
    declspecs_sc_ts_nosa_ea        go to state 47
    declspecs_sc_ts_sa_noea        go to state 48
    declspecs_sc_ts_sa_ea          go to state 49
    declspecs_ts                   go to state 409
    declspecs_nots                 go to state 410
    declspecs                      go to state 52
    typespec_nonattr               go to state 53
    typespec_attr                  go to state 54
    typespec_reserved_nonattr      go to state 55
    typespec_reserved_attr         go to state 56
    typespec_nonreserved_nonattr   go to state 57
    attributes                     go to state 58
    attribute                      go to state 59
    scspec                         go to state 60
    struct_head                    go to state 61
    union_head                     go to state 62
    enum_head                      go to state 63
    structsp_attr                  go to state 64
    structsp_nonattr               go to state 65
    non_empty_protocolrefs         go to state 72
    methodtype                     go to state 411
    methodprotolist                go to state 975
    methodprotolist2               go to state 413
    methodproto                    go to state 414


state 915

  550 classdef: INTERFACE identifier '(' identifier ')' protocolrefs methodprotolist END .

    $default  reduce using rule 550 (classdef)


state 916

  542 classdef: INTERFACE identifier protocolrefs '{' ivar_decl_list '}' methodprotolist END .

    $default  reduce using rule 542 (classdef)


state 917

   57 expr_no_commas: expr_no_commas . '+' expr_no_commas
   58               | expr_no_commas . '-' expr_no_commas
   59               | expr_no_commas . '*' expr_no_commas
   60               | expr_no_commas . '/' expr_no_commas
   61               | expr_no_commas . '%' expr_no_commas
   62               | expr_no_commas . LSHIFT expr_no_commas
   63               | expr_no_commas . RSHIFT expr_no_commas
   64               | expr_no_commas . ARITHCOMPARE expr_no_commas
   65               | expr_no_commas . EQCOMPARE expr_no_commas
   66               | expr_no_commas . '&' expr_no_commas
   67               | expr_no_commas . '|' expr_no_commas
   68               | expr_no_commas . '^' expr_no_commas
   69               | expr_no_commas . ANDAND expr_no_commas
   70               | expr_no_commas . OROR expr_no_commas
   71               | expr_no_commas . '?' expr ':' expr_no_commas
   72               | expr_no_commas . '?' ':' expr_no_commas
   73               | expr_no_commas . '=' expr_no_commas
   74               | expr_no_commas . ASSIGN expr_no_commas
  573 ivar_declarator: ':' expr_no_commas .

    '='           shift, and go to state 367
    ASSIGN        shift, and go to state 368
    '?'           shift, and go to state 369
    OROR          shift, and go to state 370
    ANDAND        shift, and go to state 371
    '|'           shift, and go to state 372
    '^'           shift, and go to state 373
    '&'           shift, and go to state 374
    EQCOMPARE     shift, and go to state 375
    ARITHCOMPARE  shift, and go to state 376
    RSHIFT        shift, and go to state 377
    LSHIFT        shift, and go to state 378
    '+'           shift, and go to state 379
    '-'           shift, and go to state 380
    '*'           shift, and go to state 381
    '/'           shift, and go to state 382
    '%'           shift, and go to state 383

    $default  reduce using rule 573 (ivar_declarator)


state 918

  572 ivar_declarator: declarator ':' . expr_no_commas

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 976
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 919

  570 ivars: ivars ',' . maybe_resetattrs ivar_declarator

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 278 (maybe_attribute)

    maybe_resetattrs  go to state 977
    maybe_attribute   go to state 434
    attributes        go to state 295
    attribute         go to state 59


state 920

  505 parmlist_1: parms ';' maybe_attribute parmlist_1 .

    $default  reduce using rule 505 (parmlist_1)


state 921

  297 init: '{' initlist_maybe_comma '}' .

    $default  reduce using rule 297 (init)


state 922

  108 datadecl: declspecs_ts_nosa setspecs initdecls ';' .

    $default  reduce using rule 108 (datadecl)


state 923

  109 datadecl: declspecs_nots_nosa setspecs notype_initdecls ';' .

    $default  reduce using rule 109 (datadecl)


state 924

  373 components: components ',' maybe_resetattrs . component_declarator

    $default  reduce using rule 456 (save_filename)

    component_declarator  go to state 978
    save_filename         go to state 979


state 925

  378 component_declarator: save_filename save_lineno ':' . expr_no_commas maybe_attribute

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 980
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 926

  376 component_declarator: save_filename save_lineno declarator . maybe_attribute
  377                     | save_filename save_lineno declarator . ':' expr_no_commas maybe_attribute

    ATTRIBUTE  shift, and go to state 12
    ':'        shift, and go to state 981

    $default  reduce using rule 278 (maybe_attribute)

    maybe_attribute  go to state 982
    attributes       go to state 295
    attribute        go to state 59


state 927

  375 components_notype: components_notype ',' maybe_resetattrs . component_notype_declarator

    $default  reduce using rule 456 (save_filename)

    component_notype_declarator  go to state 983
    save_filename                go to state 759


state 928

  381 component_notype_declarator: save_filename save_lineno ':' . expr_no_commas maybe_attribute

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 984
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 929

  336 notype_declarator: notype_declarator . '(' parmlist_or_identifiers
  339                  | notype_declarator . array_declarator
  379 component_notype_declarator: save_filename save_lineno notype_declarator . maybe_attribute
  380                            | save_filename save_lineno notype_declarator . ':' expr_no_commas maybe_attribute

    ATTRIBUTE  shift, and go to state 12
    ':'        shift, and go to state 985
    '('        shift, and go to state 300
    '['        shift, and go to state 301

    $default  reduce using rule 278 (maybe_attribute)

    maybe_attribute   go to state 986
    attributes        go to state 295
    attribute         go to state 59
    array_declarator  go to state 307


state 930

  327 parm_declarator_starttypename: parm_declarator_starttypename . '(' parmlist_or_identifiers
  328                              | parm_declarator_starttypename . array_declarator
  333 parm_declarator_nostarttypename: '*' maybe_type_quals_attrs parm_declarator_starttypename .

    '('  shift, and go to state 858
    '['  shift, and go to state 301

    $default  reduce using rule 333 (parm_declarator_nostarttypename)

    array_declarator  go to state 859


state 931

  331 parm_declarator_nostarttypename: parm_declarator_nostarttypename . '(' parmlist_or_identifiers
  332                                | parm_declarator_nostarttypename . array_declarator
  334                                | '*' maybe_type_quals_attrs parm_declarator_nostarttypename .

    '('  shift, and go to state 860
    '['  shift, and go to state 301

    $default  reduce using rule 334 (parm_declarator_nostarttypename)

    array_declarator  go to state 861


state 932

  331 parm_declarator_nostarttypename: parm_declarator_nostarttypename . '(' parmlist_or_identifiers
  332                                | parm_declarator_nostarttypename . array_declarator
  335                                | '(' maybe_attribute parm_declarator_nostarttypename . ')'

    '('  shift, and go to state 860
    '['  shift, and go to state 301
    ')'  shift, and go to state 987

    array_declarator  go to state 861


state 933

  327 parm_declarator_starttypename: parm_declarator_starttypename '(' parmlist_or_identifiers .

    $default  reduce using rule 327 (parm_declarator_starttypename)


state 934

  331 parm_declarator_nostarttypename: parm_declarator_nostarttypename '(' parmlist_or_identifiers .

    $default  reduce using rule 331 (parm_declarator_nostarttypename)


state 935

  602 myparms: myparms ',' myparm .

    $default  reduce using rule 602 (myparms)


state 936

  513 parm: declspecs_ts setspecs parm_declarator . maybe_attribute

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 278 (maybe_attribute)

    maybe_attribute  go to state 988
    attributes       go to state 295
    attribute        go to state 59


state 937

  336 notype_declarator: notype_declarator . '(' parmlist_or_identifiers
  339                  | notype_declarator . array_declarator
  514 parm: declspecs_ts setspecs notype_declarator . maybe_attribute

    ATTRIBUTE  shift, and go to state 12
    '('        shift, and go to state 300
    '['        shift, and go to state 301

    $default  reduce using rule 278 (maybe_attribute)

    maybe_attribute   go to state 989
    attributes        go to state 295
    attribute         go to state 59
    array_declarator  go to state 307


state 938

  515 parm: declspecs_ts setspecs absdcl_maybe_attribute .

    $default  reduce using rule 515 (parm)


state 939

  336 notype_declarator: notype_declarator . '(' parmlist_or_identifiers
  339                  | notype_declarator . array_declarator
  516 parm: declspecs_nots setspecs notype_declarator . maybe_attribute

    ATTRIBUTE  shift, and go to state 12
    '('        shift, and go to state 300
    '['        shift, and go to state 301

    $default  reduce using rule 278 (maybe_attribute)

    maybe_attribute   go to state 990
    attributes        go to state 295
    attribute         go to state 59
    array_declarator  go to state 307


state 940

  517 parm: declspecs_nots setspecs absdcl_maybe_attribute .

    $default  reduce using rule 517 (parm)


state 941

   57 expr_no_commas: expr_no_commas . '+' expr_no_commas
   58               | expr_no_commas . '-' expr_no_commas
   59               | expr_no_commas . '*' expr_no_commas
   60               | expr_no_commas . '/' expr_no_commas
   61               | expr_no_commas . '%' expr_no_commas
   62               | expr_no_commas . LSHIFT expr_no_commas
   63               | expr_no_commas . RSHIFT expr_no_commas
   64               | expr_no_commas . ARITHCOMPARE expr_no_commas
   65               | expr_no_commas . EQCOMPARE expr_no_commas
   66               | expr_no_commas . '&' expr_no_commas
   67               | expr_no_commas . '|' expr_no_commas
   68               | expr_no_commas . '^' expr_no_commas
   69               | expr_no_commas . ANDAND expr_no_commas
   70               | expr_no_commas . OROR expr_no_commas
   71               | expr_no_commas . '?' expr ':' expr_no_commas
   72               | expr_no_commas . '?' ':' expr_no_commas
   73               | expr_no_commas . '=' expr_no_commas
   74               | expr_no_commas . ASSIGN expr_no_commas
   86 primary: CHOOSE_EXPR '(' expr_no_commas ',' expr_no_commas ',' expr_no_commas . ')'

    '='           shift, and go to state 367
    ASSIGN        shift, and go to state 368
    '?'           shift, and go to state 369
    OROR          shift, and go to state 370
    ANDAND        shift, and go to state 371
    '|'           shift, and go to state 372
    '^'           shift, and go to state 373
    '&'           shift, and go to state 374
    EQCOMPARE     shift, and go to state 375
    ARITHCOMPARE  shift, and go to state 376
    RSHIFT        shift, and go to state 377
    LSHIFT        shift, and go to state 378
    '+'           shift, and go to state 379
    '-'           shift, and go to state 380
    '*'           shift, and go to state 381
    '/'           shift, and go to state 382
    '%'           shift, and go to state 383
    ')'           shift, and go to state 991


state 942

  313 designator: '[' expr_no_commas ELLIPSIS . expr_no_commas ']'

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 992
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 943

  314 designator: '[' expr_no_commas ']' .

    $default  reduce using rule 314 (designator)


state 944

  307 initval: '{' initlist_maybe_comma '}' .

    $default  reduce using rule 307 (initval)


state 945

  305 initelt: identifier ':' initval .

    $default  reduce using rule 305 (initelt)


state 946

  302 initlist1: initlist1 ',' initelt .

    $default  reduce using rule 302 (initlist1)


state 947

  303 initelt: designator_list '=' initval .

    $default  reduce using rule 303 (initelt)


state 948

   57 expr_no_commas: expr_no_commas . '+' expr_no_commas
   58               | expr_no_commas . '-' expr_no_commas
   59               | expr_no_commas . '*' expr_no_commas
   60               | expr_no_commas . '/' expr_no_commas
   61               | expr_no_commas . '%' expr_no_commas
   62               | expr_no_commas . LSHIFT expr_no_commas
   63               | expr_no_commas . RSHIFT expr_no_commas
   64               | expr_no_commas . ARITHCOMPARE expr_no_commas
   65               | expr_no_commas . EQCOMPARE expr_no_commas
   66               | expr_no_commas . '&' expr_no_commas
   67               | expr_no_commas . '|' expr_no_commas
   68               | expr_no_commas . '^' expr_no_commas
   69               | expr_no_commas . ANDAND expr_no_commas
   70               | expr_no_commas . OROR expr_no_commas
   71               | expr_no_commas . '?' expr ':' expr_no_commas
   72               | expr_no_commas . '?' ':' expr_no_commas
   73               | expr_no_commas . '=' expr_no_commas
   74               | expr_no_commas . ASSIGN expr_no_commas
  313 designator: '[' expr_no_commas . ELLIPSIS expr_no_commas ']'
  314           | '[' expr_no_commas . ']'

    ELLIPSIS      shift, and go to state 942
    '='           shift, and go to state 367
    ASSIGN        shift, and go to state 368
    '?'           shift, and go to state 369
    OROR          shift, and go to state 370
    ANDAND        shift, and go to state 371
    '|'           shift, and go to state 372
    '^'           shift, and go to state 373
    '&'           shift, and go to state 374
    EQCOMPARE     shift, and go to state 375
    ARITHCOMPARE  shift, and go to state 376
    RSHIFT        shift, and go to state 377
    LSHIFT        shift, and go to state 378
    '+'           shift, and go to state 379
    '-'           shift, and go to state 380
    '*'           shift, and go to state 381
    '/'           shift, and go to state 382
    '%'           shift, and go to state 383
    ']'           shift, and go to state 943


state 949

   57 expr_no_commas: expr_no_commas . '+' expr_no_commas
   58               | expr_no_commas . '-' expr_no_commas
   59               | expr_no_commas . '*' expr_no_commas
   60               | expr_no_commas . '/' expr_no_commas
   61               | expr_no_commas . '%' expr_no_commas
   62               | expr_no_commas . LSHIFT expr_no_commas
   63               | expr_no_commas . RSHIFT expr_no_commas
   64               | expr_no_commas . ARITHCOMPARE expr_no_commas
   65               | expr_no_commas . EQCOMPARE expr_no_commas
   66               | expr_no_commas . '&' expr_no_commas
   67               | expr_no_commas . '|' expr_no_commas
   68               | expr_no_commas . '^' expr_no_commas
   69               | expr_no_commas . ANDAND expr_no_commas
   70               | expr_no_commas . OROR expr_no_commas
   71               | expr_no_commas . '?' expr ':' expr_no_commas
   72               | expr_no_commas . '?' ':' expr_no_commas
   73               | expr_no_commas . '=' expr_no_commas
   74               | expr_no_commas . ASSIGN expr_no_commas
  487 label: CASE expr_no_commas . ':'
  488      | CASE expr_no_commas . ELLIPSIS expr_no_commas ':'

    ELLIPSIS      shift, and go to state 993
    '='           shift, and go to state 367
    ASSIGN        shift, and go to state 368
    '?'           shift, and go to state 369
    ':'           shift, and go to state 994
    OROR          shift, and go to state 370
    ANDAND        shift, and go to state 371
    '|'           shift, and go to state 372
    '^'           shift, and go to state 373
    '&'           shift, and go to state 374
    EQCOMPARE     shift, and go to state 375
    ARITHCOMPARE  shift, and go to state 376
    RSHIFT        shift, and go to state 377
    LSHIFT        shift, and go to state 378
    '+'           shift, and go to state 379
    '-'           shift, and go to state 380
    '*'           shift, and go to state 381
    '/'           shift, and go to state 382
    '%'           shift, and go to state 383


state 950

  489 label: DEFAULT ':' .

    $default  reduce using rule 489 (label)


state 951

  476 stmt: BREAK ';' .

    $default  reduce using rule 476 (stmt)


state 952

  477 stmt: CONTINUE ';' .

    $default  reduce using rule 477 (stmt)


state 953

  478 stmt: RETURN ';' .

    $default  reduce using rule 478 (stmt)


state 954

  479 stmt: RETURN expr . ';'

    ';'  shift, and go to state 995


state 955

  485 stmt: GOTO '*' . expr ';'

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    expr                    go to state 996
    nonnull_exprlist        go to state 250
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 255
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 956

  484 stmt: GOTO identifier . ';'

    ';'  shift, and go to state 997


state 957

  492 maybe_type_qual: TYPE_QUAL .

    $default  reduce using rule 492 (maybe_type_qual)


state 958

  480 stmt: ASM_KEYWORD maybe_type_qual . '(' expr ')' ';'
  481     | ASM_KEYWORD maybe_type_qual . '(' expr ':' asm_operands ')' ';'
  482     | ASM_KEYWORD maybe_type_qual . '(' expr ':' asm_operands ':' asm_operands ')' ';'
  483     | ASM_KEYWORD maybe_type_qual . '(' expr ':' asm_operands ':' asm_operands ':' asm_clobbers ')' ';'

    '('  shift, and go to state 998


state 959

  490 label: identifier save_filename . save_lineno ':' maybe_attribute

    $default  reduce using rule 457 (save_lineno)

    save_lineno  go to state 999


state 960

  474 stmt: expr ';' .

    $default  reduce using rule 474 (stmt)


state 961

  115 decl: declspecs_ts setspecs . initdecls ';'
  117     | declspecs_ts setspecs . nested_function

    IDENTIFIER  shift, and go to state 100
    TYPENAME    shift, and go to state 310
    '*'         shift, and go to state 311
    '('         shift, and go to state 312
    OBJECTNAME  shift, and go to state 313

    initdecls              go to state 1000
    initdcl                go to state 315
    nested_function        go to state 1001
    declarator             go to state 1002
    after_type_declarator  go to state 317
    notype_declarator      go to state 318


state 962

  116 decl: declspecs_nots setspecs . notype_initdecls ';'
  118     | declspecs_nots setspecs . notype_nested_function

    IDENTIFIER  shift, and go to state 100
    '*'         shift, and go to state 101
    '('         shift, and go to state 102

    notype_initdecls        go to state 1003
    notype_initdcl          go to state 104
    notype_nested_function  go to state 1004
    notype_declarator       go to state 1005


state 963

  119 decl: declspecs ';' .

    $default  reduce using rule 119 (decl)


state 964

  454 if_prefix: IF . '(' expr ')'

    '('  shift, and go to state 1006


state 965

  466 select_or_iter_stmt: WHILE . '(' expr ')' c99_block_lineno_labeled_stmt

    '('  shift, and go to state 1007


state 966

  455 do_stmt_start: DO . c99_block_lineno_labeled_stmt WHILE

    $default  reduce using rule 436 (c99_block_start)

    c99_block_start                go to state 1008
    c99_block_lineno_labeled_stmt  go to state 1009


state 967

  469 select_or_iter_stmt: FOR . '(' for_init_stmt xexpr ';' xexpr ')' c99_block_lineno_labeled_stmt

    '('  shift, and go to state 1010


state 968

  470 select_or_iter_stmt: SWITCH . '(' expr ')' c99_block_lineno_labeled_stmt

    '('  shift, and go to state 1011


state 969

  463 select_or_iter_stmt: simple_if . ELSE c99_block_lineno_labeled_stmt
  464                    | simple_if .
  465                    | simple_if . ELSE error

    ELSE  shift, and go to state 1012

    $default  reduce using rule 464 (select_or_iter_stmt)


state 970

  452 simple_if: if_prefix . c99_block_lineno_labeled_stmt
  453          | if_prefix . error

    error  shift, and go to state 1013

    IDENTIFIER          reduce using rule 436 (c99_block_start)
    TYPENAME            reduce using rule 436 (c99_block_start)
    CONSTANT            reduce using rule 436 (c99_block_start)
    STRING              reduce using rule 436 (c99_block_start)
    SIZEOF              reduce using rule 436 (c99_block_start)
    IF                  reduce using rule 436 (c99_block_start)
    WHILE               reduce using rule 436 (c99_block_start)
    DO                  reduce using rule 436 (c99_block_start)
    FOR                 reduce using rule 436 (c99_block_start)
    SWITCH              reduce using rule 436 (c99_block_start)
    CASE                reduce using rule 436 (c99_block_start)
    DEFAULT             reduce using rule 436 (c99_block_start)
    BREAK               reduce using rule 436 (c99_block_start)
    CONTINUE            reduce using rule 436 (c99_block_start)
    RETURN              reduce using rule 436 (c99_block_start)
    GOTO                reduce using rule 436 (c99_block_start)
    ASM_KEYWORD         reduce using rule 436 (c99_block_start)
    ALIGNOF             reduce using rule 436 (c99_block_start)
    EXTENSION           reduce using rule 436 (c99_block_start)
    REALPART            reduce using rule 436 (c99_block_start)
    IMAGPART            reduce using rule 436 (c99_block_start)
    VA_ARG              reduce using rule 436 (c99_block_start)
    CHOOSE_EXPR         reduce using rule 436 (c99_block_start)
    TYPES_COMPATIBLE_P  reduce using rule 436 (c99_block_start)
    VAR_FUNC_NAME       reduce using rule 436 (c99_block_start)
    ANDAND              reduce using rule 436 (c99_block_start)
    '&'                 reduce using rule 436 (c99_block_start)
    '+'                 reduce using rule 436 (c99_block_start)
    '-'                 reduce using rule 436 (c99_block_start)
    '*'                 reduce using rule 436 (c99_block_start)
    MINUSMINUS          reduce using rule 436 (c99_block_start)
    PLUSPLUS            reduce using rule 436 (c99_block_start)
    '('                 reduce using rule 436 (c99_block_start)
    '['                 reduce using rule 436 (c99_block_start)
    SELECTOR            reduce using rule 436 (c99_block_start)
    ENCODE              reduce using rule 436 (c99_block_start)
    CLASSNAME           reduce using rule 436 (c99_block_start)
    PROTOCOL            reduce using rule 436 (c99_block_start)
    OBJECTNAME          reduce using rule 436 (c99_block_start)
    ';'                 reduce using rule 436 (c99_block_start)
    '~'                 reduce using rule 436 (c99_block_start)
    '!'                 reduce using rule 436 (c99_block_start)
    '{'                 reduce using rule 436 (c99_block_start)
    '@'                 reduce using rule 436 (c99_block_start)

    c99_block_start                go to state 1008
    c99_block_lineno_labeled_stmt  go to state 1014


state 971

  467 select_or_iter_stmt: do_stmt_start . '(' expr ')' ';'
  468                    | do_stmt_start . error

    error  shift, and go to state 1015
    '('    shift, and go to state 1016


state 972

  475 stmt: c99_block_start select_or_iter_stmt . c99_block_end

    $default  reduce using rule 437 (c99_block_end)

    c99_block_end  go to state 1017


state 973

  120 decl: extension decl .

    $default  reduce using rule 120 (decl)


state 974

  288 attrib: any_word '(' IDENTIFIER ',' nonnull_exprlist ')' .

    $default  reduce using rule 288 (attrib)


state 975

  544 classdef: INTERFACE identifier ':' identifier protocolrefs '{' ivar_decl_list '}' methodprotolist . END

    END  shift, and go to state 1018


state 976

   57 expr_no_commas: expr_no_commas . '+' expr_no_commas
   58               | expr_no_commas . '-' expr_no_commas
   59               | expr_no_commas . '*' expr_no_commas
   60               | expr_no_commas . '/' expr_no_commas
   61               | expr_no_commas . '%' expr_no_commas
   62               | expr_no_commas . LSHIFT expr_no_commas
   63               | expr_no_commas . RSHIFT expr_no_commas
   64               | expr_no_commas . ARITHCOMPARE expr_no_commas
   65               | expr_no_commas . EQCOMPARE expr_no_commas
   66               | expr_no_commas . '&' expr_no_commas
   67               | expr_no_commas . '|' expr_no_commas
   68               | expr_no_commas . '^' expr_no_commas
   69               | expr_no_commas . ANDAND expr_no_commas
   70               | expr_no_commas . OROR expr_no_commas
   71               | expr_no_commas . '?' expr ':' expr_no_commas
   72               | expr_no_commas . '?' ':' expr_no_commas
   73               | expr_no_commas . '=' expr_no_commas
   74               | expr_no_commas . ASSIGN expr_no_commas
  572 ivar_declarator: declarator ':' expr_no_commas .

    '='           shift, and go to state 367
    ASSIGN        shift, and go to state 368
    '?'           shift, and go to state 369
    OROR          shift, and go to state 370
    ANDAND        shift, and go to state 371
    '|'           shift, and go to state 372
    '^'           shift, and go to state 373
    '&'           shift, and go to state 374
    EQCOMPARE     shift, and go to state 375
    ARITHCOMPARE  shift, and go to state 376
    RSHIFT        shift, and go to state 377
    LSHIFT        shift, and go to state 378
    '+'           shift, and go to state 379
    '-'           shift, and go to state 380
    '*'           shift, and go to state 381
    '/'           shift, and go to state 382
    '%'           shift, and go to state 383

    $default  reduce using rule 572 (ivar_declarator)


state 977

  570 ivars: ivars ',' maybe_resetattrs . ivar_declarator

    IDENTIFIER  shift, and go to state 100
    TYPENAME    shift, and go to state 310
    ':'         shift, and go to state 834
    '*'         shift, and go to state 311
    '('         shift, and go to state 312
    OBJECTNAME  shift, and go to state 313

    declarator             go to state 835
    after_type_declarator  go to state 317
    notype_declarator      go to state 318
    ivar_declarator        go to state 1019


state 978

  373 components: components ',' maybe_resetattrs component_declarator .

    $default  reduce using rule 373 (components)


state 979

  376 component_declarator: save_filename . save_lineno declarator maybe_attribute
  377                     | save_filename . save_lineno declarator ':' expr_no_commas maybe_attribute
  378                     | save_filename . save_lineno ':' expr_no_commas maybe_attribute

    $default  reduce using rule 457 (save_lineno)

    save_lineno  go to state 1020


state 980

   57 expr_no_commas: expr_no_commas . '+' expr_no_commas
   58               | expr_no_commas . '-' expr_no_commas
   59               | expr_no_commas . '*' expr_no_commas
   60               | expr_no_commas . '/' expr_no_commas
   61               | expr_no_commas . '%' expr_no_commas
   62               | expr_no_commas . LSHIFT expr_no_commas
   63               | expr_no_commas . RSHIFT expr_no_commas
   64               | expr_no_commas . ARITHCOMPARE expr_no_commas
   65               | expr_no_commas . EQCOMPARE expr_no_commas
   66               | expr_no_commas . '&' expr_no_commas
   67               | expr_no_commas . '|' expr_no_commas
   68               | expr_no_commas . '^' expr_no_commas
   69               | expr_no_commas . ANDAND expr_no_commas
   70               | expr_no_commas . OROR expr_no_commas
   71               | expr_no_commas . '?' expr ':' expr_no_commas
   72               | expr_no_commas . '?' ':' expr_no_commas
   73               | expr_no_commas . '=' expr_no_commas
   74               | expr_no_commas . ASSIGN expr_no_commas
  378 component_declarator: save_filename save_lineno ':' expr_no_commas . maybe_attribute

    ATTRIBUTE     shift, and go to state 12
    '='           shift, and go to state 367
    ASSIGN        shift, and go to state 368
    '?'           shift, and go to state 369
    OROR          shift, and go to state 370
    ANDAND        shift, and go to state 371
    '|'           shift, and go to state 372
    '^'           shift, and go to state 373
    '&'           shift, and go to state 374
    EQCOMPARE     shift, and go to state 375
    ARITHCOMPARE  shift, and go to state 376
    RSHIFT        shift, and go to state 377
    LSHIFT        shift, and go to state 378
    '+'           shift, and go to state 379
    '-'           shift, and go to state 380
    '*'           shift, and go to state 381
    '/'           shift, and go to state 382
    '%'           shift, and go to state 383

    $default  reduce using rule 278 (maybe_attribute)

    maybe_attribute  go to state 1021
    attributes       go to state 295
    attribute        go to state 59


state 981

  377 component_declarator: save_filename save_lineno declarator ':' . expr_no_commas maybe_attribute

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 1022
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 982

  376 component_declarator: save_filename save_lineno declarator maybe_attribute .

    $default  reduce using rule 376 (component_declarator)


state 983

  375 components_notype: components_notype ',' maybe_resetattrs component_notype_declarator .

    $default  reduce using rule 375 (components_notype)


state 984

   57 expr_no_commas: expr_no_commas . '+' expr_no_commas
   58               | expr_no_commas . '-' expr_no_commas
   59               | expr_no_commas . '*' expr_no_commas
   60               | expr_no_commas . '/' expr_no_commas
   61               | expr_no_commas . '%' expr_no_commas
   62               | expr_no_commas . LSHIFT expr_no_commas
   63               | expr_no_commas . RSHIFT expr_no_commas
   64               | expr_no_commas . ARITHCOMPARE expr_no_commas
   65               | expr_no_commas . EQCOMPARE expr_no_commas
   66               | expr_no_commas . '&' expr_no_commas
   67               | expr_no_commas . '|' expr_no_commas
   68               | expr_no_commas . '^' expr_no_commas
   69               | expr_no_commas . ANDAND expr_no_commas
   70               | expr_no_commas . OROR expr_no_commas
   71               | expr_no_commas . '?' expr ':' expr_no_commas
   72               | expr_no_commas . '?' ':' expr_no_commas
   73               | expr_no_commas . '=' expr_no_commas
   74               | expr_no_commas . ASSIGN expr_no_commas
  381 component_notype_declarator: save_filename save_lineno ':' expr_no_commas . maybe_attribute

    ATTRIBUTE     shift, and go to state 12
    '='           shift, and go to state 367
    ASSIGN        shift, and go to state 368
    '?'           shift, and go to state 369
    OROR          shift, and go to state 370
    ANDAND        shift, and go to state 371
    '|'           shift, and go to state 372
    '^'           shift, and go to state 373
    '&'           shift, and go to state 374
    EQCOMPARE     shift, and go to state 375
    ARITHCOMPARE  shift, and go to state 376
    RSHIFT        shift, and go to state 377
    LSHIFT        shift, and go to state 378
    '+'           shift, and go to state 379
    '-'           shift, and go to state 380
    '*'           shift, and go to state 381
    '/'           shift, and go to state 382
    '%'           shift, and go to state 383

    $default  reduce using rule 278 (maybe_attribute)

    maybe_attribute  go to state 1023
    attributes       go to state 295
    attribute        go to state 59


state 985

  380 component_notype_declarator: save_filename save_lineno notype_declarator ':' . expr_no_commas maybe_attribute

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 1024
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 986

  379 component_notype_declarator: save_filename save_lineno notype_declarator maybe_attribute .

    $default  reduce using rule 379 (component_notype_declarator)


state 987

  335 parm_declarator_nostarttypename: '(' maybe_attribute parm_declarator_nostarttypename ')' .

    $default  reduce using rule 335 (parm_declarator_nostarttypename)


state 988

  513 parm: declspecs_ts setspecs parm_declarator maybe_attribute .

    $default  reduce using rule 513 (parm)


state 989

  514 parm: declspecs_ts setspecs notype_declarator maybe_attribute .

    $default  reduce using rule 514 (parm)


state 990

  516 parm: declspecs_nots setspecs notype_declarator maybe_attribute .

    $default  reduce using rule 516 (parm)


state 991

   86 primary: CHOOSE_EXPR '(' expr_no_commas ',' expr_no_commas ',' expr_no_commas ')' .

    $default  reduce using rule 86 (primary)


state 992

   57 expr_no_commas: expr_no_commas . '+' expr_no_commas
   58               | expr_no_commas . '-' expr_no_commas
   59               | expr_no_commas . '*' expr_no_commas
   60               | expr_no_commas . '/' expr_no_commas
   61               | expr_no_commas . '%' expr_no_commas
   62               | expr_no_commas . LSHIFT expr_no_commas
   63               | expr_no_commas . RSHIFT expr_no_commas
   64               | expr_no_commas . ARITHCOMPARE expr_no_commas
   65               | expr_no_commas . EQCOMPARE expr_no_commas
   66               | expr_no_commas . '&' expr_no_commas
   67               | expr_no_commas . '|' expr_no_commas
   68               | expr_no_commas . '^' expr_no_commas
   69               | expr_no_commas . ANDAND expr_no_commas
   70               | expr_no_commas . OROR expr_no_commas
   71               | expr_no_commas . '?' expr ':' expr_no_commas
   72               | expr_no_commas . '?' ':' expr_no_commas
   73               | expr_no_commas . '=' expr_no_commas
   74               | expr_no_commas . ASSIGN expr_no_commas
  313 designator: '[' expr_no_commas ELLIPSIS expr_no_commas . ']'

    '='           shift, and go to state 367
    ASSIGN        shift, and go to state 368
    '?'           shift, and go to state 369
    OROR          shift, and go to state 370
    ANDAND        shift, and go to state 371
    '|'           shift, and go to state 372
    '^'           shift, and go to state 373
    '&'           shift, and go to state 374
    EQCOMPARE     shift, and go to state 375
    ARITHCOMPARE  shift, and go to state 376
    RSHIFT        shift, and go to state 377
    LSHIFT        shift, and go to state 378
    '+'           shift, and go to state 379
    '-'           shift, and go to state 380
    '*'           shift, and go to state 381
    '/'           shift, and go to state 382
    '%'           shift, and go to state 383
    ']'           shift, and go to state 1025


state 993

  488 label: CASE expr_no_commas ELLIPSIS . expr_no_commas ':'

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 1026
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 994

  487 label: CASE expr_no_commas ':' .

    $default  reduce using rule 487 (label)


state 995

  479 stmt: RETURN expr ';' .

    $default  reduce using rule 479 (stmt)


state 996

  485 stmt: GOTO '*' expr . ';'

    ';'  shift, and go to state 1027


state 997

  484 stmt: GOTO identifier ';' .

    $default  reduce using rule 484 (stmt)


state 998

  480 stmt: ASM_KEYWORD maybe_type_qual '(' . expr ')' ';'
  481     | ASM_KEYWORD maybe_type_qual '(' . expr ':' asm_operands ')' ';'
  482     | ASM_KEYWORD maybe_type_qual '(' . expr ':' asm_operands ':' asm_operands ')' ';'
  483     | ASM_KEYWORD maybe_type_qual '(' . expr ':' asm_operands ':' asm_operands ':' asm_clobbers ')' ';'

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    expr                    go to state 1028
    nonnull_exprlist        go to state 250
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 255
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 999

  490 label: identifier save_filename save_lineno . ':' maybe_attribute

    ':'  shift, and go to state 1029


state 1000

  115 decl: declspecs_ts setspecs initdecls . ';'
  269 initdecls: initdecls . ',' maybe_resetattrs initdcl

    ';'  shift, and go to state 1030
    ','  shift, and go to state 451


state 1001

  117 decl: declspecs_ts setspecs nested_function .

    $default  reduce using rule 117 (decl)


state 1002

  274 initdcl: declarator . maybeasm maybe_attribute '=' init
  275        | declarator . maybeasm maybe_attribute
  315 nested_function: declarator . old_style_parm_decls save_filename save_lineno compstmt

    error        shift, and go to state 443
    ASM_KEYWORD  shift, and go to state 299

    TYPENAME      reduce using rule 456 (save_filename)
    SCSPEC        reduce using rule 456 (save_filename)
    STATIC        reduce using rule 456 (save_filename)
    TYPESPEC      reduce using rule 456 (save_filename)
    TYPE_QUAL     reduce using rule 456 (save_filename)
    ENUM          reduce using rule 456 (save_filename)
    STRUCT        reduce using rule 456 (save_filename)
    UNION         reduce using rule 456 (save_filename)
    TYPEOF        reduce using rule 456 (save_filename)
    ATTRIBUTE     reduce using rule 272 (maybeasm)
    '='           reduce using rule 272 (maybeasm)
    ARITHCOMPARE  reduce using rule 456 (save_filename)
    CLASSNAME     reduce using rule 456 (save_filename)
    OBJECTNAME    reduce using rule 456 (save_filename)
    ';'           reduce using rule 272 (maybeasm)
    ','           reduce using rule 272 (maybeasm)
    '{'           reduce using rule 101 (old_style_parm_decls_1)

    old_style_parm_decls    go to state 1031
    old_style_parm_decls_1  go to state 303
    lineno_datadecl         go to state 304
    datadecls               go to state 305
    maybeasm                go to state 454
    errstmt                 go to state 308
    save_filename           go to state 309


state 1003

  116 decl: declspecs_nots setspecs notype_initdecls . ';'
  271 notype_initdecls: notype_initdecls . ',' maybe_resetattrs notype_initdcl

    ';'  shift, and go to state 1032
    ','  shift, and go to state 297


state 1004

  118 decl: declspecs_nots setspecs notype_nested_function .

    $default  reduce using rule 118 (decl)


state 1005

  276 notype_initdcl: notype_declarator . maybeasm maybe_attribute '=' init
  277               | notype_declarator . maybeasm maybe_attribute
  316 notype_nested_function: notype_declarator . old_style_parm_decls save_filename save_lineno compstmt
  336 notype_declarator: notype_declarator . '(' parmlist_or_identifiers
  339                  | notype_declarator . array_declarator

    error        shift, and go to state 443
    ASM_KEYWORD  shift, and go to state 299
    '('          shift, and go to state 300
    '['          shift, and go to state 301

    TYPENAME      reduce using rule 456 (save_filename)
    SCSPEC        reduce using rule 456 (save_filename)
    STATIC        reduce using rule 456 (save_filename)
    TYPESPEC      reduce using rule 456 (save_filename)
    TYPE_QUAL     reduce using rule 456 (save_filename)
    ENUM          reduce using rule 456 (save_filename)
    STRUCT        reduce using rule 456 (save_filename)
    UNION         reduce using rule 456 (save_filename)
    TYPEOF        reduce using rule 456 (save_filename)
    ATTRIBUTE     reduce using rule 272 (maybeasm)
    '='           reduce using rule 272 (maybeasm)
    ARITHCOMPARE  reduce using rule 456 (save_filename)
    CLASSNAME     reduce using rule 456 (save_filename)
    OBJECTNAME    reduce using rule 456 (save_filename)
    ';'           reduce using rule 272 (maybeasm)
    ','           reduce using rule 272 (maybeasm)
    '{'           reduce using rule 101 (old_style_parm_decls_1)

    old_style_parm_decls    go to state 1033
    old_style_parm_decls_1  go to state 303
    lineno_datadecl         go to state 304
    datadecls               go to state 305
    maybeasm                go to state 306
    array_declarator        go to state 307
    errstmt                 go to state 308
    save_filename           go to state 309


state 1006

  454 if_prefix: IF '(' . expr ')'

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    expr                    go to state 1034
    nonnull_exprlist        go to state 250
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 255
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 1007

  466 select_or_iter_stmt: WHILE '(' . expr ')' c99_block_lineno_labeled_stmt

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    expr                    go to state 1035
    nonnull_exprlist        go to state 250
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 255
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 1008

  460 c99_block_lineno_labeled_stmt: c99_block_start . lineno_labeled_stmt c99_block_end

    $default  reduce using rule 456 (save_filename)

    save_filename        go to state 817
    lineno_labeled_stmt  go to state 1036
    lineno_stmt          go to state 1037
    lineno_label         go to state 1038


state 1009

  455 do_stmt_start: DO c99_block_lineno_labeled_stmt . WHILE

    WHILE  shift, and go to state 1039


state 1010

  469 select_or_iter_stmt: FOR '(' . for_init_stmt xexpr ';' xexpr ')' c99_block_lineno_labeled_stmt

    IDENTIFIER          shift, and go to state 222
    TYPENAME            shift, and go to state 2
    SCSPEC              shift, and go to state 3
    STATIC              shift, and go to state 4
    TYPESPEC            shift, and go to state 5
    TYPE_QUAL           shift, and go to state 6
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ENUM                shift, and go to state 7
    STRUCT              shift, and go to state 8
    UNION               shift, and go to state 9
    TYPEOF              shift, and go to state 11
    ALIGNOF             shift, and go to state 226
    ATTRIBUTE           shift, and go to state 12
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    ARITHCOMPARE        shift, and go to state 14
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    CLASSNAME           shift, and go to state 20
    PROTOCOL            shift, and go to state 244
    OBJECTNAME          shift, and go to state 22
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    $default  reduce using rule 493 (xexpr)

    unop                           go to state 248
    expr                           go to state 1040
    nonnull_exprlist               go to state 250
    unary_expr                     go to state 251
    sizeof                         go to state 252
    alignof                        go to state 253
    typeof                         go to state 32
    cast_expr                      go to state 254
    expr_no_commas                 go to state 255
    primary                        go to state 256
    objc_string                    go to state 257
    decl                           go to state 1041
    declspecs_nosc_nots_nosa_noea  go to state 34
    declspecs_nosc_nots_nosa_ea    go to state 35
    declspecs_nosc_nots_sa_noea    go to state 36
    declspecs_nosc_nots_sa_ea      go to state 37
    declspecs_nosc_ts_nosa_noea    go to state 38
    declspecs_nosc_ts_nosa_ea      go to state 39
    declspecs_nosc_ts_sa_noea      go to state 40
    declspecs_nosc_ts_sa_ea        go to state 41
    declspecs_sc_nots_nosa_noea    go to state 42
    declspecs_sc_nots_nosa_ea      go to state 43
    declspecs_sc_nots_sa_noea      go to state 44
    declspecs_sc_nots_sa_ea        go to state 45
    declspecs_sc_ts_nosa_noea      go to state 46
    declspecs_sc_ts_nosa_ea        go to state 47
    declspecs_sc_ts_sa_noea        go to state 48
    declspecs_sc_ts_sa_ea          go to state 49
    declspecs_ts                   go to state 905
    declspecs_nots                 go to state 906
    declspecs                      go to state 907
    typespec_nonattr               go to state 53
    typespec_attr                  go to state 54
    typespec_reserved_nonattr      go to state 55
    typespec_reserved_attr         go to state 56
    typespec_nonreserved_nonattr   go to state 57
    attributes                     go to state 58
    attribute                      go to state 59
    scspec                         go to state 60
    struct_head                    go to state 61
    union_head                     go to state 62
    enum_head                      go to state 63
    structsp_attr                  go to state 64
    structsp_nonattr               go to state 65
    compstmt_primary_start         go to state 258
    for_init_stmt                  go to state 1042
    xexpr                          go to state 1043
    extension                      go to state 912
    non_empty_protocolrefs         go to state 72
    objcmessageexpr                go to state 260
    objcselectorexpr               go to state 261
    objcprotocolexpr               go to state 262
    objcencodeexpr                 go to state 263


state 1011

  470 select_or_iter_stmt: SWITCH '(' . expr ')' c99_block_lineno_labeled_stmt

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    expr                    go to state 1044
    nonnull_exprlist        go to state 250
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 255
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 1012

  463 select_or_iter_stmt: simple_if ELSE . c99_block_lineno_labeled_stmt
  465                    | simple_if ELSE . error

    error  shift, and go to state 1045

    IDENTIFIER          reduce using rule 436 (c99_block_start)
    TYPENAME            reduce using rule 436 (c99_block_start)
    CONSTANT            reduce using rule 436 (c99_block_start)
    STRING              reduce using rule 436 (c99_block_start)
    SIZEOF              reduce using rule 436 (c99_block_start)
    IF                  reduce using rule 436 (c99_block_start)
    WHILE               reduce using rule 436 (c99_block_start)
    DO                  reduce using rule 436 (c99_block_start)
    FOR                 reduce using rule 436 (c99_block_start)
    SWITCH              reduce using rule 436 (c99_block_start)
    CASE                reduce using rule 436 (c99_block_start)
    DEFAULT             reduce using rule 436 (c99_block_start)
    BREAK               reduce using rule 436 (c99_block_start)
    CONTINUE            reduce using rule 436 (c99_block_start)
    RETURN              reduce using rule 436 (c99_block_start)
    GOTO                reduce using rule 436 (c99_block_start)
    ASM_KEYWORD         reduce using rule 436 (c99_block_start)
    ALIGNOF             reduce using rule 436 (c99_block_start)
    EXTENSION           reduce using rule 436 (c99_block_start)
    REALPART            reduce using rule 436 (c99_block_start)
    IMAGPART            reduce using rule 436 (c99_block_start)
    VA_ARG              reduce using rule 436 (c99_block_start)
    CHOOSE_EXPR         reduce using rule 436 (c99_block_start)
    TYPES_COMPATIBLE_P  reduce using rule 436 (c99_block_start)
    VAR_FUNC_NAME       reduce using rule 436 (c99_block_start)
    ANDAND              reduce using rule 436 (c99_block_start)
    '&'                 reduce using rule 436 (c99_block_start)
    '+'                 reduce using rule 436 (c99_block_start)
    '-'                 reduce using rule 436 (c99_block_start)
    '*'                 reduce using rule 436 (c99_block_start)
    MINUSMINUS          reduce using rule 436 (c99_block_start)
    PLUSPLUS            reduce using rule 436 (c99_block_start)
    '('                 reduce using rule 436 (c99_block_start)
    '['                 reduce using rule 436 (c99_block_start)
    SELECTOR            reduce using rule 436 (c99_block_start)
    ENCODE              reduce using rule 436 (c99_block_start)
    CLASSNAME           reduce using rule 436 (c99_block_start)
    PROTOCOL            reduce using rule 436 (c99_block_start)
    OBJECTNAME          reduce using rule 436 (c99_block_start)
    ';'                 reduce using rule 436 (c99_block_start)
    '~'                 reduce using rule 436 (c99_block_start)
    '!'                 reduce using rule 436 (c99_block_start)
    '{'                 reduce using rule 436 (c99_block_start)
    '@'                 reduce using rule 436 (c99_block_start)

    c99_block_start                go to state 1008
    c99_block_lineno_labeled_stmt  go to state 1046


state 1013

  453 simple_if: if_prefix error .

    $default  reduce using rule 453 (simple_if)


state 1014

  452 simple_if: if_prefix c99_block_lineno_labeled_stmt .

    $default  reduce using rule 452 (simple_if)


state 1015

  468 select_or_iter_stmt: do_stmt_start error .

    $default  reduce using rule 468 (select_or_iter_stmt)


state 1016

  467 select_or_iter_stmt: do_stmt_start '(' . expr ')' ';'

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    expr                    go to state 1047
    nonnull_exprlist        go to state 250
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 255
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 1017

  475 stmt: c99_block_start select_or_iter_stmt c99_block_end .

    $default  reduce using rule 475 (stmt)


state 1018

  544 classdef: INTERFACE identifier ':' identifier protocolrefs '{' ivar_decl_list '}' methodprotolist END .

    $default  reduce using rule 544 (classdef)


state 1019

  570 ivars: ivars ',' maybe_resetattrs ivar_declarator .

    $default  reduce using rule 570 (ivars)


state 1020

  376 component_declarator: save_filename save_lineno . declarator maybe_attribute
  377                     | save_filename save_lineno . declarator ':' expr_no_commas maybe_attribute
  378                     | save_filename save_lineno . ':' expr_no_commas maybe_attribute

    IDENTIFIER  shift, and go to state 100
    TYPENAME    shift, and go to state 310
    ':'         shift, and go to state 925
    '*'         shift, and go to state 311
    '('         shift, and go to state 312
    OBJECTNAME  shift, and go to state 313

    declarator             go to state 926
    after_type_declarator  go to state 317
    notype_declarator      go to state 318


state 1021

  378 component_declarator: save_filename save_lineno ':' expr_no_commas maybe_attribute .

    $default  reduce using rule 378 (component_declarator)


state 1022

   57 expr_no_commas: expr_no_commas . '+' expr_no_commas
   58               | expr_no_commas . '-' expr_no_commas
   59               | expr_no_commas . '*' expr_no_commas
   60               | expr_no_commas . '/' expr_no_commas
   61               | expr_no_commas . '%' expr_no_commas
   62               | expr_no_commas . LSHIFT expr_no_commas
   63               | expr_no_commas . RSHIFT expr_no_commas
   64               | expr_no_commas . ARITHCOMPARE expr_no_commas
   65               | expr_no_commas . EQCOMPARE expr_no_commas
   66               | expr_no_commas . '&' expr_no_commas
   67               | expr_no_commas . '|' expr_no_commas
   68               | expr_no_commas . '^' expr_no_commas
   69               | expr_no_commas . ANDAND expr_no_commas
   70               | expr_no_commas . OROR expr_no_commas
   71               | expr_no_commas . '?' expr ':' expr_no_commas
   72               | expr_no_commas . '?' ':' expr_no_commas
   73               | expr_no_commas . '=' expr_no_commas
   74               | expr_no_commas . ASSIGN expr_no_commas
  377 component_declarator: save_filename save_lineno declarator ':' expr_no_commas . maybe_attribute

    ATTRIBUTE     shift, and go to state 12
    '='           shift, and go to state 367
    ASSIGN        shift, and go to state 368
    '?'           shift, and go to state 369
    OROR          shift, and go to state 370
    ANDAND        shift, and go to state 371
    '|'           shift, and go to state 372
    '^'           shift, and go to state 373
    '&'           shift, and go to state 374
    EQCOMPARE     shift, and go to state 375
    ARITHCOMPARE  shift, and go to state 376
    RSHIFT        shift, and go to state 377
    LSHIFT        shift, and go to state 378
    '+'           shift, and go to state 379
    '-'           shift, and go to state 380
    '*'           shift, and go to state 381
    '/'           shift, and go to state 382
    '%'           shift, and go to state 383

    $default  reduce using rule 278 (maybe_attribute)

    maybe_attribute  go to state 1048
    attributes       go to state 295
    attribute        go to state 59


state 1023

  381 component_notype_declarator: save_filename save_lineno ':' expr_no_commas maybe_attribute .

    $default  reduce using rule 381 (component_notype_declarator)


state 1024

   57 expr_no_commas: expr_no_commas . '+' expr_no_commas
   58               | expr_no_commas . '-' expr_no_commas
   59               | expr_no_commas . '*' expr_no_commas
   60               | expr_no_commas . '/' expr_no_commas
   61               | expr_no_commas . '%' expr_no_commas
   62               | expr_no_commas . LSHIFT expr_no_commas
   63               | expr_no_commas . RSHIFT expr_no_commas
   64               | expr_no_commas . ARITHCOMPARE expr_no_commas
   65               | expr_no_commas . EQCOMPARE expr_no_commas
   66               | expr_no_commas . '&' expr_no_commas
   67               | expr_no_commas . '|' expr_no_commas
   68               | expr_no_commas . '^' expr_no_commas
   69               | expr_no_commas . ANDAND expr_no_commas
   70               | expr_no_commas . OROR expr_no_commas
   71               | expr_no_commas . '?' expr ':' expr_no_commas
   72               | expr_no_commas . '?' ':' expr_no_commas
   73               | expr_no_commas . '=' expr_no_commas
   74               | expr_no_commas . ASSIGN expr_no_commas
  380 component_notype_declarator: save_filename save_lineno notype_declarator ':' expr_no_commas . maybe_attribute

    ATTRIBUTE     shift, and go to state 12
    '='           shift, and go to state 367
    ASSIGN        shift, and go to state 368
    '?'           shift, and go to state 369
    OROR          shift, and go to state 370
    ANDAND        shift, and go to state 371
    '|'           shift, and go to state 372
    '^'           shift, and go to state 373
    '&'           shift, and go to state 374
    EQCOMPARE     shift, and go to state 375
    ARITHCOMPARE  shift, and go to state 376
    RSHIFT        shift, and go to state 377
    LSHIFT        shift, and go to state 378
    '+'           shift, and go to state 379
    '-'           shift, and go to state 380
    '*'           shift, and go to state 381
    '/'           shift, and go to state 382
    '%'           shift, and go to state 383

    $default  reduce using rule 278 (maybe_attribute)

    maybe_attribute  go to state 1049
    attributes       go to state 295
    attribute        go to state 59


state 1025

  313 designator: '[' expr_no_commas ELLIPSIS expr_no_commas ']' .

    $default  reduce using rule 313 (designator)


state 1026

   57 expr_no_commas: expr_no_commas . '+' expr_no_commas
   58               | expr_no_commas . '-' expr_no_commas
   59               | expr_no_commas . '*' expr_no_commas
   60               | expr_no_commas . '/' expr_no_commas
   61               | expr_no_commas . '%' expr_no_commas
   62               | expr_no_commas . LSHIFT expr_no_commas
   63               | expr_no_commas . RSHIFT expr_no_commas
   64               | expr_no_commas . ARITHCOMPARE expr_no_commas
   65               | expr_no_commas . EQCOMPARE expr_no_commas
   66               | expr_no_commas . '&' expr_no_commas
   67               | expr_no_commas . '|' expr_no_commas
   68               | expr_no_commas . '^' expr_no_commas
   69               | expr_no_commas . ANDAND expr_no_commas
   70               | expr_no_commas . OROR expr_no_commas
   71               | expr_no_commas . '?' expr ':' expr_no_commas
   72               | expr_no_commas . '?' ':' expr_no_commas
   73               | expr_no_commas . '=' expr_no_commas
   74               | expr_no_commas . ASSIGN expr_no_commas
  488 label: CASE expr_no_commas ELLIPSIS expr_no_commas . ':'

    '='           shift, and go to state 367
    ASSIGN        shift, and go to state 368
    '?'           shift, and go to state 369
    ':'           shift, and go to state 1050
    OROR          shift, and go to state 370
    ANDAND        shift, and go to state 371
    '|'           shift, and go to state 372
    '^'           shift, and go to state 373
    '&'           shift, and go to state 374
    EQCOMPARE     shift, and go to state 375
    ARITHCOMPARE  shift, and go to state 376
    RSHIFT        shift, and go to state 377
    LSHIFT        shift, and go to state 378
    '+'           shift, and go to state 379
    '-'           shift, and go to state 380
    '*'           shift, and go to state 381
    '/'           shift, and go to state 382
    '%'           shift, and go to state 383


state 1027

  485 stmt: GOTO '*' expr ';' .

    $default  reduce using rule 485 (stmt)


state 1028

  480 stmt: ASM_KEYWORD maybe_type_qual '(' expr . ')' ';'
  481     | ASM_KEYWORD maybe_type_qual '(' expr . ':' asm_operands ')' ';'
  482     | ASM_KEYWORD maybe_type_qual '(' expr . ':' asm_operands ':' asm_operands ')' ';'
  483     | ASM_KEYWORD maybe_type_qual '(' expr . ':' asm_operands ':' asm_operands ':' asm_clobbers ')' ';'

    ':'  shift, and go to state 1051
    ')'  shift, and go to state 1052


state 1029

  490 label: identifier save_filename save_lineno ':' . maybe_attribute

    ATTRIBUTE  shift, and go to state 12

    $default  reduce using rule 278 (maybe_attribute)

    maybe_attribute  go to state 1053
    attributes       go to state 295
    attribute        go to state 59


state 1030

  115 decl: declspecs_ts setspecs initdecls ';' .

    $default  reduce using rule 115 (decl)


state 1031

  315 nested_function: declarator old_style_parm_decls . save_filename save_lineno compstmt

    $default  reduce using rule 456 (save_filename)

    save_filename  go to state 1054


state 1032

  116 decl: declspecs_nots setspecs notype_initdecls ';' .

    $default  reduce using rule 116 (decl)


state 1033

  316 notype_nested_function: notype_declarator old_style_parm_decls . save_filename save_lineno compstmt

    $default  reduce using rule 456 (save_filename)

    save_filename  go to state 1055


state 1034

  454 if_prefix: IF '(' expr . ')'

    ')'  shift, and go to state 1056


state 1035

  466 select_or_iter_stmt: WHILE '(' expr . ')' c99_block_lineno_labeled_stmt

    ')'  shift, and go to state 1057


state 1036

  460 c99_block_lineno_labeled_stmt: c99_block_start lineno_labeled_stmt . c99_block_end

    $default  reduce using rule 437 (c99_block_end)

    c99_block_end  go to state 1058


state 1037

  458 lineno_labeled_stmt: lineno_stmt .

    $default  reduce using rule 458 (lineno_labeled_stmt)


state 1038

  459 lineno_labeled_stmt: lineno_label . lineno_labeled_stmt

    $default  reduce using rule 456 (save_filename)

    save_filename        go to state 817
    lineno_labeled_stmt  go to state 1059
    lineno_stmt          go to state 1037
    lineno_label         go to state 1038


state 1039

  455 do_stmt_start: DO c99_block_lineno_labeled_stmt WHILE .

    $default  reduce using rule 455 (do_stmt_start)


state 1040

  494 xexpr: expr .

    $default  reduce using rule 494 (xexpr)


state 1041

  472 for_init_stmt: decl .

    $default  reduce using rule 472 (for_init_stmt)


state 1042

  469 select_or_iter_stmt: FOR '(' for_init_stmt . xexpr ';' xexpr ')' c99_block_lineno_labeled_stmt

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    $default  reduce using rule 493 (xexpr)

    unop                    go to state 248
    expr                    go to state 1040
    nonnull_exprlist        go to state 250
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 255
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    xexpr                   go to state 1060
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 1043

  471 for_init_stmt: xexpr . ';'

    ';'  shift, and go to state 1061


state 1044

  470 select_or_iter_stmt: SWITCH '(' expr . ')' c99_block_lineno_labeled_stmt

    ')'  shift, and go to state 1062


state 1045

  465 select_or_iter_stmt: simple_if ELSE error .

    $default  reduce using rule 465 (select_or_iter_stmt)


state 1046

  463 select_or_iter_stmt: simple_if ELSE c99_block_lineno_labeled_stmt .

    $default  reduce using rule 463 (select_or_iter_stmt)


state 1047

  467 select_or_iter_stmt: do_stmt_start '(' expr . ')' ';'

    ')'  shift, and go to state 1063


state 1048

  377 component_declarator: save_filename save_lineno declarator ':' expr_no_commas maybe_attribute .

    $default  reduce using rule 377 (component_declarator)


state 1049

  380 component_notype_declarator: save_filename save_lineno notype_declarator ':' expr_no_commas maybe_attribute .

    $default  reduce using rule 380 (component_notype_declarator)


state 1050

  488 label: CASE expr_no_commas ELLIPSIS expr_no_commas ':' .

    $default  reduce using rule 488 (label)


state 1051

  481 stmt: ASM_KEYWORD maybe_type_qual '(' expr ':' . asm_operands ')' ';'
  482     | ASM_KEYWORD maybe_type_qual '(' expr ':' . asm_operands ':' asm_operands ')' ';'
  483     | ASM_KEYWORD maybe_type_qual '(' expr ':' . asm_operands ':' asm_operands ':' asm_clobbers ')' ';'

    STRING  shift, and go to state 1064
    '['     shift, and go to state 1065

    $default  reduce using rule 495 (asm_operands)

    asm_operands          go to state 1066
    nonnull_asm_operands  go to state 1067
    asm_operand           go to state 1068


state 1052

  480 stmt: ASM_KEYWORD maybe_type_qual '(' expr ')' . ';'

    ';'  shift, and go to state 1069


state 1053

  490 label: identifier save_filename save_lineno ':' maybe_attribute .

    $default  reduce using rule 490 (label)


state 1054

  315 nested_function: declarator old_style_parm_decls save_filename . save_lineno compstmt

    $default  reduce using rule 457 (save_lineno)

    save_lineno  go to state 1070


state 1055

  316 notype_nested_function: notype_declarator old_style_parm_decls save_filename . save_lineno compstmt

    $default  reduce using rule 457 (save_lineno)

    save_lineno  go to state 1071


state 1056

  454 if_prefix: IF '(' expr ')' .

    $default  reduce using rule 454 (if_prefix)


state 1057

  466 select_or_iter_stmt: WHILE '(' expr ')' . c99_block_lineno_labeled_stmt

    $default  reduce using rule 436 (c99_block_start)

    c99_block_start                go to state 1008
    c99_block_lineno_labeled_stmt  go to state 1072


state 1058

  460 c99_block_lineno_labeled_stmt: c99_block_start lineno_labeled_stmt c99_block_end .

    $default  reduce using rule 460 (c99_block_lineno_labeled_stmt)


state 1059

  459 lineno_labeled_stmt: lineno_label lineno_labeled_stmt .

    $default  reduce using rule 459 (lineno_labeled_stmt)


state 1060

  469 select_or_iter_stmt: FOR '(' for_init_stmt xexpr . ';' xexpr ')' c99_block_lineno_labeled_stmt

    ';'  shift, and go to state 1073


state 1061

  471 for_init_stmt: xexpr ';' .

    $default  reduce using rule 471 (for_init_stmt)


state 1062

  470 select_or_iter_stmt: SWITCH '(' expr ')' . c99_block_lineno_labeled_stmt

    $default  reduce using rule 436 (c99_block_start)

    c99_block_start                go to state 1008
    c99_block_lineno_labeled_stmt  go to state 1074


state 1063

  467 select_or_iter_stmt: do_stmt_start '(' expr ')' . ';'

    ';'  shift, and go to state 1075


state 1064

  499 asm_operand: STRING . '(' expr ')'

    '('  shift, and go to state 1076


state 1065

  500 asm_operand: '[' . identifier ']' STRING '(' expr ')'

    IDENTIFIER  shift, and go to state 82
    TYPENAME    shift, and go to state 83
    CLASSNAME   shift, and go to state 84
    OBJECTNAME  shift, and go to state 85

    identifier  go to state 1077


state 1066

  481 stmt: ASM_KEYWORD maybe_type_qual '(' expr ':' asm_operands . ')' ';'
  482     | ASM_KEYWORD maybe_type_qual '(' expr ':' asm_operands . ':' asm_operands ')' ';'
  483     | ASM_KEYWORD maybe_type_qual '(' expr ':' asm_operands . ':' asm_operands ':' asm_clobbers ')' ';'

    ':'  shift, and go to state 1078
    ')'  shift, and go to state 1079


state 1067

  496 asm_operands: nonnull_asm_operands .
  498 nonnull_asm_operands: nonnull_asm_operands . ',' asm_operand

    ','  shift, and go to state 1080

    $default  reduce using rule 496 (asm_operands)


state 1068

  497 nonnull_asm_operands: asm_operand .

    $default  reduce using rule 497 (nonnull_asm_operands)


state 1069

  480 stmt: ASM_KEYWORD maybe_type_qual '(' expr ')' ';' .

    $default  reduce using rule 480 (stmt)


state 1070

  315 nested_function: declarator old_style_parm_decls save_filename save_lineno . compstmt

    '{'  shift, and go to state 508

    compstmt_start  go to state 510
    compstmt        go to state 1081


state 1071

  316 notype_nested_function: notype_declarator old_style_parm_decls save_filename save_lineno . compstmt

    '{'  shift, and go to state 508

    compstmt_start  go to state 510
    compstmt        go to state 1082


state 1072

  466 select_or_iter_stmt: WHILE '(' expr ')' c99_block_lineno_labeled_stmt .

    $default  reduce using rule 466 (select_or_iter_stmt)


state 1073

  469 select_or_iter_stmt: FOR '(' for_init_stmt xexpr ';' . xexpr ')' c99_block_lineno_labeled_stmt

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    $default  reduce using rule 493 (xexpr)

    unop                    go to state 248
    expr                    go to state 1040
    nonnull_exprlist        go to state 250
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 255
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    xexpr                   go to state 1083
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 1074

  470 select_or_iter_stmt: SWITCH '(' expr ')' c99_block_lineno_labeled_stmt .

    $default  reduce using rule 470 (select_or_iter_stmt)


state 1075

  467 select_or_iter_stmt: do_stmt_start '(' expr ')' ';' .

    $default  reduce using rule 467 (select_or_iter_stmt)


state 1076

  499 asm_operand: STRING '(' . expr ')'

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    expr                    go to state 1084
    nonnull_exprlist        go to state 250
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 255
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 1077

  500 asm_operand: '[' identifier . ']' STRING '(' expr ')'

    ']'  shift, and go to state 1085


state 1078

  482 stmt: ASM_KEYWORD maybe_type_qual '(' expr ':' asm_operands ':' . asm_operands ')' ';'
  483     | ASM_KEYWORD maybe_type_qual '(' expr ':' asm_operands ':' . asm_operands ':' asm_clobbers ')' ';'

    STRING  shift, and go to state 1064
    '['     shift, and go to state 1065

    $default  reduce using rule 495 (asm_operands)

    asm_operands          go to state 1086
    nonnull_asm_operands  go to state 1067
    asm_operand           go to state 1068


state 1079

  481 stmt: ASM_KEYWORD maybe_type_qual '(' expr ':' asm_operands ')' . ';'

    ';'  shift, and go to state 1087


state 1080

  498 nonnull_asm_operands: nonnull_asm_operands ',' . asm_operand

    STRING  shift, and go to state 1064
    '['     shift, and go to state 1065

    asm_operand  go to state 1088


state 1081

  315 nested_function: declarator old_style_parm_decls save_filename save_lineno compstmt .

    $default  reduce using rule 315 (nested_function)


state 1082

  316 notype_nested_function: notype_declarator old_style_parm_decls save_filename save_lineno compstmt .

    $default  reduce using rule 316 (notype_nested_function)


state 1083

  469 select_or_iter_stmt: FOR '(' for_init_stmt xexpr ';' xexpr . ')' c99_block_lineno_labeled_stmt

    ')'  shift, and go to state 1089


state 1084

  499 asm_operand: STRING '(' expr . ')'

    ')'  shift, and go to state 1090


state 1085

  500 asm_operand: '[' identifier ']' . STRING '(' expr ')'

    STRING  shift, and go to state 1091


state 1086

  482 stmt: ASM_KEYWORD maybe_type_qual '(' expr ':' asm_operands ':' asm_operands . ')' ';'
  483     | ASM_KEYWORD maybe_type_qual '(' expr ':' asm_operands ':' asm_operands . ':' asm_clobbers ')' ';'

    ':'  shift, and go to state 1092
    ')'  shift, and go to state 1093


state 1087

  481 stmt: ASM_KEYWORD maybe_type_qual '(' expr ':' asm_operands ')' ';' .

    $default  reduce using rule 481 (stmt)


state 1088

  498 nonnull_asm_operands: nonnull_asm_operands ',' asm_operand .

    $default  reduce using rule 498 (nonnull_asm_operands)


state 1089

  469 select_or_iter_stmt: FOR '(' for_init_stmt xexpr ';' xexpr ')' . c99_block_lineno_labeled_stmt

    $default  reduce using rule 436 (c99_block_start)

    c99_block_start                go to state 1008
    c99_block_lineno_labeled_stmt  go to state 1094


state 1090

  499 asm_operand: STRING '(' expr ')' .

    $default  reduce using rule 499 (asm_operand)


state 1091

  500 asm_operand: '[' identifier ']' STRING . '(' expr ')'

    '('  shift, and go to state 1095


state 1092

  483 stmt: ASM_KEYWORD maybe_type_qual '(' expr ':' asm_operands ':' asm_operands ':' . asm_clobbers ')' ';'

    STRING  shift, and go to state 1096

    asm_clobbers  go to state 1097


state 1093

  482 stmt: ASM_KEYWORD maybe_type_qual '(' expr ':' asm_operands ':' asm_operands ')' . ';'

    ';'  shift, and go to state 1098


state 1094

  469 select_or_iter_stmt: FOR '(' for_init_stmt xexpr ';' xexpr ')' c99_block_lineno_labeled_stmt .

    $default  reduce using rule 469 (select_or_iter_stmt)


state 1095

  500 asm_operand: '[' identifier ']' STRING '(' . expr ')'

    IDENTIFIER          shift, and go to state 222
    CONSTANT            shift, and go to state 223
    STRING              shift, and go to state 224
    SIZEOF              shift, and go to state 225
    ALIGNOF             shift, and go to state 226
    EXTENSION           shift, and go to state 13
    REALPART            shift, and go to state 227
    IMAGPART            shift, and go to state 228
    VA_ARG              shift, and go to state 229
    CHOOSE_EXPR         shift, and go to state 230
    TYPES_COMPATIBLE_P  shift, and go to state 231
    VAR_FUNC_NAME       shift, and go to state 232
    ANDAND              shift, and go to state 233
    '&'                 shift, and go to state 234
    '+'                 shift, and go to state 235
    '-'                 shift, and go to state 236
    '*'                 shift, and go to state 237
    MINUSMINUS          shift, and go to state 238
    PLUSPLUS            shift, and go to state 239
    '('                 shift, and go to state 240
    '['                 shift, and go to state 241
    SELECTOR            shift, and go to state 242
    ENCODE              shift, and go to state 243
    PROTOCOL            shift, and go to state 244
    '~'                 shift, and go to state 245
    '!'                 shift, and go to state 246
    '@'                 shift, and go to state 247

    unop                    go to state 248
    expr                    go to state 1099
    nonnull_exprlist        go to state 250
    unary_expr              go to state 251
    sizeof                  go to state 252
    alignof                 go to state 253
    cast_expr               go to state 254
    expr_no_commas          go to state 255
    primary                 go to state 256
    objc_string             go to state 257
    compstmt_primary_start  go to state 258
    extension               go to state 259
    objcmessageexpr         go to state 260
    objcselectorexpr        go to state 261
    objcprotocolexpr        go to state 262
    objcencodeexpr          go to state 263


state 1096

  501 asm_clobbers: STRING .

    $default  reduce using rule 501 (asm_clobbers)


state 1097

  483 stmt: ASM_KEYWORD maybe_type_qual '(' expr ':' asm_operands ':' asm_operands ':' asm_clobbers . ')' ';'
  502 asm_clobbers: asm_clobbers . ',' STRING

    ')'  shift, and go to state 1100
    ','  shift, and go to state 1101


state 1098

  482 stmt: ASM_KEYWORD maybe_type_qual '(' expr ':' asm_operands ':' asm_operands ')' ';' .

    $default  reduce using rule 482 (stmt)


state 1099

  500 asm_operand: '[' identifier ']' STRING '(' expr . ')'

    ')'  shift, and go to state 1102


state 1100

  483 stmt: ASM_KEYWORD maybe_type_qual '(' expr ':' asm_operands ':' asm_operands ':' asm_clobbers ')' . ';'

    ';'  shift, and go to state 1103


state 1101

  502 asm_clobbers: asm_clobbers ',' . STRING

    STRING  shift, and go to state 1104


state 1102

  500 asm_operand: '[' identifier ']' STRING '(' expr ')' .

    $default  reduce using rule 500 (asm_operand)


state 1103

  483 stmt: ASM_KEYWORD maybe_type_qual '(' expr ':' asm_operands ':' asm_operands ':' asm_clobbers ')' ';' .

    $default  reduce using rule 483 (stmt)


state 1104

  502 asm_clobbers: asm_clobbers ',' STRING .

    $default  reduce using rule 502 (asm_clobbers)
