State 1 conflicts: 1 shift/reduce
State 13 conflicts: 2 shift/reduce
State 33 conflicts: 1 shift/reduce
State 36 conflicts: 3 shift/reduce
State 37 conflicts: 3 shift/reduce
State 42 conflicts: 3 shift/reduce
State 55 conflicts: 1 shift/reduce
State 63 conflicts: 2 shift/reduce
State 67 conflicts: 2 shift/reduce
State 71 conflicts: 1 shift/reduce
State 74 conflicts: 1 shift/reduce
State 78 conflicts: 1 shift/reduce
State 80 conflicts: 1 shift/reduce
State 140 conflicts: 1 shift/reduce
State 151 conflicts: 2 shift/reduce
State 197 conflicts: 1 shift/reduce
State 205 conflicts: 1 shift/reduce
State 206 conflicts: 1 shift/reduce
State 234 conflicts: 1 shift/reduce
State 251 conflicts: 1 shift/reduce
State 277 conflicts: 1 shift/reduce
State 286 conflicts: 1 shift/reduce
State 308 conflicts: 1 shift/reduce
State 314 conflicts: 1 shift/reduce
State 319 conflicts: 1 shift/reduce
State 322 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: /* empty */
    2        | program rule
    3        | program nls
    4        | program LEX_EOF
    5        | program error

    6 rule: pattern action
    7     | pattern statement_term
    8     | function_prologue action
    9     | '@' LEX_INCLUDE source statement_term

   10 source: FILENAME
   11       | FILENAME error
   12       | error

   13 pattern: /* empty */
   14        | exp
   15        | exp ',' opt_nls exp
   16        | LEX_BEGIN
   17        | LEX_END
   18        | LEX_BEGINFILE
   19        | LEX_ENDFILE

   20 action: l_brace statements r_brace opt_semi opt_nls

   21 func_name: NAME
   22          | FUNC_CALL
   23          | lex_builtin
   24          | '@' LEX_EVAL

   25 lex_builtin: LEX_BUILTIN
   26            | LEX_LENGTH

   27 function_prologue: LEX_FUNCTION func_name '(' opt_param_list r_paren opt_nls

   28 regexp: a_slash REGEXP

   29 a_slash: '/'
   30        | SLASH_BEFORE_EQUAL

   31 statements: /* empty */
   32           | statements statement
   33           | statements error

   34 statement_term: nls
   35               | semi opt_nls

   36 statement: semi opt_nls
   37          | l_brace statements r_brace
   38          | if_statement
   39          | LEX_SWITCH '(' exp r_paren opt_nls l_brace case_statements opt_nls r_brace
   40          | LEX_WHILE '(' exp r_paren opt_nls statement
   41          | LEX_DO opt_nls statement LEX_WHILE '(' exp r_paren opt_nls
   42          | LEX_FOR '(' NAME LEX_IN simple_variable r_paren opt_nls statement
   43          | LEX_FOR '(' opt_simple_stmt semi opt_nls exp semi opt_nls opt_simple_stmt r_paren opt_nls statement
   44          | LEX_FOR '(' opt_simple_stmt semi opt_nls semi opt_nls opt_simple_stmt r_paren opt_nls statement
   45          | non_compound_stmt

   46 non_compound_stmt: LEX_BREAK statement_term
   47                  | LEX_CONTINUE statement_term
   48                  | LEX_NEXT statement_term
   49                  | LEX_NEXTFILE statement_term
   50                  | LEX_EXIT opt_exp statement_term
   51                  | LEX_RETURN opt_exp statement_term
   52                  | simple_stmt statement_term

   53 simple_stmt: print print_expression_list output_redir
   54            | LEX_DELETE NAME delete_subscript_list
   55            | LEX_DELETE '(' NAME ')'
   56            | exp

   57 opt_simple_stmt: /* empty */
   58                | simple_stmt

   59 case_statements: /* empty */
   60                | case_statements case_statement
   61                | case_statements error

   62 case_statement: LEX_CASE case_value colon opt_nls statements
   63               | LEX_DEFAULT colon opt_nls statements

   64 case_value: YNUMBER
   65           | '-' YNUMBER
   66           | '+' YNUMBER
   67           | YSTRING
   68           | regexp

   69 print: LEX_PRINT
   70      | LEX_PRINTF

   71 print_expression_list: opt_expression_list
   72                      | '(' expression_list r_paren

   73 output_redir: /* empty */
   74             | IO_OUT common_exp

   75 if_statement: LEX_IF '(' exp r_paren opt_nls statement
   76             | LEX_IF '(' exp r_paren opt_nls statement LEX_ELSE opt_nls statement

   77 nls: NEWLINE
   78    | nls NEWLINE

   79 opt_nls: /* empty */
   80        | nls

   81 input_redir: /* empty */
   82            | '<' simp_exp

   83 opt_param_list: /* empty */
   84               | param_list

   85 param_list: NAME
   86           | param_list comma NAME
   87           | error
   88           | param_list error
   89           | param_list comma error

   90 opt_exp: /* empty */
   91        | exp

   92 opt_expression_list: /* empty */
   93                    | expression_list

   94 expression_list: exp
   95                | expression_list comma exp
   96                | error
   97                | expression_list error
   98                | expression_list error exp
   99                | expression_list comma error

  100 exp: variable assign_operator exp
  101    | exp LEX_AND exp
  102    | exp LEX_OR exp
  103    | exp MATCHOP exp
  104    | exp LEX_IN simple_variable
  105    | exp a_relop exp
  106    | exp '?' exp ':' exp
  107    | common_exp

  108 assign_operator: ASSIGN
  109                | ASSIGNOP
  110                | SLASH_BEFORE_EQUAL ASSIGN

  111 relop_or_less: RELOP
  112              | '<'

  113 a_relop: relop_or_less
  114        | '>'

  115 common_exp: simp_exp
  116           | simp_exp_nc
  117           | common_exp simp_exp

  118 simp_exp: non_post_simp_exp
  119         | simp_exp '^' simp_exp
  120         | simp_exp '*' simp_exp
  121         | simp_exp '/' simp_exp
  122         | simp_exp '%' simp_exp
  123         | simp_exp '+' simp_exp
  124         | simp_exp '-' simp_exp
  125         | LEX_GETLINE opt_variable input_redir
  126         | variable INCREMENT
  127         | variable DECREMENT
  128         | '(' expression_list r_paren LEX_IN simple_variable

  129 simp_exp_nc: common_exp IO_IN LEX_GETLINE opt_variable
  130            | simp_exp_nc '^' simp_exp
  131            | simp_exp_nc '*' simp_exp
  132            | simp_exp_nc '/' simp_exp
  133            | simp_exp_nc '%' simp_exp
  134            | simp_exp_nc '+' simp_exp
  135            | simp_exp_nc '-' simp_exp

  136 non_post_simp_exp: regexp
  137                  | '!' simp_exp
  138                  | '(' exp r_paren
  139                  | LEX_BUILTIN '(' opt_expression_list r_paren
  140                  | LEX_LENGTH '(' opt_expression_list r_paren
  141                  | LEX_LENGTH
  142                  | func_call
  143                  | variable
  144                  | INCREMENT variable
  145                  | DECREMENT variable
  146                  | YNUMBER
  147                  | YSTRING
  148                  | '-' simp_exp
  149                  | '+' simp_exp

  150 func_call: direct_func_call
  151          | '@' direct_func_call

  152 direct_func_call: FUNC_CALL '(' opt_expression_list r_paren

  153 opt_variable: /* empty */
  154             | variable

  155 delete_subscript_list: /* empty */
  156                      | delete_subscript SUBSCRIPT

  157 delete_subscript: delete_exp_list
  158                 | delete_subscript delete_exp_list

  159 delete_exp_list: bracketed_exp_list

  160 bracketed_exp_list: '[' expression_list ']'

  161 subscript: bracketed_exp_list
  162          | subscript bracketed_exp_list

  163 subscript_list: subscript SUBSCRIPT

  164 simple_variable: NAME
  165                | NAME subscript_list

  166 variable: simple_variable
  167         | '$' non_post_simp_exp opt_incdec

  168 opt_incdec: INCREMENT
  169           | DECREMENT
  170           | /* empty */

  171 l_brace: '{' opt_nls

  172 r_brace: '}' opt_nls

  173 r_paren: ')'

  174 opt_semi: /* empty */
  175         | semi

  176 semi: ';'

  177 colon: ':'

  178 comma: ',' opt_nls


Terminals, with rules where they appear

$end (0) 0
'!' (33) 137
'$' (36) 167
'%' (37) 122 133
'(' (40) 27 39 40 41 42 43 44 55 72 75 76 128 138 139 140 152
')' (41) 55 173
'*' (42) 120 131
'+' (43) 66 123 134 149
',' (44) 15 178
'-' (45) 65 124 135 148
'/' (47) 29 121 132
':' (58) 106 177
';' (59) 176
'<' (60) 82 112
'>' (62) 114
'?' (63) 106
'@' (64) 9 24 151
'[' (91) 160
']' (93) 160
'^' (94) 119 130
'{' (123) 171
'}' (125) 172
error (256) 5 11 12 33 61 87 88 89 96 97 98 99
FUNC_CALL (258) 22 152
NAME (259) 21 42 54 55 85 86 164 165
REGEXP (260) 28
FILENAME (261) 10 11
YNUMBER (262) 64 65 66 146
YSTRING (263) 67 147
RELOP (264) 111
IO_OUT (265) 74
IO_IN (266) 129
ASSIGNOP (267) 109
ASSIGN (268) 108 110
MATCHOP (269) 103
CONCAT_OP (270)
SUBSCRIPT (271) 156 163
LEX_BEGIN (272) 16
LEX_END (273) 17
LEX_IF (274) 75 76
LEX_ELSE (275) 76
LEX_RETURN (276) 51
LEX_DELETE (277) 54 55
LEX_SWITCH (278) 39
LEX_CASE (279) 62
LEX_DEFAULT (280) 63
LEX_WHILE (281) 40 41
LEX_DO (282) 41
LEX_FOR (283) 42 43 44
LEX_BREAK (284) 46
LEX_CONTINUE (285) 47
LEX_PRINT (286) 69
LEX_PRINTF (287) 70
LEX_NEXT (288) 48
LEX_EXIT (289) 50
LEX_FUNCTION (290) 27
LEX_BEGINFILE (291) 18
LEX_ENDFILE (292) 19
LEX_GETLINE (293) 125 129
LEX_NEXTFILE (294) 49
LEX_IN (295) 42 104 128
LEX_AND (296) 101
LEX_OR (297) 102
INCREMENT (298) 126 144 168
DECREMENT (299) 127 145 169
LEX_BUILTIN (300) 25 139
LEX_LENGTH (301) 26 140 141
LEX_EOF (302) 4
LEX_INCLUDE (303) 9
LEX_EVAL (304) 24
NEWLINE (305) 77 78
SLASH_BEFORE_EQUAL (306) 30 110
UNARY (307)


Nonterminals, with rules where they appear

$accept (74)
    on left: 0
program (75)
    on left: 1 2 3 4 5, on right: 0 2 3 4 5
rule (76)
    on left: 6 7 8 9, on right: 2
source (77)
    on left: 10 11 12, on right: 9
pattern (78)
    on left: 13 14 15 16 17 18 19, on right: 6 7
action (79)
    on left: 20, on right: 6 8
func_name (80)
    on left: 21 22 23 24, on right: 27
lex_builtin (81)
    on left: 25 26, on right: 23
function_prologue (82)
    on left: 27, on right: 8
regexp (83)
    on left: 28, on right: 68 136
a_slash (84)
    on left: 29 30, on right: 28
statements (85)
    on left: 31 32 33, on right: 20 32 33 37 62 63
statement_term (86)
    on left: 34 35, on right: 7 9 46 47 48 49 50 51 52
statement (87)
    on left: 36 37 38 39 40 41 42 43 44 45, on right: 32 40 41 42 43
    44 75 76
non_compound_stmt (88)
    on left: 46 47 48 49 50 51 52, on right: 45
simple_stmt (89)
    on left: 53 54 55 56, on right: 52 58
opt_simple_stmt (90)
    on left: 57 58, on right: 43 44
case_statements (91)
    on left: 59 60 61, on right: 39 60 61
case_statement (92)
    on left: 62 63, on right: 60
case_value (93)
    on left: 64 65 66 67 68, on right: 62
print (94)
    on left: 69 70, on right: 53
print_expression_list (95)
    on left: 71 72, on right: 53
output_redir (96)
    on left: 73 74, on right: 53
if_statement (97)
    on left: 75 76, on right: 38
nls (98)
    on left: 77 78, on right: 3 34 78 80
opt_nls (99)
    on left: 79 80, on right: 15 20 27 35 36 39 40 41 42 43 44 62 63
    75 76 171 172 178
input_redir (100)
    on left: 81 82, on right: 125
opt_param_list (101)
    on left: 83 84, on right: 27
param_list (102)
    on left: 85 86 87 88 89, on right: 84 86 88 89
opt_exp (103)
    on left: 90 91, on right: 50 51
opt_expression_list (104)
    on left: 92 93, on right: 71 139 140 152
expression_list (105)
    on left: 94 95 96 97 98 99, on right: 72 93 95 97 98 99 128 160
exp (106)
    on left: 100 101 102 103 104 105 106 107, on right: 14 15 39 40
    41 43 56 75 76 91 94 95 98 100 101 102 103 104 105 106 138
assign_operator (107)
    on left: 108 109 110, on right: 100
relop_or_less (108)
    on left: 111 112, on right: 113
a_relop (109)
    on left: 113 114, on right: 105
common_exp (110)
    on left: 115 116 117, on right: 74 107 117 129
simp_exp (111)
    on left: 118 119 120 121 122 123 124 125 126 127 128, on right:
    82 115 117 119 120 121 122 123 124 130 131 132 133 134 135 137
    148 149
simp_exp_nc (112)
    on left: 129 130 131 132 133 134 135, on right: 116 130 131 132
    133 134 135
non_post_simp_exp (113)
    on left: 136 137 138 139 140 141 142 143 144 145 146 147 148 149,
    on right: 118 167
func_call (114)
    on left: 150 151, on right: 142
direct_func_call (115)
    on left: 152, on right: 150 151
opt_variable (116)
    on left: 153 154, on right: 125 129
delete_subscript_list (117)
    on left: 155 156, on right: 54
delete_subscript (118)
    on left: 157 158, on right: 156 158
delete_exp_list (119)
    on left: 159, on right: 157 158
bracketed_exp_list (120)
    on left: 160, on right: 159 161 162
subscript (121)
    on left: 161 162, on right: 162 163
subscript_list (122)
    on left: 163, on right: 165
simple_variable (123)
    on left: 164 165, on right: 42 104 128 166
variable (124)
    on left: 166 167, on right: 100 126 127 143 144 145 154
opt_incdec (125)
    on left: 168 169 170, on right: 167
l_brace (126)
    on left: 171, on right: 20 37 39
r_brace (127)
    on left: 172, on right: 20 37 39
r_paren (128)
    on left: 173, on right: 27 39 40 41 42 43 44 72 75 76 128 138 139
    140 152
opt_semi (129)
    on left: 174 175, on right: 20
semi (130)
    on left: 176, on right: 35 36 43 44 175
colon (131)
    on left: 177, on right: 62 63
comma (132)
    on left: 178, on right: 86 89 95 99


state 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


state 1

    0 $accept: program . $end
    2 program: program . rule
    3        | program . nls
    4        | program . LEX_EOF
    5        | program . error

    $end                shift, and go to state 2
    error               shift, and go to state 3
    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_BEGIN           shift, and go to state 8
    LEX_END             shift, and go to state 9
    LEX_FUNCTION        shift, and go to state 10
    LEX_BEGINFILE       shift, and go to state 11
    LEX_ENDFILE         shift, and go to state 12
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    LEX_EOF             shift, and go to state 18
    NEWLINE             shift, and go to state 19
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 27

    NEWLINE  [reduce using rule 13 (pattern)]
    '{'      reduce using rule 13 (pattern)
    ';'      reduce using rule 13 (pattern)

    rule               go to state 28
    pattern            go to state 29
    function_prologue  go to state 30
    regexp             go to state 31
    a_slash            go to state 32
    nls                go to state 33
    exp                go to state 34
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 2

    0 $accept: program $end .

    $default  accept


state 3

    5 program: program error .

    $default  reduce using rule 5 (program)


state 4

  152 direct_func_call: FUNC_CALL . '(' opt_expression_list r_paren

    '('  shift, and go to state 43


state 5

  164 simple_variable: NAME .
  165                | NAME . subscript_list

    '['  shift, and go to state 44

    $default  reduce using rule 164 (simple_variable)

    bracketed_exp_list  go to state 45
    subscript           go to state 46
    subscript_list      go to state 47


state 6

  146 non_post_simp_exp: YNUMBER .

    $default  reduce using rule 146 (non_post_simp_exp)


state 7

  147 non_post_simp_exp: YSTRING .

    $default  reduce using rule 147 (non_post_simp_exp)


state 8

   16 pattern: LEX_BEGIN .

    $default  reduce using rule 16 (pattern)


state 9

   17 pattern: LEX_END .

    $default  reduce using rule 17 (pattern)


state 10

   27 function_prologue: LEX_FUNCTION . func_name '(' opt_param_list r_paren opt_nls

    FUNC_CALL    shift, and go to state 48
    NAME         shift, and go to state 49
    LEX_BUILTIN  shift, and go to state 50
    LEX_LENGTH   shift, and go to state 51
    '@'          shift, and go to state 52

    func_name    go to state 53
    lex_builtin  go to state 54


state 11

   18 pattern: LEX_BEGINFILE .

    $default  reduce using rule 18 (pattern)


state 12

   19 pattern: LEX_ENDFILE .

    $default  reduce using rule 19 (pattern)


state 13

  125 simp_exp: LEX_GETLINE . opt_variable input_redir

    NAME  shift, and go to state 5
    '$'   shift, and go to state 25

    NAME      [reduce using rule 153 (opt_variable)]
    '$'       [reduce using rule 153 (opt_variable)]
    $default  reduce using rule 153 (opt_variable)

    opt_variable     go to state 55
    simple_variable  go to state 41
    variable         go to state 56


state 14

  144 non_post_simp_exp: INCREMENT . variable

    NAME  shift, and go to state 5
    '$'   shift, and go to state 25

    simple_variable  go to state 41
    variable         go to state 57


state 15

  145 non_post_simp_exp: DECREMENT . variable

    NAME  shift, and go to state 5
    '$'   shift, and go to state 25

    simple_variable  go to state 41
    variable         go to state 58


state 16

  139 non_post_simp_exp: LEX_BUILTIN . '(' opt_expression_list r_paren

    '('  shift, and go to state 59


state 17

  140 non_post_simp_exp: LEX_LENGTH . '(' opt_expression_list r_paren
  141                  | LEX_LENGTH .

    '('  shift, and go to state 60

    $default  reduce using rule 141 (non_post_simp_exp)


state 18

    4 program: program LEX_EOF .

    $default  reduce using rule 4 (program)


state 19

   77 nls: NEWLINE .

    $default  reduce using rule 77 (nls)


state 20

   30 a_slash: SLASH_BEFORE_EQUAL .

    $default  reduce using rule 30 (a_slash)


state 21

  149 non_post_simp_exp: '+' . simp_exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    regexp             go to state 31
    a_slash            go to state 32
    simp_exp           go to state 62
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 63


state 22

  148 non_post_simp_exp: '-' . simp_exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    regexp             go to state 31
    a_slash            go to state 32
    simp_exp           go to state 64
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 63


state 23

   29 a_slash: '/' .

    $default  reduce using rule 29 (a_slash)


state 24

  137 non_post_simp_exp: '!' . simp_exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    regexp             go to state 31
    a_slash            go to state 32
    simp_exp           go to state 65
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 63


state 25

  167 variable: '$' . non_post_simp_exp opt_incdec

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 66
    '@'                 shift, and go to state 61

    regexp             go to state 31
    a_slash            go to state 32
    non_post_simp_exp  go to state 67
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 68


state 26

  128 simp_exp: '(' . expression_list r_paren LEX_IN simple_variable
  138 non_post_simp_exp: '(' . exp r_paren

    error               shift, and go to state 69
    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    regexp             go to state 31
    a_slash            go to state 32
    expression_list    go to state 70
    exp                go to state 71
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 27

    9 rule: '@' . LEX_INCLUDE source statement_term
  151 func_call: '@' . direct_func_call

    FUNC_CALL    shift, and go to state 4
    LEX_INCLUDE  shift, and go to state 72

    direct_func_call  go to state 73


state 28

    2 program: program rule .

    $default  reduce using rule 2 (program)


state 29

    6 rule: pattern . action
    7     | pattern . statement_term

    NEWLINE  shift, and go to state 19
    '{'      shift, and go to state 74
    ';'      shift, and go to state 75

    action          go to state 76
    statement_term  go to state 77
    nls             go to state 78
    l_brace         go to state 79
    semi            go to state 80


state 30

    8 rule: function_prologue . action

    '{'  shift, and go to state 74

    action   go to state 81
    l_brace  go to state 79


state 31

  136 non_post_simp_exp: regexp .

    $default  reduce using rule 136 (non_post_simp_exp)


state 32

   28 regexp: a_slash . REGEXP

    REGEXP  shift, and go to state 82


state 33

    3 program: program nls .
   78 nls: nls . NEWLINE

    NEWLINE  shift, and go to state 83

    NEWLINE   [reduce using rule 3 (program)]
    $default  reduce using rule 3 (program)


state 34

   14 pattern: exp .
   15        | exp . ',' opt_nls exp
  101 exp: exp . LEX_AND exp
  102    | exp . LEX_OR exp
  103    | exp . MATCHOP exp
  104    | exp . LEX_IN simple_variable
  105    | exp . a_relop exp
  106    | exp . '?' exp ':' exp

    RELOP    shift, and go to state 84
    MATCHOP  shift, and go to state 85
    LEX_IN   shift, and go to state 86
    LEX_AND  shift, and go to state 87
    LEX_OR   shift, and go to state 88
    '?'      shift, and go to state 89
    ','      shift, and go to state 90
    '<'      shift, and go to state 91
    '>'      shift, and go to state 92

    $default  reduce using rule 14 (pattern)

    relop_or_less  go to state 93
    a_relop        go to state 94


state 35

  107 exp: common_exp .
  117 common_exp: common_exp . simp_exp
  129 simp_exp_nc: common_exp . IO_IN LEX_GETLINE opt_variable

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    IO_IN               shift, and go to state 95
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    $default  reduce using rule 107 (exp)

    regexp             go to state 31
    a_slash            go to state 32
    simp_exp           go to state 96
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 63


state 36

  115 common_exp: simp_exp .
  119 simp_exp: simp_exp . '^' simp_exp
  120         | simp_exp . '*' simp_exp
  121         | simp_exp . '/' simp_exp
  122         | simp_exp . '%' simp_exp
  123         | simp_exp . '+' simp_exp
  124         | simp_exp . '-' simp_exp

    '+'  shift, and go to state 97
    '-'  shift, and go to state 98
    '*'  shift, and go to state 99
    '/'  shift, and go to state 100
    '%'  shift, and go to state 101
    '^'  shift, and go to state 102

    '+'       [reduce using rule 115 (common_exp)]
    '-'       [reduce using rule 115 (common_exp)]
    '/'       [reduce using rule 115 (common_exp)]
    $default  reduce using rule 115 (common_exp)


state 37

  116 common_exp: simp_exp_nc .
  130 simp_exp_nc: simp_exp_nc . '^' simp_exp
  131            | simp_exp_nc . '*' simp_exp
  132            | simp_exp_nc . '/' simp_exp
  133            | simp_exp_nc . '%' simp_exp
  134            | simp_exp_nc . '+' simp_exp
  135            | simp_exp_nc . '-' simp_exp

    '+'  shift, and go to state 103
    '-'  shift, and go to state 104
    '*'  shift, and go to state 105
    '/'  shift, and go to state 106
    '%'  shift, and go to state 107
    '^'  shift, and go to state 108

    '+'       [reduce using rule 116 (common_exp)]
    '-'       [reduce using rule 116 (common_exp)]
    '/'       [reduce using rule 116 (common_exp)]
    $default  reduce using rule 116 (common_exp)


state 38

  118 simp_exp: non_post_simp_exp .

    $default  reduce using rule 118 (simp_exp)


state 39

  142 non_post_simp_exp: func_call .

    $default  reduce using rule 142 (non_post_simp_exp)


state 40

  150 func_call: direct_func_call .

    $default  reduce using rule 150 (func_call)


state 41

  166 variable: simple_variable .

    $default  reduce using rule 166 (variable)


state 42

  100 exp: variable . assign_operator exp
  126 simp_exp: variable . INCREMENT
  127         | variable . DECREMENT
  143 non_post_simp_exp: variable .

    ASSIGNOP            shift, and go to state 109
    ASSIGN              shift, and go to state 110
    INCREMENT           shift, and go to state 111
    DECREMENT           shift, and go to state 112
    SLASH_BEFORE_EQUAL  shift, and go to state 113

    INCREMENT           [reduce using rule 143 (non_post_simp_exp)]
    DECREMENT           [reduce using rule 143 (non_post_simp_exp)]
    SLASH_BEFORE_EQUAL  [reduce using rule 143 (non_post_simp_exp)]
    $default            reduce using rule 143 (non_post_simp_exp)

    assign_operator  go to state 114


state 43

  152 direct_func_call: FUNC_CALL '(' . opt_expression_list r_paren

    error               shift, and go to state 69
    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    ')'  reduce using rule 92 (opt_expression_list)

    regexp               go to state 31
    a_slash              go to state 32
    opt_expression_list  go to state 115
    expression_list      go to state 116
    exp                  go to state 117
    common_exp           go to state 35
    simp_exp             go to state 36
    simp_exp_nc          go to state 37
    non_post_simp_exp    go to state 38
    func_call            go to state 39
    direct_func_call     go to state 40
    simple_variable      go to state 41
    variable             go to state 42


state 44

  160 bracketed_exp_list: '[' . expression_list ']'

    error               shift, and go to state 69
    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    regexp             go to state 31
    a_slash            go to state 32
    expression_list    go to state 118
    exp                go to state 117
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 45

  161 subscript: bracketed_exp_list .

    $default  reduce using rule 161 (subscript)


state 46

  162 subscript: subscript . bracketed_exp_list
  163 subscript_list: subscript . SUBSCRIPT

    SUBSCRIPT  shift, and go to state 119
    '['        shift, and go to state 44

    bracketed_exp_list  go to state 120


state 47

  165 simple_variable: NAME subscript_list .

    $default  reduce using rule 165 (simple_variable)


state 48

   22 func_name: FUNC_CALL .

    $default  reduce using rule 22 (func_name)


state 49

   21 func_name: NAME .

    $default  reduce using rule 21 (func_name)


state 50

   25 lex_builtin: LEX_BUILTIN .

    $default  reduce using rule 25 (lex_builtin)


state 51

   26 lex_builtin: LEX_LENGTH .

    $default  reduce using rule 26 (lex_builtin)


state 52

   24 func_name: '@' . LEX_EVAL

    LEX_EVAL  shift, and go to state 121


state 53

   27 function_prologue: LEX_FUNCTION func_name . '(' opt_param_list r_paren opt_nls

    '('  shift, and go to state 122


state 54

   23 func_name: lex_builtin .

    $default  reduce using rule 23 (func_name)


state 55

  125 simp_exp: LEX_GETLINE opt_variable . input_redir

    '<'  shift, and go to state 123

    '<'       [reduce using rule 81 (input_redir)]
    $default  reduce using rule 81 (input_redir)

    input_redir  go to state 124


state 56

  154 opt_variable: variable .

    $default  reduce using rule 154 (opt_variable)


state 57

  144 non_post_simp_exp: INCREMENT variable .

    $default  reduce using rule 144 (non_post_simp_exp)


state 58

  145 non_post_simp_exp: DECREMENT variable .

    $default  reduce using rule 145 (non_post_simp_exp)


state 59

  139 non_post_simp_exp: LEX_BUILTIN '(' . opt_expression_list r_paren

    error               shift, and go to state 69
    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    ')'  reduce using rule 92 (opt_expression_list)

    regexp               go to state 31
    a_slash              go to state 32
    opt_expression_list  go to state 125
    expression_list      go to state 116
    exp                  go to state 117
    common_exp           go to state 35
    simp_exp             go to state 36
    simp_exp_nc          go to state 37
    non_post_simp_exp    go to state 38
    func_call            go to state 39
    direct_func_call     go to state 40
    simple_variable      go to state 41
    variable             go to state 42


state 60

  140 non_post_simp_exp: LEX_LENGTH '(' . opt_expression_list r_paren

    error               shift, and go to state 69
    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    ')'  reduce using rule 92 (opt_expression_list)

    regexp               go to state 31
    a_slash              go to state 32
    opt_expression_list  go to state 126
    expression_list      go to state 116
    exp                  go to state 117
    common_exp           go to state 35
    simp_exp             go to state 36
    simp_exp_nc          go to state 37
    non_post_simp_exp    go to state 38
    func_call            go to state 39
    direct_func_call     go to state 40
    simple_variable      go to state 41
    variable             go to state 42


state 61

  151 func_call: '@' . direct_func_call

    FUNC_CALL  shift, and go to state 4

    direct_func_call  go to state 73


state 62

  119 simp_exp: simp_exp . '^' simp_exp
  120         | simp_exp . '*' simp_exp
  121         | simp_exp . '/' simp_exp
  122         | simp_exp . '%' simp_exp
  123         | simp_exp . '+' simp_exp
  124         | simp_exp . '-' simp_exp
  149 non_post_simp_exp: '+' simp_exp .

    '^'  shift, and go to state 102

    $default  reduce using rule 149 (non_post_simp_exp)


state 63

  126 simp_exp: variable . INCREMENT
  127         | variable . DECREMENT
  143 non_post_simp_exp: variable .

    INCREMENT  shift, and go to state 111
    DECREMENT  shift, and go to state 112

    INCREMENT  [reduce using rule 143 (non_post_simp_exp)]
    DECREMENT  [reduce using rule 143 (non_post_simp_exp)]
    $default   reduce using rule 143 (non_post_simp_exp)


state 64

  119 simp_exp: simp_exp . '^' simp_exp
  120         | simp_exp . '*' simp_exp
  121         | simp_exp . '/' simp_exp
  122         | simp_exp . '%' simp_exp
  123         | simp_exp . '+' simp_exp
  124         | simp_exp . '-' simp_exp
  148 non_post_simp_exp: '-' simp_exp .

    '^'  shift, and go to state 102

    $default  reduce using rule 148 (non_post_simp_exp)


state 65

  119 simp_exp: simp_exp . '^' simp_exp
  120         | simp_exp . '*' simp_exp
  121         | simp_exp . '/' simp_exp
  122         | simp_exp . '%' simp_exp
  123         | simp_exp . '+' simp_exp
  124         | simp_exp . '-' simp_exp
  137 non_post_simp_exp: '!' simp_exp .

    '^'  shift, and go to state 102

    $default  reduce using rule 137 (non_post_simp_exp)


state 66

  138 non_post_simp_exp: '(' . exp r_paren

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    regexp             go to state 31
    a_slash            go to state 32
    exp                go to state 127
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 67

  167 variable: '$' non_post_simp_exp . opt_incdec

    INCREMENT  shift, and go to state 128
    DECREMENT  shift, and go to state 129

    INCREMENT  [reduce using rule 170 (opt_incdec)]
    DECREMENT  [reduce using rule 170 (opt_incdec)]
    $default   reduce using rule 170 (opt_incdec)

    opt_incdec  go to state 130


state 68

  143 non_post_simp_exp: variable .

    $default  reduce using rule 143 (non_post_simp_exp)


state 69

   96 expression_list: error .

    $default  reduce using rule 96 (expression_list)


state 70

   95 expression_list: expression_list . comma exp
   97                | expression_list . error
   98                | expression_list . error exp
   99                | expression_list . comma error
  128 simp_exp: '(' expression_list . r_paren LEX_IN simple_variable

    error  shift, and go to state 131
    ','    shift, and go to state 132
    ')'    shift, and go to state 133

    r_paren  go to state 134
    comma    go to state 135


state 71

   94 expression_list: exp .
  101 exp: exp . LEX_AND exp
  102    | exp . LEX_OR exp
  103    | exp . MATCHOP exp
  104    | exp . LEX_IN simple_variable
  105    | exp . a_relop exp
  106    | exp . '?' exp ':' exp
  138 non_post_simp_exp: '(' exp . r_paren

    RELOP    shift, and go to state 84
    MATCHOP  shift, and go to state 85
    LEX_IN   shift, and go to state 86
    LEX_AND  shift, and go to state 87
    LEX_OR   shift, and go to state 88
    '?'      shift, and go to state 89
    '<'      shift, and go to state 91
    '>'      shift, and go to state 92
    ')'      shift, and go to state 133

    ')'       [reduce using rule 94 (expression_list)]
    $default  reduce using rule 94 (expression_list)

    relop_or_less  go to state 93
    a_relop        go to state 94
    r_paren        go to state 136


state 72

    9 rule: '@' LEX_INCLUDE . source statement_term

    error     shift, and go to state 137
    FILENAME  shift, and go to state 138

    source  go to state 139


state 73

  151 func_call: '@' direct_func_call .

    $default  reduce using rule 151 (func_call)


state 74

  171 l_brace: '{' . opt_nls

    NEWLINE  shift, and go to state 19

    NEWLINE   [reduce using rule 79 (opt_nls)]
    $default  reduce using rule 79 (opt_nls)

    nls      go to state 140
    opt_nls  go to state 141


state 75

  176 semi: ';' .

    $default  reduce using rule 176 (semi)


state 76

    6 rule: pattern action .

    $default  reduce using rule 6 (rule)


state 77

    7 rule: pattern statement_term .

    $default  reduce using rule 7 (rule)


state 78

   34 statement_term: nls .
   78 nls: nls . NEWLINE

    NEWLINE  shift, and go to state 83

    NEWLINE   [reduce using rule 34 (statement_term)]
    $default  reduce using rule 34 (statement_term)


state 79

   20 action: l_brace . statements r_brace opt_semi opt_nls

    $default  reduce using rule 31 (statements)

    statements  go to state 142


state 80

   35 statement_term: semi . opt_nls

    NEWLINE  shift, and go to state 19

    NEWLINE   [reduce using rule 79 (opt_nls)]
    $default  reduce using rule 79 (opt_nls)

    nls      go to state 140
    opt_nls  go to state 143


state 81

    8 rule: function_prologue action .

    $default  reduce using rule 8 (rule)


state 82

   28 regexp: a_slash REGEXP .

    $default  reduce using rule 28 (regexp)


state 83

   78 nls: nls NEWLINE .

    $default  reduce using rule 78 (nls)


state 84

  111 relop_or_less: RELOP .

    $default  reduce using rule 111 (relop_or_less)


state 85

  103 exp: exp MATCHOP . exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    regexp             go to state 31
    a_slash            go to state 32
    exp                go to state 144
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 86

  104 exp: exp LEX_IN . simple_variable

    NAME  shift, and go to state 5

    simple_variable  go to state 145


state 87

  101 exp: exp LEX_AND . exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    regexp             go to state 31
    a_slash            go to state 32
    exp                go to state 146
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 88

  102 exp: exp LEX_OR . exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    regexp             go to state 31
    a_slash            go to state 32
    exp                go to state 147
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 89

  106 exp: exp '?' . exp ':' exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    regexp             go to state 31
    a_slash            go to state 32
    exp                go to state 148
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 90

   15 pattern: exp ',' . opt_nls exp

    NEWLINE  shift, and go to state 19

    $default  reduce using rule 79 (opt_nls)

    nls      go to state 140
    opt_nls  go to state 149


state 91

  112 relop_or_less: '<' .

    $default  reduce using rule 112 (relop_or_less)


state 92

  114 a_relop: '>' .

    $default  reduce using rule 114 (a_relop)


state 93

  113 a_relop: relop_or_less .

    $default  reduce using rule 113 (a_relop)


state 94

  105 exp: exp a_relop . exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    regexp             go to state 31
    a_slash            go to state 32
    exp                go to state 150
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 95

  129 simp_exp_nc: common_exp IO_IN . LEX_GETLINE opt_variable

    LEX_GETLINE  shift, and go to state 151


state 96

  117 common_exp: common_exp simp_exp .
  119 simp_exp: simp_exp . '^' simp_exp
  120         | simp_exp . '*' simp_exp
  121         | simp_exp . '/' simp_exp
  122         | simp_exp . '%' simp_exp
  123         | simp_exp . '+' simp_exp
  124         | simp_exp . '-' simp_exp

    '+'  shift, and go to state 97
    '-'  shift, and go to state 98
    '*'  shift, and go to state 99
    '/'  shift, and go to state 100
    '%'  shift, and go to state 101
    '^'  shift, and go to state 102

    $default  reduce using rule 117 (common_exp)


state 97

  123 simp_exp: simp_exp '+' . simp_exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    regexp             go to state 31
    a_slash            go to state 32
    simp_exp           go to state 152
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 63


state 98

  124 simp_exp: simp_exp '-' . simp_exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    regexp             go to state 31
    a_slash            go to state 32
    simp_exp           go to state 153
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 63


state 99

  120 simp_exp: simp_exp '*' . simp_exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    regexp             go to state 31
    a_slash            go to state 32
    simp_exp           go to state 154
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 63


state 100

  121 simp_exp: simp_exp '/' . simp_exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    regexp             go to state 31
    a_slash            go to state 32
    simp_exp           go to state 155
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 63


state 101

  122 simp_exp: simp_exp '%' . simp_exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    regexp             go to state 31
    a_slash            go to state 32
    simp_exp           go to state 156
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 63


state 102

  119 simp_exp: simp_exp '^' . simp_exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    regexp             go to state 31
    a_slash            go to state 32
    simp_exp           go to state 157
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 63


state 103

  134 simp_exp_nc: simp_exp_nc '+' . simp_exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    regexp             go to state 31
    a_slash            go to state 32
    simp_exp           go to state 158
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 63


state 104

  135 simp_exp_nc: simp_exp_nc '-' . simp_exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    regexp             go to state 31
    a_slash            go to state 32
    simp_exp           go to state 159
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 63


state 105

  131 simp_exp_nc: simp_exp_nc '*' . simp_exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    regexp             go to state 31
    a_slash            go to state 32
    simp_exp           go to state 160
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 63


state 106

  132 simp_exp_nc: simp_exp_nc '/' . simp_exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    regexp             go to state 31
    a_slash            go to state 32
    simp_exp           go to state 161
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 63


state 107

  133 simp_exp_nc: simp_exp_nc '%' . simp_exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    regexp             go to state 31
    a_slash            go to state 32
    simp_exp           go to state 162
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 63


state 108

  130 simp_exp_nc: simp_exp_nc '^' . simp_exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    regexp             go to state 31
    a_slash            go to state 32
    simp_exp           go to state 163
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 63


state 109

  109 assign_operator: ASSIGNOP .

    $default  reduce using rule 109 (assign_operator)


state 110

  108 assign_operator: ASSIGN .

    $default  reduce using rule 108 (assign_operator)


state 111

  126 simp_exp: variable INCREMENT .

    $default  reduce using rule 126 (simp_exp)


state 112

  127 simp_exp: variable DECREMENT .

    $default  reduce using rule 127 (simp_exp)


state 113

  110 assign_operator: SLASH_BEFORE_EQUAL . ASSIGN

    ASSIGN  shift, and go to state 164


state 114

  100 exp: variable assign_operator . exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    regexp             go to state 31
    a_slash            go to state 32
    exp                go to state 165
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 115

  152 direct_func_call: FUNC_CALL '(' opt_expression_list . r_paren

    ')'  shift, and go to state 133

    r_paren  go to state 166


state 116

   93 opt_expression_list: expression_list .
   95 expression_list: expression_list . comma exp
   97                | expression_list . error
   98                | expression_list . error exp
   99                | expression_list . comma error

    error  shift, and go to state 131
    ','    shift, and go to state 132

    IO_OUT   reduce using rule 93 (opt_expression_list)
    NEWLINE  reduce using rule 93 (opt_expression_list)
    ')'      reduce using rule 93 (opt_expression_list)
    ';'      reduce using rule 93 (opt_expression_list)

    comma  go to state 135


state 117

   94 expression_list: exp .
  101 exp: exp . LEX_AND exp
  102    | exp . LEX_OR exp
  103    | exp . MATCHOP exp
  104    | exp . LEX_IN simple_variable
  105    | exp . a_relop exp
  106    | exp . '?' exp ':' exp

    RELOP    shift, and go to state 84
    MATCHOP  shift, and go to state 85
    LEX_IN   shift, and go to state 86
    LEX_AND  shift, and go to state 87
    LEX_OR   shift, and go to state 88
    '?'      shift, and go to state 89
    '<'      shift, and go to state 91
    '>'      shift, and go to state 92

    $default  reduce using rule 94 (expression_list)

    relop_or_less  go to state 93
    a_relop        go to state 94


state 118

   95 expression_list: expression_list . comma exp
   97                | expression_list . error
   98                | expression_list . error exp
   99                | expression_list . comma error
  160 bracketed_exp_list: '[' expression_list . ']'

    error  shift, and go to state 131
    ','    shift, and go to state 132
    ']'    shift, and go to state 167

    comma  go to state 135


state 119

  163 subscript_list: subscript SUBSCRIPT .

    $default  reduce using rule 163 (subscript_list)


state 120

  162 subscript: subscript bracketed_exp_list .

    $default  reduce using rule 162 (subscript)


state 121

   24 func_name: '@' LEX_EVAL .

    $default  reduce using rule 24 (func_name)


state 122

   27 function_prologue: LEX_FUNCTION func_name '(' . opt_param_list r_paren opt_nls

    error  shift, and go to state 168
    NAME   shift, and go to state 169

    ')'  reduce using rule 83 (opt_param_list)

    opt_param_list  go to state 170
    param_list      go to state 171


state 123

   82 input_redir: '<' . simp_exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    regexp             go to state 31
    a_slash            go to state 32
    simp_exp           go to state 172
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 63


state 124

  125 simp_exp: LEX_GETLINE opt_variable input_redir .

    $default  reduce using rule 125 (simp_exp)


state 125

  139 non_post_simp_exp: LEX_BUILTIN '(' opt_expression_list . r_paren

    ')'  shift, and go to state 133

    r_paren  go to state 173


state 126

  140 non_post_simp_exp: LEX_LENGTH '(' opt_expression_list . r_paren

    ')'  shift, and go to state 133

    r_paren  go to state 174


state 127

  101 exp: exp . LEX_AND exp
  102    | exp . LEX_OR exp
  103    | exp . MATCHOP exp
  104    | exp . LEX_IN simple_variable
  105    | exp . a_relop exp
  106    | exp . '?' exp ':' exp
  138 non_post_simp_exp: '(' exp . r_paren

    RELOP    shift, and go to state 84
    MATCHOP  shift, and go to state 85
    LEX_IN   shift, and go to state 86
    LEX_AND  shift, and go to state 87
    LEX_OR   shift, and go to state 88
    '?'      shift, and go to state 89
    '<'      shift, and go to state 91
    '>'      shift, and go to state 92
    ')'      shift, and go to state 133

    relop_or_less  go to state 93
    a_relop        go to state 94
    r_paren        go to state 136


state 128

  168 opt_incdec: INCREMENT .

    $default  reduce using rule 168 (opt_incdec)


state 129

  169 opt_incdec: DECREMENT .

    $default  reduce using rule 169 (opt_incdec)


state 130

  167 variable: '$' non_post_simp_exp opt_incdec .

    $default  reduce using rule 167 (variable)


state 131

   97 expression_list: expression_list error .
   98                | expression_list error . exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    $default  reduce using rule 97 (expression_list)

    regexp             go to state 31
    a_slash            go to state 32
    exp                go to state 175
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 132

  178 comma: ',' . opt_nls

    NEWLINE  shift, and go to state 19

    $default  reduce using rule 79 (opt_nls)

    nls      go to state 140
    opt_nls  go to state 176


state 133

  173 r_paren: ')' .

    $default  reduce using rule 173 (r_paren)


state 134

  128 simp_exp: '(' expression_list r_paren . LEX_IN simple_variable

    LEX_IN  shift, and go to state 177


state 135

   95 expression_list: expression_list comma . exp
   99                | expression_list comma . error

    error               shift, and go to state 178
    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    regexp             go to state 31
    a_slash            go to state 32
    exp                go to state 179
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 136

  138 non_post_simp_exp: '(' exp r_paren .

    $default  reduce using rule 138 (non_post_simp_exp)


state 137

   12 source: error .

    $default  reduce using rule 12 (source)


state 138

   10 source: FILENAME .
   11       | FILENAME . error

    error  shift, and go to state 180

    NEWLINE  reduce using rule 10 (source)
    ';'      reduce using rule 10 (source)


state 139

    9 rule: '@' LEX_INCLUDE source . statement_term

    NEWLINE  shift, and go to state 19
    ';'      shift, and go to state 75

    statement_term  go to state 181
    nls             go to state 78
    semi            go to state 80


state 140

   78 nls: nls . NEWLINE
   80 opt_nls: nls .

    NEWLINE  shift, and go to state 83

    NEWLINE   [reduce using rule 80 (opt_nls)]
    $default  reduce using rule 80 (opt_nls)


state 141

  171 l_brace: '{' opt_nls .

    $default  reduce using rule 171 (l_brace)


state 142

   20 action: l_brace statements . r_brace opt_semi opt_nls
   32 statements: statements . statement
   33           | statements . error

    error               shift, and go to state 182
    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_IF              shift, and go to state 183
    LEX_RETURN          shift, and go to state 184
    LEX_DELETE          shift, and go to state 185
    LEX_SWITCH          shift, and go to state 186
    LEX_WHILE           shift, and go to state 187
    LEX_DO              shift, and go to state 188
    LEX_FOR             shift, and go to state 189
    LEX_BREAK           shift, and go to state 190
    LEX_CONTINUE        shift, and go to state 191
    LEX_PRINT           shift, and go to state 192
    LEX_PRINTF          shift, and go to state 193
    LEX_NEXT            shift, and go to state 194
    LEX_EXIT            shift, and go to state 195
    LEX_GETLINE         shift, and go to state 13
    LEX_NEXTFILE        shift, and go to state 196
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61
    '{'                 shift, and go to state 74
    '}'                 shift, and go to state 197
    ';'                 shift, and go to state 75

    regexp             go to state 31
    a_slash            go to state 32
    statement          go to state 198
    non_compound_stmt  go to state 199
    simple_stmt        go to state 200
    print              go to state 201
    if_statement       go to state 202
    exp                go to state 203
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42
    l_brace            go to state 204
    r_brace            go to state 205
    semi               go to state 206


state 143

   35 statement_term: semi opt_nls .

    $default  reduce using rule 35 (statement_term)


state 144

  101 exp: exp . LEX_AND exp
  102    | exp . LEX_OR exp
  103    | exp . MATCHOP exp
  103    | exp MATCHOP exp .
  104    | exp . LEX_IN simple_variable
  105    | exp . a_relop exp
  106    | exp . '?' exp ':' exp

    RELOP  shift, and go to state 84
    '<'    shift, and go to state 91
    '>'    shift, and go to state 92

    $default  reduce using rule 103 (exp)

    relop_or_less  go to state 93
    a_relop        go to state 94


state 145

  104 exp: exp LEX_IN simple_variable .

    $default  reduce using rule 104 (exp)


state 146

  101 exp: exp . LEX_AND exp
  101    | exp LEX_AND exp .
  102    | exp . LEX_OR exp
  103    | exp . MATCHOP exp
  104    | exp . LEX_IN simple_variable
  105    | exp . a_relop exp
  106    | exp . '?' exp ':' exp

    RELOP    shift, and go to state 84
    MATCHOP  shift, and go to state 85
    LEX_IN   shift, and go to state 86
    '<'      shift, and go to state 91
    '>'      shift, and go to state 92

    $default  reduce using rule 101 (exp)

    relop_or_less  go to state 93
    a_relop        go to state 94


state 147

  101 exp: exp . LEX_AND exp
  102    | exp . LEX_OR exp
  102    | exp LEX_OR exp .
  103    | exp . MATCHOP exp
  104    | exp . LEX_IN simple_variable
  105    | exp . a_relop exp
  106    | exp . '?' exp ':' exp

    RELOP    shift, and go to state 84
    MATCHOP  shift, and go to state 85
    LEX_IN   shift, and go to state 86
    LEX_AND  shift, and go to state 87
    '<'      shift, and go to state 91
    '>'      shift, and go to state 92

    $default  reduce using rule 102 (exp)

    relop_or_less  go to state 93
    a_relop        go to state 94


state 148

  101 exp: exp . LEX_AND exp
  102    | exp . LEX_OR exp
  103    | exp . MATCHOP exp
  104    | exp . LEX_IN simple_variable
  105    | exp . a_relop exp
  106    | exp . '?' exp ':' exp
  106    | exp '?' exp . ':' exp

    RELOP    shift, and go to state 84
    MATCHOP  shift, and go to state 85
    LEX_IN   shift, and go to state 86
    LEX_AND  shift, and go to state 87
    LEX_OR   shift, and go to state 88
    '?'      shift, and go to state 89
    ':'      shift, and go to state 207
    '<'      shift, and go to state 91
    '>'      shift, and go to state 92

    relop_or_less  go to state 93
    a_relop        go to state 94


state 149

   15 pattern: exp ',' opt_nls . exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    regexp             go to state 31
    a_slash            go to state 32
    exp                go to state 208
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 150

  101 exp: exp . LEX_AND exp
  102    | exp . LEX_OR exp
  103    | exp . MATCHOP exp
  104    | exp . LEX_IN simple_variable
  105    | exp . a_relop exp
  105    | exp a_relop exp .
  106    | exp . '?' exp ':' exp

    RELOP  error (nonassociative)
    '<'    error (nonassociative)
    '>'    error (nonassociative)

    $default  reduce using rule 105 (exp)

    relop_or_less  go to state 93
    a_relop        go to state 94


state 151

  129 simp_exp_nc: common_exp IO_IN LEX_GETLINE . opt_variable

    NAME  shift, and go to state 5
    '$'   shift, and go to state 25

    NAME      [reduce using rule 153 (opt_variable)]
    '$'       [reduce using rule 153 (opt_variable)]
    $default  reduce using rule 153 (opt_variable)

    opt_variable     go to state 209
    simple_variable  go to state 41
    variable         go to state 56


state 152

  119 simp_exp: simp_exp . '^' simp_exp
  120         | simp_exp . '*' simp_exp
  121         | simp_exp . '/' simp_exp
  122         | simp_exp . '%' simp_exp
  123         | simp_exp . '+' simp_exp
  123         | simp_exp '+' simp_exp .
  124         | simp_exp . '-' simp_exp

    '*'  shift, and go to state 99
    '/'  shift, and go to state 100
    '%'  shift, and go to state 101
    '^'  shift, and go to state 102

    $default  reduce using rule 123 (simp_exp)


state 153

  119 simp_exp: simp_exp . '^' simp_exp
  120         | simp_exp . '*' simp_exp
  121         | simp_exp . '/' simp_exp
  122         | simp_exp . '%' simp_exp
  123         | simp_exp . '+' simp_exp
  124         | simp_exp . '-' simp_exp
  124         | simp_exp '-' simp_exp .

    '*'  shift, and go to state 99
    '/'  shift, and go to state 100
    '%'  shift, and go to state 101
    '^'  shift, and go to state 102

    $default  reduce using rule 124 (simp_exp)


state 154

  119 simp_exp: simp_exp . '^' simp_exp
  120         | simp_exp . '*' simp_exp
  120         | simp_exp '*' simp_exp .
  121         | simp_exp . '/' simp_exp
  122         | simp_exp . '%' simp_exp
  123         | simp_exp . '+' simp_exp
  124         | simp_exp . '-' simp_exp

    '^'  shift, and go to state 102

    $default  reduce using rule 120 (simp_exp)


state 155

  119 simp_exp: simp_exp . '^' simp_exp
  120         | simp_exp . '*' simp_exp
  121         | simp_exp . '/' simp_exp
  121         | simp_exp '/' simp_exp .
  122         | simp_exp . '%' simp_exp
  123         | simp_exp . '+' simp_exp
  124         | simp_exp . '-' simp_exp

    '^'  shift, and go to state 102

    $default  reduce using rule 121 (simp_exp)


state 156

  119 simp_exp: simp_exp . '^' simp_exp
  120         | simp_exp . '*' simp_exp
  121         | simp_exp . '/' simp_exp
  122         | simp_exp . '%' simp_exp
  122         | simp_exp '%' simp_exp .
  123         | simp_exp . '+' simp_exp
  124         | simp_exp . '-' simp_exp

    '^'  shift, and go to state 102

    $default  reduce using rule 122 (simp_exp)


state 157

  119 simp_exp: simp_exp . '^' simp_exp
  119         | simp_exp '^' simp_exp .
  120         | simp_exp . '*' simp_exp
  121         | simp_exp . '/' simp_exp
  122         | simp_exp . '%' simp_exp
  123         | simp_exp . '+' simp_exp
  124         | simp_exp . '-' simp_exp

    '^'  shift, and go to state 102

    $default  reduce using rule 119 (simp_exp)


state 158

  119 simp_exp: simp_exp . '^' simp_exp
  120         | simp_exp . '*' simp_exp
  121         | simp_exp . '/' simp_exp
  122         | simp_exp . '%' simp_exp
  123         | simp_exp . '+' simp_exp
  124         | simp_exp . '-' simp_exp
  134 simp_exp_nc: simp_exp_nc '+' simp_exp .

    '*'  shift, and go to state 99
    '/'  shift, and go to state 100
    '%'  shift, and go to state 101
    '^'  shift, and go to state 102

    $default  reduce using rule 134 (simp_exp_nc)


state 159

  119 simp_exp: simp_exp . '^' simp_exp
  120         | simp_exp . '*' simp_exp
  121         | simp_exp . '/' simp_exp
  122         | simp_exp . '%' simp_exp
  123         | simp_exp . '+' simp_exp
  124         | simp_exp . '-' simp_exp
  135 simp_exp_nc: simp_exp_nc '-' simp_exp .

    '*'  shift, and go to state 99
    '/'  shift, and go to state 100
    '%'  shift, and go to state 101
    '^'  shift, and go to state 102

    $default  reduce using rule 135 (simp_exp_nc)


state 160

  119 simp_exp: simp_exp . '^' simp_exp
  120         | simp_exp . '*' simp_exp
  121         | simp_exp . '/' simp_exp
  122         | simp_exp . '%' simp_exp
  123         | simp_exp . '+' simp_exp
  124         | simp_exp . '-' simp_exp
  131 simp_exp_nc: simp_exp_nc '*' simp_exp .

    '^'  shift, and go to state 102

    $default  reduce using rule 131 (simp_exp_nc)


state 161

  119 simp_exp: simp_exp . '^' simp_exp
  120         | simp_exp . '*' simp_exp
  121         | simp_exp . '/' simp_exp
  122         | simp_exp . '%' simp_exp
  123         | simp_exp . '+' simp_exp
  124         | simp_exp . '-' simp_exp
  132 simp_exp_nc: simp_exp_nc '/' simp_exp .

    '^'  shift, and go to state 102

    $default  reduce using rule 132 (simp_exp_nc)


state 162

  119 simp_exp: simp_exp . '^' simp_exp
  120         | simp_exp . '*' simp_exp
  121         | simp_exp . '/' simp_exp
  122         | simp_exp . '%' simp_exp
  123         | simp_exp . '+' simp_exp
  124         | simp_exp . '-' simp_exp
  133 simp_exp_nc: simp_exp_nc '%' simp_exp .

    '^'  shift, and go to state 102

    $default  reduce using rule 133 (simp_exp_nc)


state 163

  119 simp_exp: simp_exp . '^' simp_exp
  120         | simp_exp . '*' simp_exp
  121         | simp_exp . '/' simp_exp
  122         | simp_exp . '%' simp_exp
  123         | simp_exp . '+' simp_exp
  124         | simp_exp . '-' simp_exp
  130 simp_exp_nc: simp_exp_nc '^' simp_exp .

    '^'  shift, and go to state 102

    $default  reduce using rule 130 (simp_exp_nc)


state 164

  110 assign_operator: SLASH_BEFORE_EQUAL ASSIGN .

    $default  reduce using rule 110 (assign_operator)


state 165

  100 exp: variable assign_operator exp .
  101    | exp . LEX_AND exp
  102    | exp . LEX_OR exp
  103    | exp . MATCHOP exp
  104    | exp . LEX_IN simple_variable
  105    | exp . a_relop exp
  106    | exp . '?' exp ':' exp

    RELOP    shift, and go to state 84
    MATCHOP  shift, and go to state 85
    LEX_IN   shift, and go to state 86
    LEX_AND  shift, and go to state 87
    LEX_OR   shift, and go to state 88
    '?'      shift, and go to state 89
    '<'      shift, and go to state 91
    '>'      shift, and go to state 92

    $default  reduce using rule 100 (exp)

    relop_or_less  go to state 93
    a_relop        go to state 94


state 166

  152 direct_func_call: FUNC_CALL '(' opt_expression_list r_paren .

    $default  reduce using rule 152 (direct_func_call)


state 167

  160 bracketed_exp_list: '[' expression_list ']' .

    $default  reduce using rule 160 (bracketed_exp_list)


state 168

   87 param_list: error .

    $default  reduce using rule 87 (param_list)


state 169

   85 param_list: NAME .

    $default  reduce using rule 85 (param_list)


state 170

   27 function_prologue: LEX_FUNCTION func_name '(' opt_param_list . r_paren opt_nls

    ')'  shift, and go to state 133

    r_paren  go to state 210


state 171

   84 opt_param_list: param_list .
   86 param_list: param_list . comma NAME
   88           | param_list . error
   89           | param_list . comma error

    error  shift, and go to state 211
    ','    shift, and go to state 132

    ')'  reduce using rule 84 (opt_param_list)

    comma  go to state 212


state 172

   82 input_redir: '<' simp_exp .
  119 simp_exp: simp_exp . '^' simp_exp
  120         | simp_exp . '*' simp_exp
  121         | simp_exp . '/' simp_exp
  122         | simp_exp . '%' simp_exp
  123         | simp_exp . '+' simp_exp
  124         | simp_exp . '-' simp_exp

    '+'  shift, and go to state 97
    '-'  shift, and go to state 98
    '*'  shift, and go to state 99
    '/'  shift, and go to state 100
    '%'  shift, and go to state 101
    '^'  shift, and go to state 102

    $default  reduce using rule 82 (input_redir)


state 173

  139 non_post_simp_exp: LEX_BUILTIN '(' opt_expression_list r_paren .

    $default  reduce using rule 139 (non_post_simp_exp)


state 174

  140 non_post_simp_exp: LEX_LENGTH '(' opt_expression_list r_paren .

    $default  reduce using rule 140 (non_post_simp_exp)


state 175

   98 expression_list: expression_list error exp .
  101 exp: exp . LEX_AND exp
  102    | exp . LEX_OR exp
  103    | exp . MATCHOP exp
  104    | exp . LEX_IN simple_variable
  105    | exp . a_relop exp
  106    | exp . '?' exp ':' exp

    RELOP    shift, and go to state 84
    MATCHOP  shift, and go to state 85
    LEX_IN   shift, and go to state 86
    LEX_AND  shift, and go to state 87
    LEX_OR   shift, and go to state 88
    '?'      shift, and go to state 89
    '<'      shift, and go to state 91
    '>'      shift, and go to state 92

    $default  reduce using rule 98 (expression_list)

    relop_or_less  go to state 93
    a_relop        go to state 94


state 176

  178 comma: ',' opt_nls .

    $default  reduce using rule 178 (comma)


state 177

  128 simp_exp: '(' expression_list r_paren LEX_IN . simple_variable

    NAME  shift, and go to state 5

    simple_variable  go to state 213


state 178

   99 expression_list: expression_list comma error .

    $default  reduce using rule 99 (expression_list)


state 179

   95 expression_list: expression_list comma exp .
  101 exp: exp . LEX_AND exp
  102    | exp . LEX_OR exp
  103    | exp . MATCHOP exp
  104    | exp . LEX_IN simple_variable
  105    | exp . a_relop exp
  106    | exp . '?' exp ':' exp

    RELOP    shift, and go to state 84
    MATCHOP  shift, and go to state 85
    LEX_IN   shift, and go to state 86
    LEX_AND  shift, and go to state 87
    LEX_OR   shift, and go to state 88
    '?'      shift, and go to state 89
    '<'      shift, and go to state 91
    '>'      shift, and go to state 92

    $default  reduce using rule 95 (expression_list)

    relop_or_less  go to state 93
    a_relop        go to state 94


state 180

   11 source: FILENAME error .

    $default  reduce using rule 11 (source)


state 181

    9 rule: '@' LEX_INCLUDE source statement_term .

    $default  reduce using rule 9 (rule)


state 182

   33 statements: statements error .

    $default  reduce using rule 33 (statements)


state 183

   75 if_statement: LEX_IF . '(' exp r_paren opt_nls statement
   76             | LEX_IF . '(' exp r_paren opt_nls statement LEX_ELSE opt_nls statement

    '('  shift, and go to state 214


state 184

   51 non_compound_stmt: LEX_RETURN . opt_exp statement_term

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    $default  reduce using rule 90 (opt_exp)

    regexp             go to state 31
    a_slash            go to state 32
    opt_exp            go to state 215
    exp                go to state 216
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 185

   54 simple_stmt: LEX_DELETE . NAME delete_subscript_list
   55            | LEX_DELETE . '(' NAME ')'

    NAME  shift, and go to state 217
    '('   shift, and go to state 218


state 186

   39 statement: LEX_SWITCH . '(' exp r_paren opt_nls l_brace case_statements opt_nls r_brace

    '('  shift, and go to state 219


state 187

   40 statement: LEX_WHILE . '(' exp r_paren opt_nls statement

    '('  shift, and go to state 220


state 188

   41 statement: LEX_DO . opt_nls statement LEX_WHILE '(' exp r_paren opt_nls

    NEWLINE  shift, and go to state 19

    $default  reduce using rule 79 (opt_nls)

    nls      go to state 140
    opt_nls  go to state 221


state 189

   42 statement: LEX_FOR . '(' NAME LEX_IN simple_variable r_paren opt_nls statement
   43          | LEX_FOR . '(' opt_simple_stmt semi opt_nls exp semi opt_nls opt_simple_stmt r_paren opt_nls statement
   44          | LEX_FOR . '(' opt_simple_stmt semi opt_nls semi opt_nls opt_simple_stmt r_paren opt_nls statement

    '('  shift, and go to state 222


state 190

   46 non_compound_stmt: LEX_BREAK . statement_term

    NEWLINE  shift, and go to state 19
    ';'      shift, and go to state 75

    statement_term  go to state 223
    nls             go to state 78
    semi            go to state 80


state 191

   47 non_compound_stmt: LEX_CONTINUE . statement_term

    NEWLINE  shift, and go to state 19
    ';'      shift, and go to state 75

    statement_term  go to state 224
    nls             go to state 78
    semi            go to state 80


state 192

   69 print: LEX_PRINT .

    $default  reduce using rule 69 (print)


state 193

   70 print: LEX_PRINTF .

    $default  reduce using rule 70 (print)


state 194

   48 non_compound_stmt: LEX_NEXT . statement_term

    NEWLINE  shift, and go to state 19
    ';'      shift, and go to state 75

    statement_term  go to state 225
    nls             go to state 78
    semi            go to state 80


state 195

   50 non_compound_stmt: LEX_EXIT . opt_exp statement_term

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    $default  reduce using rule 90 (opt_exp)

    regexp             go to state 31
    a_slash            go to state 32
    opt_exp            go to state 226
    exp                go to state 216
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 196

   49 non_compound_stmt: LEX_NEXTFILE . statement_term

    NEWLINE  shift, and go to state 19
    ';'      shift, and go to state 75

    statement_term  go to state 227
    nls             go to state 78
    semi            go to state 80


state 197

  172 r_brace: '}' . opt_nls

    NEWLINE  shift, and go to state 19

    NEWLINE   [reduce using rule 79 (opt_nls)]
    $default  reduce using rule 79 (opt_nls)

    nls      go to state 140
    opt_nls  go to state 228


state 198

   32 statements: statements statement .

    $default  reduce using rule 32 (statements)


state 199

   45 statement: non_compound_stmt .

    $default  reduce using rule 45 (statement)


state 200

   52 non_compound_stmt: simple_stmt . statement_term

    NEWLINE  shift, and go to state 19
    ';'      shift, and go to state 75

    statement_term  go to state 229
    nls             go to state 78
    semi            go to state 80


state 201

   53 simple_stmt: print . print_expression_list output_redir

    error               shift, and go to state 69
    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 230
    '@'                 shift, and go to state 61

    IO_OUT   reduce using rule 92 (opt_expression_list)
    NEWLINE  reduce using rule 92 (opt_expression_list)
    ')'      reduce using rule 92 (opt_expression_list)
    ';'      reduce using rule 92 (opt_expression_list)

    regexp                 go to state 31
    a_slash                go to state 32
    print_expression_list  go to state 231
    opt_expression_list    go to state 232
    expression_list        go to state 116
    exp                    go to state 117
    common_exp             go to state 35
    simp_exp               go to state 36
    simp_exp_nc            go to state 37
    non_post_simp_exp      go to state 38
    func_call              go to state 39
    direct_func_call       go to state 40
    simple_variable        go to state 41
    variable               go to state 42


state 202

   38 statement: if_statement .

    $default  reduce using rule 38 (statement)


state 203

   56 simple_stmt: exp .
  101 exp: exp . LEX_AND exp
  102    | exp . LEX_OR exp
  103    | exp . MATCHOP exp
  104    | exp . LEX_IN simple_variable
  105    | exp . a_relop exp
  106    | exp . '?' exp ':' exp

    RELOP    shift, and go to state 84
    MATCHOP  shift, and go to state 85
    LEX_IN   shift, and go to state 86
    LEX_AND  shift, and go to state 87
    LEX_OR   shift, and go to state 88
    '?'      shift, and go to state 89
    '<'      shift, and go to state 91
    '>'      shift, and go to state 92

    $default  reduce using rule 56 (simple_stmt)

    relop_or_less  go to state 93
    a_relop        go to state 94


state 204

   37 statement: l_brace . statements r_brace

    $default  reduce using rule 31 (statements)

    statements  go to state 233


state 205

   20 action: l_brace statements r_brace . opt_semi opt_nls

    ';'  shift, and go to state 75

    ';'       [reduce using rule 174 (opt_semi)]
    $default  reduce using rule 174 (opt_semi)

    opt_semi  go to state 234
    semi      go to state 235


state 206

   36 statement: semi . opt_nls

    NEWLINE  shift, and go to state 19

    NEWLINE   [reduce using rule 79 (opt_nls)]
    $default  reduce using rule 79 (opt_nls)

    nls      go to state 140
    opt_nls  go to state 236


state 207

  106 exp: exp '?' exp ':' . exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    regexp             go to state 31
    a_slash            go to state 32
    exp                go to state 237
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 208

   15 pattern: exp ',' opt_nls exp .
  101 exp: exp . LEX_AND exp
  102    | exp . LEX_OR exp
  103    | exp . MATCHOP exp
  104    | exp . LEX_IN simple_variable
  105    | exp . a_relop exp
  106    | exp . '?' exp ':' exp

    RELOP    shift, and go to state 84
    MATCHOP  shift, and go to state 85
    LEX_IN   shift, and go to state 86
    LEX_AND  shift, and go to state 87
    LEX_OR   shift, and go to state 88
    '?'      shift, and go to state 89
    '<'      shift, and go to state 91
    '>'      shift, and go to state 92

    $default  reduce using rule 15 (pattern)

    relop_or_less  go to state 93
    a_relop        go to state 94


state 209

  129 simp_exp_nc: common_exp IO_IN LEX_GETLINE opt_variable .

    $default  reduce using rule 129 (simp_exp_nc)


state 210

   27 function_prologue: LEX_FUNCTION func_name '(' opt_param_list r_paren . opt_nls

    NEWLINE  shift, and go to state 19

    $default  reduce using rule 79 (opt_nls)

    nls      go to state 140
    opt_nls  go to state 238


state 211

   88 param_list: param_list error .

    $default  reduce using rule 88 (param_list)


state 212

   86 param_list: param_list comma . NAME
   89           | param_list comma . error

    error  shift, and go to state 239
    NAME   shift, and go to state 240


state 213

  128 simp_exp: '(' expression_list r_paren LEX_IN simple_variable .

    $default  reduce using rule 128 (simp_exp)


state 214

   75 if_statement: LEX_IF '(' . exp r_paren opt_nls statement
   76             | LEX_IF '(' . exp r_paren opt_nls statement LEX_ELSE opt_nls statement

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    regexp             go to state 31
    a_slash            go to state 32
    exp                go to state 241
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 215

   51 non_compound_stmt: LEX_RETURN opt_exp . statement_term

    NEWLINE  shift, and go to state 19
    ';'      shift, and go to state 75

    statement_term  go to state 242
    nls             go to state 78
    semi            go to state 80


state 216

   91 opt_exp: exp .
  101 exp: exp . LEX_AND exp
  102    | exp . LEX_OR exp
  103    | exp . MATCHOP exp
  104    | exp . LEX_IN simple_variable
  105    | exp . a_relop exp
  106    | exp . '?' exp ':' exp

    RELOP    shift, and go to state 84
    MATCHOP  shift, and go to state 85
    LEX_IN   shift, and go to state 86
    LEX_AND  shift, and go to state 87
    LEX_OR   shift, and go to state 88
    '?'      shift, and go to state 89
    '<'      shift, and go to state 91
    '>'      shift, and go to state 92

    $default  reduce using rule 91 (opt_exp)

    relop_or_less  go to state 93
    a_relop        go to state 94


state 217

   54 simple_stmt: LEX_DELETE NAME . delete_subscript_list

    '['  shift, and go to state 44

    $default  reduce using rule 155 (delete_subscript_list)

    delete_subscript_list  go to state 243
    delete_subscript       go to state 244
    delete_exp_list        go to state 245
    bracketed_exp_list     go to state 246


state 218

   55 simple_stmt: LEX_DELETE '(' . NAME ')'

    NAME  shift, and go to state 247


state 219

   39 statement: LEX_SWITCH '(' . exp r_paren opt_nls l_brace case_statements opt_nls r_brace

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    regexp             go to state 31
    a_slash            go to state 32
    exp                go to state 248
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 220

   40 statement: LEX_WHILE '(' . exp r_paren opt_nls statement

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    regexp             go to state 31
    a_slash            go to state 32
    exp                go to state 249
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 221

   41 statement: LEX_DO opt_nls . statement LEX_WHILE '(' exp r_paren opt_nls

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_IF              shift, and go to state 183
    LEX_RETURN          shift, and go to state 184
    LEX_DELETE          shift, and go to state 185
    LEX_SWITCH          shift, and go to state 186
    LEX_WHILE           shift, and go to state 187
    LEX_DO              shift, and go to state 188
    LEX_FOR             shift, and go to state 189
    LEX_BREAK           shift, and go to state 190
    LEX_CONTINUE        shift, and go to state 191
    LEX_PRINT           shift, and go to state 192
    LEX_PRINTF          shift, and go to state 193
    LEX_NEXT            shift, and go to state 194
    LEX_EXIT            shift, and go to state 195
    LEX_GETLINE         shift, and go to state 13
    LEX_NEXTFILE        shift, and go to state 196
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61
    '{'                 shift, and go to state 74
    ';'                 shift, and go to state 75

    regexp             go to state 31
    a_slash            go to state 32
    statement          go to state 250
    non_compound_stmt  go to state 199
    simple_stmt        go to state 200
    print              go to state 201
    if_statement       go to state 202
    exp                go to state 203
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42
    l_brace            go to state 204
    semi               go to state 206


state 222

   42 statement: LEX_FOR '(' . NAME LEX_IN simple_variable r_paren opt_nls statement
   43          | LEX_FOR '(' . opt_simple_stmt semi opt_nls exp semi opt_nls opt_simple_stmt r_paren opt_nls statement
   44          | LEX_FOR '(' . opt_simple_stmt semi opt_nls semi opt_nls opt_simple_stmt r_paren opt_nls statement

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 251
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_DELETE          shift, and go to state 185
    LEX_PRINT           shift, and go to state 192
    LEX_PRINTF          shift, and go to state 193
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    $default  reduce using rule 57 (opt_simple_stmt)

    regexp             go to state 31
    a_slash            go to state 32
    simple_stmt        go to state 252
    opt_simple_stmt    go to state 253
    print              go to state 201
    exp                go to state 203
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 223

   46 non_compound_stmt: LEX_BREAK statement_term .

    $default  reduce using rule 46 (non_compound_stmt)


state 224

   47 non_compound_stmt: LEX_CONTINUE statement_term .

    $default  reduce using rule 47 (non_compound_stmt)


state 225

   48 non_compound_stmt: LEX_NEXT statement_term .

    $default  reduce using rule 48 (non_compound_stmt)


state 226

   50 non_compound_stmt: LEX_EXIT opt_exp . statement_term

    NEWLINE  shift, and go to state 19
    ';'      shift, and go to state 75

    statement_term  go to state 254
    nls             go to state 78
    semi            go to state 80


state 227

   49 non_compound_stmt: LEX_NEXTFILE statement_term .

    $default  reduce using rule 49 (non_compound_stmt)


state 228

  172 r_brace: '}' opt_nls .

    $default  reduce using rule 172 (r_brace)


state 229

   52 non_compound_stmt: simple_stmt statement_term .

    $default  reduce using rule 52 (non_compound_stmt)


state 230

   72 print_expression_list: '(' . expression_list r_paren
  128 simp_exp: '(' . expression_list r_paren LEX_IN simple_variable
  138 non_post_simp_exp: '(' . exp r_paren

    error               shift, and go to state 69
    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    regexp             go to state 31
    a_slash            go to state 32
    expression_list    go to state 255
    exp                go to state 71
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 231

   53 simple_stmt: print print_expression_list . output_redir

    IO_OUT  shift, and go to state 256

    $default  reduce using rule 73 (output_redir)

    output_redir  go to state 257


state 232

   71 print_expression_list: opt_expression_list .

    $default  reduce using rule 71 (print_expression_list)


state 233

   32 statements: statements . statement
   33           | statements . error
   37 statement: l_brace statements . r_brace

    error               shift, and go to state 182
    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_IF              shift, and go to state 183
    LEX_RETURN          shift, and go to state 184
    LEX_DELETE          shift, and go to state 185
    LEX_SWITCH          shift, and go to state 186
    LEX_WHILE           shift, and go to state 187
    LEX_DO              shift, and go to state 188
    LEX_FOR             shift, and go to state 189
    LEX_BREAK           shift, and go to state 190
    LEX_CONTINUE        shift, and go to state 191
    LEX_PRINT           shift, and go to state 192
    LEX_PRINTF          shift, and go to state 193
    LEX_NEXT            shift, and go to state 194
    LEX_EXIT            shift, and go to state 195
    LEX_GETLINE         shift, and go to state 13
    LEX_NEXTFILE        shift, and go to state 196
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61
    '{'                 shift, and go to state 74
    '}'                 shift, and go to state 197
    ';'                 shift, and go to state 75

    regexp             go to state 31
    a_slash            go to state 32
    statement          go to state 198
    non_compound_stmt  go to state 199
    simple_stmt        go to state 200
    print              go to state 201
    if_statement       go to state 202
    exp                go to state 203
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42
    l_brace            go to state 204
    r_brace            go to state 258
    semi               go to state 206


state 234

   20 action: l_brace statements r_brace opt_semi . opt_nls

    NEWLINE  shift, and go to state 19

    NEWLINE   [reduce using rule 79 (opt_nls)]
    $default  reduce using rule 79 (opt_nls)

    nls      go to state 140
    opt_nls  go to state 259


state 235

  175 opt_semi: semi .

    $default  reduce using rule 175 (opt_semi)


state 236

   36 statement: semi opt_nls .

    $default  reduce using rule 36 (statement)


state 237

  101 exp: exp . LEX_AND exp
  102    | exp . LEX_OR exp
  103    | exp . MATCHOP exp
  104    | exp . LEX_IN simple_variable
  105    | exp . a_relop exp
  106    | exp . '?' exp ':' exp
  106    | exp '?' exp ':' exp .

    RELOP    shift, and go to state 84
    MATCHOP  shift, and go to state 85
    LEX_IN   shift, and go to state 86
    LEX_AND  shift, and go to state 87
    LEX_OR   shift, and go to state 88
    '?'      shift, and go to state 89
    '<'      shift, and go to state 91
    '>'      shift, and go to state 92

    $default  reduce using rule 106 (exp)

    relop_or_less  go to state 93
    a_relop        go to state 94


state 238

   27 function_prologue: LEX_FUNCTION func_name '(' opt_param_list r_paren opt_nls .

    $default  reduce using rule 27 (function_prologue)


state 239

   89 param_list: param_list comma error .

    $default  reduce using rule 89 (param_list)


state 240

   86 param_list: param_list comma NAME .

    $default  reduce using rule 86 (param_list)


state 241

   75 if_statement: LEX_IF '(' exp . r_paren opt_nls statement
   76             | LEX_IF '(' exp . r_paren opt_nls statement LEX_ELSE opt_nls statement
  101 exp: exp . LEX_AND exp
  102    | exp . LEX_OR exp
  103    | exp . MATCHOP exp
  104    | exp . LEX_IN simple_variable
  105    | exp . a_relop exp
  106    | exp . '?' exp ':' exp

    RELOP    shift, and go to state 84
    MATCHOP  shift, and go to state 85
    LEX_IN   shift, and go to state 86
    LEX_AND  shift, and go to state 87
    LEX_OR   shift, and go to state 88
    '?'      shift, and go to state 89
    '<'      shift, and go to state 91
    '>'      shift, and go to state 92
    ')'      shift, and go to state 133

    relop_or_less  go to state 93
    a_relop        go to state 94
    r_paren        go to state 260


state 242

   51 non_compound_stmt: LEX_RETURN opt_exp statement_term .

    $default  reduce using rule 51 (non_compound_stmt)


state 243

   54 simple_stmt: LEX_DELETE NAME delete_subscript_list .

    $default  reduce using rule 54 (simple_stmt)


state 244

  156 delete_subscript_list: delete_subscript . SUBSCRIPT
  158 delete_subscript: delete_subscript . delete_exp_list

    SUBSCRIPT  shift, and go to state 261
    '['        shift, and go to state 44

    delete_exp_list     go to state 262
    bracketed_exp_list  go to state 246


state 245

  157 delete_subscript: delete_exp_list .

    $default  reduce using rule 157 (delete_subscript)


state 246

  159 delete_exp_list: bracketed_exp_list .

    $default  reduce using rule 159 (delete_exp_list)


state 247

   55 simple_stmt: LEX_DELETE '(' NAME . ')'

    ')'  shift, and go to state 263


state 248

   39 statement: LEX_SWITCH '(' exp . r_paren opt_nls l_brace case_statements opt_nls r_brace
  101 exp: exp . LEX_AND exp
  102    | exp . LEX_OR exp
  103    | exp . MATCHOP exp
  104    | exp . LEX_IN simple_variable
  105    | exp . a_relop exp
  106    | exp . '?' exp ':' exp

    RELOP    shift, and go to state 84
    MATCHOP  shift, and go to state 85
    LEX_IN   shift, and go to state 86
    LEX_AND  shift, and go to state 87
    LEX_OR   shift, and go to state 88
    '?'      shift, and go to state 89
    '<'      shift, and go to state 91
    '>'      shift, and go to state 92
    ')'      shift, and go to state 133

    relop_or_less  go to state 93
    a_relop        go to state 94
    r_paren        go to state 264


state 249

   40 statement: LEX_WHILE '(' exp . r_paren opt_nls statement
  101 exp: exp . LEX_AND exp
  102    | exp . LEX_OR exp
  103    | exp . MATCHOP exp
  104    | exp . LEX_IN simple_variable
  105    | exp . a_relop exp
  106    | exp . '?' exp ':' exp

    RELOP    shift, and go to state 84
    MATCHOP  shift, and go to state 85
    LEX_IN   shift, and go to state 86
    LEX_AND  shift, and go to state 87
    LEX_OR   shift, and go to state 88
    '?'      shift, and go to state 89
    '<'      shift, and go to state 91
    '>'      shift, and go to state 92
    ')'      shift, and go to state 133

    relop_or_less  go to state 93
    a_relop        go to state 94
    r_paren        go to state 265


state 250

   41 statement: LEX_DO opt_nls statement . LEX_WHILE '(' exp r_paren opt_nls

    LEX_WHILE  shift, and go to state 266


state 251

   42 statement: LEX_FOR '(' NAME . LEX_IN simple_variable r_paren opt_nls statement
  164 simple_variable: NAME .
  165                | NAME . subscript_list

    LEX_IN  shift, and go to state 267
    '['     shift, and go to state 44

    LEX_IN    [reduce using rule 164 (simple_variable)]
    $default  reduce using rule 164 (simple_variable)

    bracketed_exp_list  go to state 45
    subscript           go to state 46
    subscript_list      go to state 47


state 252

   58 opt_simple_stmt: simple_stmt .

    $default  reduce using rule 58 (opt_simple_stmt)


state 253

   43 statement: LEX_FOR '(' opt_simple_stmt . semi opt_nls exp semi opt_nls opt_simple_stmt r_paren opt_nls statement
   44          | LEX_FOR '(' opt_simple_stmt . semi opt_nls semi opt_nls opt_simple_stmt r_paren opt_nls statement

    ';'  shift, and go to state 75

    semi  go to state 268


state 254

   50 non_compound_stmt: LEX_EXIT opt_exp statement_term .

    $default  reduce using rule 50 (non_compound_stmt)


state 255

   72 print_expression_list: '(' expression_list . r_paren
   95 expression_list: expression_list . comma exp
   97                | expression_list . error
   98                | expression_list . error exp
   99                | expression_list . comma error
  128 simp_exp: '(' expression_list . r_paren LEX_IN simple_variable

    error  shift, and go to state 131
    ','    shift, and go to state 132
    ')'    shift, and go to state 133

    r_paren  go to state 269
    comma    go to state 135


state 256

   74 output_redir: IO_OUT . common_exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    regexp             go to state 31
    a_slash            go to state 32
    common_exp         go to state 270
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 63


state 257

   53 simple_stmt: print print_expression_list output_redir .

    $default  reduce using rule 53 (simple_stmt)


state 258

   37 statement: l_brace statements r_brace .

    $default  reduce using rule 37 (statement)


state 259

   20 action: l_brace statements r_brace opt_semi opt_nls .

    $default  reduce using rule 20 (action)


state 260

   75 if_statement: LEX_IF '(' exp r_paren . opt_nls statement
   76             | LEX_IF '(' exp r_paren . opt_nls statement LEX_ELSE opt_nls statement

    NEWLINE  shift, and go to state 19

    $default  reduce using rule 79 (opt_nls)

    nls      go to state 140
    opt_nls  go to state 271


state 261

  156 delete_subscript_list: delete_subscript SUBSCRIPT .

    $default  reduce using rule 156 (delete_subscript_list)


state 262

  158 delete_subscript: delete_subscript delete_exp_list .

    $default  reduce using rule 158 (delete_subscript)


state 263

   55 simple_stmt: LEX_DELETE '(' NAME ')' .

    $default  reduce using rule 55 (simple_stmt)


state 264

   39 statement: LEX_SWITCH '(' exp r_paren . opt_nls l_brace case_statements opt_nls r_brace

    NEWLINE  shift, and go to state 19

    $default  reduce using rule 79 (opt_nls)

    nls      go to state 140
    opt_nls  go to state 272


state 265

   40 statement: LEX_WHILE '(' exp r_paren . opt_nls statement

    NEWLINE  shift, and go to state 19

    $default  reduce using rule 79 (opt_nls)

    nls      go to state 140
    opt_nls  go to state 273


state 266

   41 statement: LEX_DO opt_nls statement LEX_WHILE . '(' exp r_paren opt_nls

    '('  shift, and go to state 274


state 267

   42 statement: LEX_FOR '(' NAME LEX_IN . simple_variable r_paren opt_nls statement

    NAME  shift, and go to state 5

    simple_variable  go to state 275


state 268

   43 statement: LEX_FOR '(' opt_simple_stmt semi . opt_nls exp semi opt_nls opt_simple_stmt r_paren opt_nls statement
   44          | LEX_FOR '(' opt_simple_stmt semi . opt_nls semi opt_nls opt_simple_stmt r_paren opt_nls statement

    NEWLINE  shift, and go to state 19

    $default  reduce using rule 79 (opt_nls)

    nls      go to state 140
    opt_nls  go to state 276


state 269

   72 print_expression_list: '(' expression_list r_paren .
  128 simp_exp: '(' expression_list r_paren . LEX_IN simple_variable

    LEX_IN  shift, and go to state 177

    $default  reduce using rule 72 (print_expression_list)


state 270

   74 output_redir: IO_OUT common_exp .
  117 common_exp: common_exp . simp_exp
  129 simp_exp_nc: common_exp . IO_IN LEX_GETLINE opt_variable

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    IO_IN               shift, and go to state 95
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    $default  reduce using rule 74 (output_redir)

    regexp             go to state 31
    a_slash            go to state 32
    simp_exp           go to state 96
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 63


state 271

   75 if_statement: LEX_IF '(' exp r_paren opt_nls . statement
   76             | LEX_IF '(' exp r_paren opt_nls . statement LEX_ELSE opt_nls statement

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_IF              shift, and go to state 183
    LEX_RETURN          shift, and go to state 184
    LEX_DELETE          shift, and go to state 185
    LEX_SWITCH          shift, and go to state 186
    LEX_WHILE           shift, and go to state 187
    LEX_DO              shift, and go to state 188
    LEX_FOR             shift, and go to state 189
    LEX_BREAK           shift, and go to state 190
    LEX_CONTINUE        shift, and go to state 191
    LEX_PRINT           shift, and go to state 192
    LEX_PRINTF          shift, and go to state 193
    LEX_NEXT            shift, and go to state 194
    LEX_EXIT            shift, and go to state 195
    LEX_GETLINE         shift, and go to state 13
    LEX_NEXTFILE        shift, and go to state 196
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61
    '{'                 shift, and go to state 74
    ';'                 shift, and go to state 75

    regexp             go to state 31
    a_slash            go to state 32
    statement          go to state 277
    non_compound_stmt  go to state 199
    simple_stmt        go to state 200
    print              go to state 201
    if_statement       go to state 202
    exp                go to state 203
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42
    l_brace            go to state 204
    semi               go to state 206


state 272

   39 statement: LEX_SWITCH '(' exp r_paren opt_nls . l_brace case_statements opt_nls r_brace

    '{'  shift, and go to state 74

    l_brace  go to state 278


state 273

   40 statement: LEX_WHILE '(' exp r_paren opt_nls . statement

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_IF              shift, and go to state 183
    LEX_RETURN          shift, and go to state 184
    LEX_DELETE          shift, and go to state 185
    LEX_SWITCH          shift, and go to state 186
    LEX_WHILE           shift, and go to state 187
    LEX_DO              shift, and go to state 188
    LEX_FOR             shift, and go to state 189
    LEX_BREAK           shift, and go to state 190
    LEX_CONTINUE        shift, and go to state 191
    LEX_PRINT           shift, and go to state 192
    LEX_PRINTF          shift, and go to state 193
    LEX_NEXT            shift, and go to state 194
    LEX_EXIT            shift, and go to state 195
    LEX_GETLINE         shift, and go to state 13
    LEX_NEXTFILE        shift, and go to state 196
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61
    '{'                 shift, and go to state 74
    ';'                 shift, and go to state 75

    regexp             go to state 31
    a_slash            go to state 32
    statement          go to state 279
    non_compound_stmt  go to state 199
    simple_stmt        go to state 200
    print              go to state 201
    if_statement       go to state 202
    exp                go to state 203
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42
    l_brace            go to state 204
    semi               go to state 206


state 274

   41 statement: LEX_DO opt_nls statement LEX_WHILE '(' . exp r_paren opt_nls

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    regexp             go to state 31
    a_slash            go to state 32
    exp                go to state 280
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 275

   42 statement: LEX_FOR '(' NAME LEX_IN simple_variable . r_paren opt_nls statement

    ')'  shift, and go to state 133

    r_paren  go to state 281


state 276

   43 statement: LEX_FOR '(' opt_simple_stmt semi opt_nls . exp semi opt_nls opt_simple_stmt r_paren opt_nls statement
   44          | LEX_FOR '(' opt_simple_stmt semi opt_nls . semi opt_nls opt_simple_stmt r_paren opt_nls statement

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61
    ';'                 shift, and go to state 75

    regexp             go to state 31
    a_slash            go to state 32
    exp                go to state 282
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42
    semi               go to state 283


state 277

   75 if_statement: LEX_IF '(' exp r_paren opt_nls statement .
   76             | LEX_IF '(' exp r_paren opt_nls statement . LEX_ELSE opt_nls statement

    LEX_ELSE  shift, and go to state 284

    LEX_ELSE  [reduce using rule 75 (if_statement)]
    $default  reduce using rule 75 (if_statement)


state 278

   39 statement: LEX_SWITCH '(' exp r_paren opt_nls l_brace . case_statements opt_nls r_brace

    $default  reduce using rule 59 (case_statements)

    case_statements  go to state 285


state 279

   40 statement: LEX_WHILE '(' exp r_paren opt_nls statement .

    $default  reduce using rule 40 (statement)


state 280

   41 statement: LEX_DO opt_nls statement LEX_WHILE '(' exp . r_paren opt_nls
  101 exp: exp . LEX_AND exp
  102    | exp . LEX_OR exp
  103    | exp . MATCHOP exp
  104    | exp . LEX_IN simple_variable
  105    | exp . a_relop exp
  106    | exp . '?' exp ':' exp

    RELOP    shift, and go to state 84
    MATCHOP  shift, and go to state 85
    LEX_IN   shift, and go to state 86
    LEX_AND  shift, and go to state 87
    LEX_OR   shift, and go to state 88
    '?'      shift, and go to state 89
    '<'      shift, and go to state 91
    '>'      shift, and go to state 92
    ')'      shift, and go to state 133

    relop_or_less  go to state 93
    a_relop        go to state 94
    r_paren        go to state 286


state 281

   42 statement: LEX_FOR '(' NAME LEX_IN simple_variable r_paren . opt_nls statement

    NEWLINE  shift, and go to state 19

    $default  reduce using rule 79 (opt_nls)

    nls      go to state 140
    opt_nls  go to state 287


state 282

   43 statement: LEX_FOR '(' opt_simple_stmt semi opt_nls exp . semi opt_nls opt_simple_stmt r_paren opt_nls statement
  101 exp: exp . LEX_AND exp
  102    | exp . LEX_OR exp
  103    | exp . MATCHOP exp
  104    | exp . LEX_IN simple_variable
  105    | exp . a_relop exp
  106    | exp . '?' exp ':' exp

    RELOP    shift, and go to state 84
    MATCHOP  shift, and go to state 85
    LEX_IN   shift, and go to state 86
    LEX_AND  shift, and go to state 87
    LEX_OR   shift, and go to state 88
    '?'      shift, and go to state 89
    '<'      shift, and go to state 91
    '>'      shift, and go to state 92
    ';'      shift, and go to state 75

    relop_or_less  go to state 93
    a_relop        go to state 94
    semi           go to state 288


state 283

   44 statement: LEX_FOR '(' opt_simple_stmt semi opt_nls semi . opt_nls opt_simple_stmt r_paren opt_nls statement

    NEWLINE  shift, and go to state 19

    $default  reduce using rule 79 (opt_nls)

    nls      go to state 140
    opt_nls  go to state 289


state 284

   76 if_statement: LEX_IF '(' exp r_paren opt_nls statement LEX_ELSE . opt_nls statement

    NEWLINE  shift, and go to state 19

    $default  reduce using rule 79 (opt_nls)

    nls      go to state 140
    opt_nls  go to state 290


state 285

   39 statement: LEX_SWITCH '(' exp r_paren opt_nls l_brace case_statements . opt_nls r_brace
   60 case_statements: case_statements . case_statement
   61                | case_statements . error

    error        shift, and go to state 291
    LEX_CASE     shift, and go to state 292
    LEX_DEFAULT  shift, and go to state 293
    NEWLINE      shift, and go to state 19

    '}'  reduce using rule 79 (opt_nls)

    case_statement  go to state 294
    nls             go to state 140
    opt_nls         go to state 295


state 286

   41 statement: LEX_DO opt_nls statement LEX_WHILE '(' exp r_paren . opt_nls

    NEWLINE  shift, and go to state 19

    NEWLINE   [reduce using rule 79 (opt_nls)]
    $default  reduce using rule 79 (opt_nls)

    nls      go to state 140
    opt_nls  go to state 296


state 287

   42 statement: LEX_FOR '(' NAME LEX_IN simple_variable r_paren opt_nls . statement

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_IF              shift, and go to state 183
    LEX_RETURN          shift, and go to state 184
    LEX_DELETE          shift, and go to state 185
    LEX_SWITCH          shift, and go to state 186
    LEX_WHILE           shift, and go to state 187
    LEX_DO              shift, and go to state 188
    LEX_FOR             shift, and go to state 189
    LEX_BREAK           shift, and go to state 190
    LEX_CONTINUE        shift, and go to state 191
    LEX_PRINT           shift, and go to state 192
    LEX_PRINTF          shift, and go to state 193
    LEX_NEXT            shift, and go to state 194
    LEX_EXIT            shift, and go to state 195
    LEX_GETLINE         shift, and go to state 13
    LEX_NEXTFILE        shift, and go to state 196
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61
    '{'                 shift, and go to state 74
    ';'                 shift, and go to state 75

    regexp             go to state 31
    a_slash            go to state 32
    statement          go to state 297
    non_compound_stmt  go to state 199
    simple_stmt        go to state 200
    print              go to state 201
    if_statement       go to state 202
    exp                go to state 203
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42
    l_brace            go to state 204
    semi               go to state 206


state 288

   43 statement: LEX_FOR '(' opt_simple_stmt semi opt_nls exp semi . opt_nls opt_simple_stmt r_paren opt_nls statement

    NEWLINE  shift, and go to state 19

    $default  reduce using rule 79 (opt_nls)

    nls      go to state 140
    opt_nls  go to state 298


state 289

   44 statement: LEX_FOR '(' opt_simple_stmt semi opt_nls semi opt_nls . opt_simple_stmt r_paren opt_nls statement

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_DELETE          shift, and go to state 185
    LEX_PRINT           shift, and go to state 192
    LEX_PRINTF          shift, and go to state 193
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    $default  reduce using rule 57 (opt_simple_stmt)

    regexp             go to state 31
    a_slash            go to state 32
    simple_stmt        go to state 252
    opt_simple_stmt    go to state 299
    print              go to state 201
    exp                go to state 203
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 290

   76 if_statement: LEX_IF '(' exp r_paren opt_nls statement LEX_ELSE opt_nls . statement

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_IF              shift, and go to state 183
    LEX_RETURN          shift, and go to state 184
    LEX_DELETE          shift, and go to state 185
    LEX_SWITCH          shift, and go to state 186
    LEX_WHILE           shift, and go to state 187
    LEX_DO              shift, and go to state 188
    LEX_FOR             shift, and go to state 189
    LEX_BREAK           shift, and go to state 190
    LEX_CONTINUE        shift, and go to state 191
    LEX_PRINT           shift, and go to state 192
    LEX_PRINTF          shift, and go to state 193
    LEX_NEXT            shift, and go to state 194
    LEX_EXIT            shift, and go to state 195
    LEX_GETLINE         shift, and go to state 13
    LEX_NEXTFILE        shift, and go to state 196
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61
    '{'                 shift, and go to state 74
    ';'                 shift, and go to state 75

    regexp             go to state 31
    a_slash            go to state 32
    statement          go to state 300
    non_compound_stmt  go to state 199
    simple_stmt        go to state 200
    print              go to state 201
    if_statement       go to state 202
    exp                go to state 203
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42
    l_brace            go to state 204
    semi               go to state 206


state 291

   61 case_statements: case_statements error .

    $default  reduce using rule 61 (case_statements)


state 292

   62 case_statement: LEX_CASE . case_value colon opt_nls statements

    YNUMBER             shift, and go to state 301
    YSTRING             shift, and go to state 302
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 303
    '-'                 shift, and go to state 304
    '/'                 shift, and go to state 23

    regexp      go to state 305
    a_slash     go to state 32
    case_value  go to state 306


state 293

   63 case_statement: LEX_DEFAULT . colon opt_nls statements

    ':'  shift, and go to state 307

    colon  go to state 308


state 294

   60 case_statements: case_statements case_statement .

    $default  reduce using rule 60 (case_statements)


state 295

   39 statement: LEX_SWITCH '(' exp r_paren opt_nls l_brace case_statements opt_nls . r_brace

    '}'  shift, and go to state 197

    r_brace  go to state 309


state 296

   41 statement: LEX_DO opt_nls statement LEX_WHILE '(' exp r_paren opt_nls .

    $default  reduce using rule 41 (statement)


state 297

   42 statement: LEX_FOR '(' NAME LEX_IN simple_variable r_paren opt_nls statement .

    $default  reduce using rule 42 (statement)


state 298

   43 statement: LEX_FOR '(' opt_simple_stmt semi opt_nls exp semi opt_nls . opt_simple_stmt r_paren opt_nls statement

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_DELETE          shift, and go to state 185
    LEX_PRINT           shift, and go to state 192
    LEX_PRINTF          shift, and go to state 193
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61

    $default  reduce using rule 57 (opt_simple_stmt)

    regexp             go to state 31
    a_slash            go to state 32
    simple_stmt        go to state 252
    opt_simple_stmt    go to state 310
    print              go to state 201
    exp                go to state 203
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 299

   44 statement: LEX_FOR '(' opt_simple_stmt semi opt_nls semi opt_nls opt_simple_stmt . r_paren opt_nls statement

    ')'  shift, and go to state 133

    r_paren  go to state 311


state 300

   76 if_statement: LEX_IF '(' exp r_paren opt_nls statement LEX_ELSE opt_nls statement .

    $default  reduce using rule 76 (if_statement)


state 301

   64 case_value: YNUMBER .

    $default  reduce using rule 64 (case_value)


state 302

   67 case_value: YSTRING .

    $default  reduce using rule 67 (case_value)


state 303

   66 case_value: '+' . YNUMBER

    YNUMBER  shift, and go to state 312


state 304

   65 case_value: '-' . YNUMBER

    YNUMBER  shift, and go to state 313


state 305

   68 case_value: regexp .

    $default  reduce using rule 68 (case_value)


state 306

   62 case_statement: LEX_CASE case_value . colon opt_nls statements

    ':'  shift, and go to state 307

    colon  go to state 314


state 307

  177 colon: ':' .

    $default  reduce using rule 177 (colon)


state 308

   63 case_statement: LEX_DEFAULT colon . opt_nls statements

    NEWLINE  shift, and go to state 19

    NEWLINE   [reduce using rule 79 (opt_nls)]
    $default  reduce using rule 79 (opt_nls)

    nls      go to state 140
    opt_nls  go to state 315


state 309

   39 statement: LEX_SWITCH '(' exp r_paren opt_nls l_brace case_statements opt_nls r_brace .

    $default  reduce using rule 39 (statement)


state 310

   43 statement: LEX_FOR '(' opt_simple_stmt semi opt_nls exp semi opt_nls opt_simple_stmt . r_paren opt_nls statement

    ')'  shift, and go to state 133

    r_paren  go to state 316


state 311

   44 statement: LEX_FOR '(' opt_simple_stmt semi opt_nls semi opt_nls opt_simple_stmt r_paren . opt_nls statement

    NEWLINE  shift, and go to state 19

    $default  reduce using rule 79 (opt_nls)

    nls      go to state 140
    opt_nls  go to state 317


state 312

   66 case_value: '+' YNUMBER .

    $default  reduce using rule 66 (case_value)


state 313

   65 case_value: '-' YNUMBER .

    $default  reduce using rule 65 (case_value)


state 314

   62 case_statement: LEX_CASE case_value colon . opt_nls statements

    NEWLINE  shift, and go to state 19

    NEWLINE   [reduce using rule 79 (opt_nls)]
    $default  reduce using rule 79 (opt_nls)

    nls      go to state 140
    opt_nls  go to state 318


state 315

   63 case_statement: LEX_DEFAULT colon opt_nls . statements

    $default  reduce using rule 31 (statements)

    statements  go to state 319


state 316

   43 statement: LEX_FOR '(' opt_simple_stmt semi opt_nls exp semi opt_nls opt_simple_stmt r_paren . opt_nls statement

    NEWLINE  shift, and go to state 19

    $default  reduce using rule 79 (opt_nls)

    nls      go to state 140
    opt_nls  go to state 320


state 317

   44 statement: LEX_FOR '(' opt_simple_stmt semi opt_nls semi opt_nls opt_simple_stmt r_paren opt_nls . statement

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_IF              shift, and go to state 183
    LEX_RETURN          shift, and go to state 184
    LEX_DELETE          shift, and go to state 185
    LEX_SWITCH          shift, and go to state 186
    LEX_WHILE           shift, and go to state 187
    LEX_DO              shift, and go to state 188
    LEX_FOR             shift, and go to state 189
    LEX_BREAK           shift, and go to state 190
    LEX_CONTINUE        shift, and go to state 191
    LEX_PRINT           shift, and go to state 192
    LEX_PRINTF          shift, and go to state 193
    LEX_NEXT            shift, and go to state 194
    LEX_EXIT            shift, and go to state 195
    LEX_GETLINE         shift, and go to state 13
    LEX_NEXTFILE        shift, and go to state 196
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61
    '{'                 shift, and go to state 74
    ';'                 shift, and go to state 75

    regexp             go to state 31
    a_slash            go to state 32
    statement          go to state 321
    non_compound_stmt  go to state 199
    simple_stmt        go to state 200
    print              go to state 201
    if_statement       go to state 202
    exp                go to state 203
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42
    l_brace            go to state 204
    semi               go to state 206


state 318

   62 case_statement: LEX_CASE case_value colon opt_nls . statements

    $default  reduce using rule 31 (statements)

    statements  go to state 322


state 319

   32 statements: statements . statement
   33           | statements . error
   63 case_statement: LEX_DEFAULT colon opt_nls statements .

    error               shift, and go to state 182
    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_IF              shift, and go to state 183
    LEX_RETURN          shift, and go to state 184
    LEX_DELETE          shift, and go to state 185
    LEX_SWITCH          shift, and go to state 186
    LEX_WHILE           shift, and go to state 187
    LEX_DO              shift, and go to state 188
    LEX_FOR             shift, and go to state 189
    LEX_BREAK           shift, and go to state 190
    LEX_CONTINUE        shift, and go to state 191
    LEX_PRINT           shift, and go to state 192
    LEX_PRINTF          shift, and go to state 193
    LEX_NEXT            shift, and go to state 194
    LEX_EXIT            shift, and go to state 195
    LEX_GETLINE         shift, and go to state 13
    LEX_NEXTFILE        shift, and go to state 196
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61
    '{'                 shift, and go to state 74
    ';'                 shift, and go to state 75

    error        [reduce using rule 63 (case_statement)]
    LEX_CASE     reduce using rule 63 (case_statement)
    LEX_DEFAULT  reduce using rule 63 (case_statement)
    NEWLINE      reduce using rule 63 (case_statement)
    '}'          reduce using rule 63 (case_statement)

    regexp             go to state 31
    a_slash            go to state 32
    statement          go to state 198
    non_compound_stmt  go to state 199
    simple_stmt        go to state 200
    print              go to state 201
    if_statement       go to state 202
    exp                go to state 203
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42
    l_brace            go to state 204
    semi               go to state 206


state 320

   43 statement: LEX_FOR '(' opt_simple_stmt semi opt_nls exp semi opt_nls opt_simple_stmt r_paren opt_nls . statement

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_IF              shift, and go to state 183
    LEX_RETURN          shift, and go to state 184
    LEX_DELETE          shift, and go to state 185
    LEX_SWITCH          shift, and go to state 186
    LEX_WHILE           shift, and go to state 187
    LEX_DO              shift, and go to state 188
    LEX_FOR             shift, and go to state 189
    LEX_BREAK           shift, and go to state 190
    LEX_CONTINUE        shift, and go to state 191
    LEX_PRINT           shift, and go to state 192
    LEX_PRINTF          shift, and go to state 193
    LEX_NEXT            shift, and go to state 194
    LEX_EXIT            shift, and go to state 195
    LEX_GETLINE         shift, and go to state 13
    LEX_NEXTFILE        shift, and go to state 196
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61
    '{'                 shift, and go to state 74
    ';'                 shift, and go to state 75

    regexp             go to state 31
    a_slash            go to state 32
    statement          go to state 323
    non_compound_stmt  go to state 199
    simple_stmt        go to state 200
    print              go to state 201
    if_statement       go to state 202
    exp                go to state 203
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42
    l_brace            go to state 204
    semi               go to state 206


state 321

   44 statement: LEX_FOR '(' opt_simple_stmt semi opt_nls semi opt_nls opt_simple_stmt r_paren opt_nls statement .

    $default  reduce using rule 44 (statement)


state 322

   32 statements: statements . statement
   33           | statements . error
   62 case_statement: LEX_CASE case_value colon opt_nls statements .

    error               shift, and go to state 182
    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_IF              shift, and go to state 183
    LEX_RETURN          shift, and go to state 184
    LEX_DELETE          shift, and go to state 185
    LEX_SWITCH          shift, and go to state 186
    LEX_WHILE           shift, and go to state 187
    LEX_DO              shift, and go to state 188
    LEX_FOR             shift, and go to state 189
    LEX_BREAK           shift, and go to state 190
    LEX_CONTINUE        shift, and go to state 191
    LEX_PRINT           shift, and go to state 192
    LEX_PRINTF          shift, and go to state 193
    LEX_NEXT            shift, and go to state 194
    LEX_EXIT            shift, and go to state 195
    LEX_GETLINE         shift, and go to state 13
    LEX_NEXTFILE        shift, and go to state 196
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 61
    '{'                 shift, and go to state 74
    ';'                 shift, and go to state 75

    error        [reduce using rule 62 (case_statement)]
    LEX_CASE     reduce using rule 62 (case_statement)
    LEX_DEFAULT  reduce using rule 62 (case_statement)
    NEWLINE      reduce using rule 62 (case_statement)
    '}'          reduce using rule 62 (case_statement)

    regexp             go to state 31
    a_slash            go to state 32
    statement          go to state 198
    non_compound_stmt  go to state 199
    simple_stmt        go to state 200
    print              go to state 201
    if_statement       go to state 202
    exp                go to state 203
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42
    l_brace            go to state 204
    semi               go to state 206


state 323

   43 statement: LEX_FOR '(' opt_simple_stmt semi opt_nls exp semi opt_nls opt_simple_stmt r_paren opt_nls statement .

    $default  reduce using rule 43 (statement)
