State 1 conflicts: 1 shift/reduce
State 13 conflicts: 2 shift/reduce
State 33 conflicts: 1 shift/reduce
State 36 conflicts: 3 shift/reduce
State 37 conflicts: 3 shift/reduce
State 42 conflicts: 3 shift/reduce
State 49 conflicts: 1 shift/reduce
State 57 conflicts: 2 shift/reduce
State 61 conflicts: 2 shift/reduce
State 65 conflicts: 1 shift/reduce
State 68 conflicts: 1 shift/reduce
State 72 conflicts: 1 shift/reduce
State 74 conflicts: 1 shift/reduce
State 139 conflicts: 1 shift/reduce
State 151 conflicts: 2 shift/reduce
State 195 conflicts: 1 shift/reduce
State 203 conflicts: 1 shift/reduce
State 204 conflicts: 1 shift/reduce
State 231 conflicts: 1 shift/reduce
State 245 conflicts: 1 shift/reduce
State 282 conflicts: 1 shift/reduce
State 292 conflicts: 1 shift/reduce
State 314 conflicts: 1 shift/reduce
State 320 conflicts: 1 shift/reduce
State 325 conflicts: 1 shift/reduce
State 328 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: /* empty */
    2        | program rule
    3        | program nls
    4        | program LEX_EOF
    5        | program error

    6 rule: pattern action
    7     | pattern statement_term
    8     | function_prologue action
    9     | '@' LEX_INCLUDE source statement_term

   10 source: FILENAME
   11       | FILENAME error
   12       | error

   13 pattern: /* empty */
   14        | exp
   15        | exp ',' opt_nls exp
   16        | LEX_BEGIN
   17        | LEX_END
   18        | LEX_BEGINFILE
   19        | LEX_ENDFILE

   20 action: l_brace statements r_brace opt_semi opt_nls

   21 func_name: NAME
   22          | FUNC_CALL
   23          | lex_builtin
   24          | '@' LEX_EVAL

   25 lex_builtin: LEX_BUILTIN
   26            | LEX_LENGTH

   27 $@1: /* empty */

   28 function_prologue: LEX_FUNCTION $@1 func_name '(' opt_param_list r_paren opt_nls

   29 $@2: /* empty */

   30 regexp: a_slash $@2 REGEXP

   31 a_slash: '/'
   32        | SLASH_BEFORE_EQUAL

   33 statements: /* empty */
   34           | statements statement
   35           | statements error

   36 statement_term: nls
   37               | semi opt_nls

   38 statement: semi opt_nls
   39          | l_brace statements r_brace
   40          | if_statement
   41          | LEX_SWITCH '(' exp r_paren opt_nls l_brace case_statements opt_nls r_brace
   42          | LEX_WHILE '(' exp r_paren opt_nls statement
   43          | LEX_DO opt_nls statement LEX_WHILE '(' exp r_paren opt_nls
   44          | LEX_FOR '(' NAME LEX_IN simple_variable r_paren opt_nls statement
   45          | LEX_FOR '(' opt_simple_stmt semi opt_nls exp semi opt_nls opt_simple_stmt r_paren opt_nls statement
   46          | LEX_FOR '(' opt_simple_stmt semi opt_nls semi opt_nls opt_simple_stmt r_paren opt_nls statement
   47          | non_compound_stmt

   48 non_compound_stmt: LEX_BREAK statement_term
   49                  | LEX_CONTINUE statement_term
   50                  | LEX_NEXT statement_term
   51                  | LEX_NEXTFILE statement_term
   52                  | LEX_EXIT opt_exp statement_term

   53 $@3: /* empty */

   54 non_compound_stmt: LEX_RETURN $@3 opt_exp statement_term
   55                  | simple_stmt statement_term

   56 $@4: /* empty */

   57 simple_stmt: print $@4 print_expression_list output_redir

   58 $@5: /* empty */

   59 simple_stmt: LEX_DELETE NAME $@5 delete_subscript_list
   60            | LEX_DELETE '(' NAME ')'
   61            | exp

   62 opt_simple_stmt: /* empty */
   63                | simple_stmt

   64 case_statements: /* empty */
   65                | case_statements case_statement
   66                | case_statements error

   67 case_statement: LEX_CASE case_value colon opt_nls statements
   68               | LEX_DEFAULT colon opt_nls statements

   69 case_value: YNUMBER
   70           | '-' YNUMBER
   71           | '+' YNUMBER
   72           | YSTRING
   73           | regexp

   74 print: LEX_PRINT
   75      | LEX_PRINTF

   76 print_expression_list: opt_expression_list
   77                      | '(' expression_list r_paren

   78 output_redir: /* empty */

   79 $@6: /* empty */

   80 output_redir: IO_OUT $@6 common_exp

   81 if_statement: LEX_IF '(' exp r_paren opt_nls statement
   82             | LEX_IF '(' exp r_paren opt_nls statement LEX_ELSE opt_nls statement

   83 nls: NEWLINE
   84    | nls NEWLINE

   85 opt_nls: /* empty */
   86        | nls

   87 input_redir: /* empty */
   88            | '<' simp_exp

   89 opt_param_list: /* empty */
   90               | param_list

   91 param_list: NAME
   92           | param_list comma NAME
   93           | error
   94           | param_list error
   95           | param_list comma error

   96 opt_exp: /* empty */
   97        | exp

   98 opt_expression_list: /* empty */
   99                    | expression_list

  100 expression_list: exp
  101                | expression_list comma exp
  102                | error
  103                | expression_list error
  104                | expression_list error exp
  105                | expression_list comma error

  106 exp: variable assign_operator exp
  107    | exp LEX_AND exp
  108    | exp LEX_OR exp
  109    | exp MATCHOP exp
  110    | exp LEX_IN simple_variable
  111    | exp a_relop exp
  112    | exp '?' exp ':' exp
  113    | common_exp

  114 assign_operator: ASSIGN
  115                | ASSIGNOP
  116                | SLASH_BEFORE_EQUAL ASSIGN

  117 relop_or_less: RELOP
  118              | '<'

  119 a_relop: relop_or_less
  120        | '>'

  121 common_exp: simp_exp
  122           | simp_exp_nc
  123           | common_exp simp_exp

  124 simp_exp: non_post_simp_exp
  125         | simp_exp '^' simp_exp
  126         | simp_exp '*' simp_exp
  127         | simp_exp '/' simp_exp
  128         | simp_exp '%' simp_exp
  129         | simp_exp '+' simp_exp
  130         | simp_exp '-' simp_exp
  131         | LEX_GETLINE opt_variable input_redir
  132         | variable INCREMENT
  133         | variable DECREMENT
  134         | '(' expression_list r_paren LEX_IN simple_variable

  135 simp_exp_nc: common_exp IO_IN LEX_GETLINE opt_variable
  136            | simp_exp_nc '^' simp_exp
  137            | simp_exp_nc '*' simp_exp
  138            | simp_exp_nc '/' simp_exp
  139            | simp_exp_nc '%' simp_exp
  140            | simp_exp_nc '+' simp_exp
  141            | simp_exp_nc '-' simp_exp

  142 non_post_simp_exp: regexp
  143                  | '!' simp_exp
  144                  | '(' exp r_paren
  145                  | LEX_BUILTIN '(' opt_expression_list r_paren
  146                  | LEX_LENGTH '(' opt_expression_list r_paren
  147                  | LEX_LENGTH
  148                  | func_call
  149                  | variable
  150                  | INCREMENT variable
  151                  | DECREMENT variable
  152                  | YNUMBER
  153                  | YSTRING
  154                  | '-' simp_exp
  155                  | '+' simp_exp

  156 func_call: direct_func_call
  157          | '@' direct_func_call

  158 direct_func_call: FUNC_CALL '(' opt_expression_list r_paren

  159 opt_variable: /* empty */
  160             | variable

  161 delete_subscript_list: /* empty */
  162                      | delete_subscript SUBSCRIPT

  163 delete_subscript: delete_exp_list
  164                 | delete_subscript delete_exp_list

  165 delete_exp_list: bracketed_exp_list

  166 bracketed_exp_list: '[' expression_list ']'

  167 subscript: bracketed_exp_list
  168          | subscript bracketed_exp_list

  169 subscript_list: subscript SUBSCRIPT

  170 simple_variable: NAME
  171                | NAME subscript_list

  172 variable: simple_variable
  173         | '$' non_post_simp_exp opt_incdec

  174 opt_incdec: INCREMENT
  175           | DECREMENT
  176           | /* empty */

  177 l_brace: '{' opt_nls

  178 r_brace: '}' opt_nls

  179 r_paren: ')'

  180 opt_semi: /* empty */
  181         | semi

  182 semi: ';'

  183 colon: ':'

  184 comma: ',' opt_nls


Terminals, with rules where they appear

$end (0) 0
'!' (33) 143
'$' (36) 173
'%' (37) 128 139
'(' (40) 28 41 42 43 44 45 46 60 77 81 82 134 144 145 146 158
')' (41) 60 179
'*' (42) 126 137
'+' (43) 71 129 140 155
',' (44) 15 184
'-' (45) 70 130 141 154
'/' (47) 31 127 138
':' (58) 112 183
';' (59) 182
'<' (60) 88 118
'>' (62) 120
'?' (63) 112
'@' (64) 9 24 157
'[' (91) 166
']' (93) 166
'^' (94) 125 136
'{' (123) 177
'}' (125) 178
error (256) 5 11 12 35 66 93 94 95 102 103 104 105
FUNC_CALL (258) 22 158
NAME (259) 21 44 59 60 91 92 170 171
REGEXP (260) 30
FILENAME (261) 10 11
YNUMBER (262) 69 70 71 152
YSTRING (263) 72 153
RELOP (264) 117
IO_OUT (265) 80
IO_IN (266) 135
ASSIGNOP (267) 115
ASSIGN (268) 114 116
MATCHOP (269) 109
CONCAT_OP (270)
SUBSCRIPT (271) 162 169
LEX_BEGIN (272) 16
LEX_END (273) 17
LEX_IF (274) 81 82
LEX_ELSE (275) 82
LEX_RETURN (276) 54
LEX_DELETE (277) 59 60
LEX_SWITCH (278) 41
LEX_CASE (279) 67
LEX_DEFAULT (280) 68
LEX_WHILE (281) 42 43
LEX_DO (282) 43
LEX_FOR (283) 44 45 46
LEX_BREAK (284) 48
LEX_CONTINUE (285) 49
LEX_PRINT (286) 74
LEX_PRINTF (287) 75
LEX_NEXT (288) 50
LEX_EXIT (289) 52
LEX_FUNCTION (290) 28
LEX_BEGINFILE (291) 18
LEX_ENDFILE (292) 19
LEX_GETLINE (293) 131 135
LEX_NEXTFILE (294) 51
LEX_IN (295) 44 110 134
LEX_AND (296) 107
LEX_OR (297) 108
INCREMENT (298) 132 150 174
DECREMENT (299) 133 151 175
LEX_BUILTIN (300) 25 145
LEX_LENGTH (301) 26 146 147
LEX_EOF (302) 4
LEX_INCLUDE (303) 9
LEX_EVAL (304) 24
NEWLINE (305) 83 84
SLASH_BEFORE_EQUAL (306) 32 116
UNARY (307)


Nonterminals, with rules where they appear

$accept (74)
    on left: 0
program (75)
    on left: 1 2 3 4 5, on right: 0 2 3 4 5
rule (76)
    on left: 6 7 8 9, on right: 2
source (77)
    on left: 10 11 12, on right: 9
pattern (78)
    on left: 13 14 15 16 17 18 19, on right: 6 7
action (79)
    on left: 20, on right: 6 8
func_name (80)
    on left: 21 22 23 24, on right: 28
lex_builtin (81)
    on left: 25 26, on right: 23
function_prologue (82)
    on left: 28, on right: 8
$@1 (83)
    on left: 27, on right: 28
regexp (84)
    on left: 30, on right: 73 142
$@2 (85)
    on left: 29, on right: 30
a_slash (86)
    on left: 31 32, on right: 30
statements (87)
    on left: 33 34 35, on right: 20 34 35 39 67 68
statement_term (88)
    on left: 36 37, on right: 7 9 48 49 50 51 52 54 55
statement (89)
    on left: 38 39 40 41 42 43 44 45 46 47, on right: 34 42 43 44 45
    46 81 82
non_compound_stmt (90)
    on left: 48 49 50 51 52 54 55, on right: 47
$@3 (91)
    on left: 53, on right: 54
simple_stmt (92)
    on left: 57 59 60 61, on right: 55 63
$@4 (93)
    on left: 56, on right: 57
$@5 (94)
    on left: 58, on right: 59
opt_simple_stmt (95)
    on left: 62 63, on right: 45 46
case_statements (96)
    on left: 64 65 66, on right: 41 65 66
case_statement (97)
    on left: 67 68, on right: 65
case_value (98)
    on left: 69 70 71 72 73, on right: 67
print (99)
    on left: 74 75, on right: 57
print_expression_list (100)
    on left: 76 77, on right: 57
output_redir (101)
    on left: 78 80, on right: 57
$@6 (102)
    on left: 79, on right: 80
if_statement (103)
    on left: 81 82, on right: 40
nls (104)
    on left: 83 84, on right: 3 36 84 86
opt_nls (105)
    on left: 85 86, on right: 15 20 28 37 38 41 42 43 44 45 46 67 68
    81 82 177 178 184
input_redir (106)
    on left: 87 88, on right: 131
opt_param_list (107)
    on left: 89 90, on right: 28
param_list (108)
    on left: 91 92 93 94 95, on right: 90 92 94 95
opt_exp (109)
    on left: 96 97, on right: 52 54
opt_expression_list (110)
    on left: 98 99, on right: 76 145 146 158
expression_list (111)
    on left: 100 101 102 103 104 105, on right: 77 99 101 103 104 105
    134 166
exp (112)
    on left: 106 107 108 109 110 111 112 113, on right: 14 15 41 42
    43 45 61 81 82 97 100 101 104 106 107 108 109 110 111 112 144
assign_operator (113)
    on left: 114 115 116, on right: 106
relop_or_less (114)
    on left: 117 118, on right: 119
a_relop (115)
    on left: 119 120, on right: 111
common_exp (116)
    on left: 121 122 123, on right: 80 113 123 135
simp_exp (117)
    on left: 124 125 126 127 128 129 130 131 132 133 134, on right:
    88 121 123 125 126 127 128 129 130 136 137 138 139 140 141 143
    154 155
simp_exp_nc (118)
    on left: 135 136 137 138 139 140 141, on right: 122 136 137 138
    139 140 141
non_post_simp_exp (119)
    on left: 142 143 144 145 146 147 148 149 150 151 152 153 154 155,
    on right: 124 173
func_call (120)
    on left: 156 157, on right: 148
direct_func_call (121)
    on left: 158, on right: 156 157
opt_variable (122)
    on left: 159 160, on right: 131 135
delete_subscript_list (123)
    on left: 161 162, on right: 59
delete_subscript (124)
    on left: 163 164, on right: 162 164
delete_exp_list (125)
    on left: 165, on right: 163 164
bracketed_exp_list (126)
    on left: 166, on right: 165 167 168
subscript (127)
    on left: 167 168, on right: 168 169
subscript_list (128)
    on left: 169, on right: 171
simple_variable (129)
    on left: 170 171, on right: 44 110 134 172
variable (130)
    on left: 172 173, on right: 106 132 133 149 150 151 160
opt_incdec (131)
    on left: 174 175 176, on right: 173
l_brace (132)
    on left: 177, on right: 20 39 41
r_brace (133)
    on left: 178, on right: 20 39 41
r_paren (134)
    on left: 179, on right: 28 41 42 43 44 45 46 77 81 82 134 144 145
    146 158
opt_semi (135)
    on left: 180 181, on right: 20
semi (136)
    on left: 182, on right: 37 38 45 46 181
colon (137)
    on left: 183, on right: 67 68
comma (138)
    on left: 184, on right: 92 95 101 105


state 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


state 1

    0 $accept: program . $end
    2 program: program . rule
    3        | program . nls
    4        | program . LEX_EOF
    5        | program . error

    $end                shift, and go to state 2
    error               shift, and go to state 3
    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_BEGIN           shift, and go to state 8
    LEX_END             shift, and go to state 9
    LEX_FUNCTION        shift, and go to state 10
    LEX_BEGINFILE       shift, and go to state 11
    LEX_ENDFILE         shift, and go to state 12
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    LEX_EOF             shift, and go to state 18
    NEWLINE             shift, and go to state 19
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 27

    NEWLINE  [reduce using rule 13 (pattern)]
    '{'      reduce using rule 13 (pattern)
    ';'      reduce using rule 13 (pattern)

    rule               go to state 28
    pattern            go to state 29
    function_prologue  go to state 30
    regexp             go to state 31
    a_slash            go to state 32
    nls                go to state 33
    exp                go to state 34
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 2

    0 $accept: program $end .

    $default  accept


state 3

    5 program: program error .

    $default  reduce using rule 5 (program)


state 4

  158 direct_func_call: FUNC_CALL . '(' opt_expression_list r_paren

    '('  shift, and go to state 43


state 5

  170 simple_variable: NAME .
  171                | NAME . subscript_list

    '['  shift, and go to state 44

    $default  reduce using rule 170 (simple_variable)

    bracketed_exp_list  go to state 45
    subscript           go to state 46
    subscript_list      go to state 47


state 6

  152 non_post_simp_exp: YNUMBER .

    $default  reduce using rule 152 (non_post_simp_exp)


state 7

  153 non_post_simp_exp: YSTRING .

    $default  reduce using rule 153 (non_post_simp_exp)


state 8

   16 pattern: LEX_BEGIN .

    $default  reduce using rule 16 (pattern)


state 9

   17 pattern: LEX_END .

    $default  reduce using rule 17 (pattern)


state 10

   28 function_prologue: LEX_FUNCTION . $@1 func_name '(' opt_param_list r_paren opt_nls

    $default  reduce using rule 27 ($@1)

    $@1  go to state 48


state 11

   18 pattern: LEX_BEGINFILE .

    $default  reduce using rule 18 (pattern)


state 12

   19 pattern: LEX_ENDFILE .

    $default  reduce using rule 19 (pattern)


state 13

  131 simp_exp: LEX_GETLINE . opt_variable input_redir

    NAME  shift, and go to state 5
    '$'   shift, and go to state 25

    NAME      [reduce using rule 159 (opt_variable)]
    '$'       [reduce using rule 159 (opt_variable)]
    $default  reduce using rule 159 (opt_variable)

    opt_variable     go to state 49
    simple_variable  go to state 41
    variable         go to state 50


state 14

  150 non_post_simp_exp: INCREMENT . variable

    NAME  shift, and go to state 5
    '$'   shift, and go to state 25

    simple_variable  go to state 41
    variable         go to state 51


state 15

  151 non_post_simp_exp: DECREMENT . variable

    NAME  shift, and go to state 5
    '$'   shift, and go to state 25

    simple_variable  go to state 41
    variable         go to state 52


state 16

  145 non_post_simp_exp: LEX_BUILTIN . '(' opt_expression_list r_paren

    '('  shift, and go to state 53


state 17

  146 non_post_simp_exp: LEX_LENGTH . '(' opt_expression_list r_paren
  147                  | LEX_LENGTH .

    '('  shift, and go to state 54

    $default  reduce using rule 147 (non_post_simp_exp)


state 18

    4 program: program LEX_EOF .

    $default  reduce using rule 4 (program)


state 19

   83 nls: NEWLINE .

    $default  reduce using rule 83 (nls)


state 20

   32 a_slash: SLASH_BEFORE_EQUAL .

    $default  reduce using rule 32 (a_slash)


state 21

  155 non_post_simp_exp: '+' . simp_exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    regexp             go to state 31
    a_slash            go to state 32
    simp_exp           go to state 56
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 57


state 22

  154 non_post_simp_exp: '-' . simp_exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    regexp             go to state 31
    a_slash            go to state 32
    simp_exp           go to state 58
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 57


state 23

   31 a_slash: '/' .

    $default  reduce using rule 31 (a_slash)


state 24

  143 non_post_simp_exp: '!' . simp_exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    regexp             go to state 31
    a_slash            go to state 32
    simp_exp           go to state 59
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 57


state 25

  173 variable: '$' . non_post_simp_exp opt_incdec

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 60
    '@'                 shift, and go to state 55

    regexp             go to state 31
    a_slash            go to state 32
    non_post_simp_exp  go to state 61
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 62


state 26

  134 simp_exp: '(' . expression_list r_paren LEX_IN simple_variable
  144 non_post_simp_exp: '(' . exp r_paren

    error               shift, and go to state 63
    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    regexp             go to state 31
    a_slash            go to state 32
    expression_list    go to state 64
    exp                go to state 65
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 27

    9 rule: '@' . LEX_INCLUDE source statement_term
  157 func_call: '@' . direct_func_call

    FUNC_CALL    shift, and go to state 4
    LEX_INCLUDE  shift, and go to state 66

    direct_func_call  go to state 67


state 28

    2 program: program rule .

    $default  reduce using rule 2 (program)


state 29

    6 rule: pattern . action
    7     | pattern . statement_term

    NEWLINE  shift, and go to state 19
    '{'      shift, and go to state 68
    ';'      shift, and go to state 69

    action          go to state 70
    statement_term  go to state 71
    nls             go to state 72
    l_brace         go to state 73
    semi            go to state 74


state 30

    8 rule: function_prologue . action

    '{'  shift, and go to state 68

    action   go to state 75
    l_brace  go to state 73


state 31

  142 non_post_simp_exp: regexp .

    $default  reduce using rule 142 (non_post_simp_exp)


state 32

   30 regexp: a_slash . $@2 REGEXP

    $default  reduce using rule 29 ($@2)

    $@2  go to state 76


state 33

    3 program: program nls .
   84 nls: nls . NEWLINE

    NEWLINE  shift, and go to state 77

    NEWLINE   [reduce using rule 3 (program)]
    $default  reduce using rule 3 (program)


state 34

   14 pattern: exp .
   15        | exp . ',' opt_nls exp
  107 exp: exp . LEX_AND exp
  108    | exp . LEX_OR exp
  109    | exp . MATCHOP exp
  110    | exp . LEX_IN simple_variable
  111    | exp . a_relop exp
  112    | exp . '?' exp ':' exp

    RELOP    shift, and go to state 78
    MATCHOP  shift, and go to state 79
    LEX_IN   shift, and go to state 80
    LEX_AND  shift, and go to state 81
    LEX_OR   shift, and go to state 82
    '?'      shift, and go to state 83
    ','      shift, and go to state 84
    '<'      shift, and go to state 85
    '>'      shift, and go to state 86

    $default  reduce using rule 14 (pattern)

    relop_or_less  go to state 87
    a_relop        go to state 88


state 35

  113 exp: common_exp .
  123 common_exp: common_exp . simp_exp
  135 simp_exp_nc: common_exp . IO_IN LEX_GETLINE opt_variable

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    IO_IN               shift, and go to state 89
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    $default  reduce using rule 113 (exp)

    regexp             go to state 31
    a_slash            go to state 32
    simp_exp           go to state 90
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 57


state 36

  121 common_exp: simp_exp .
  125 simp_exp: simp_exp . '^' simp_exp
  126         | simp_exp . '*' simp_exp
  127         | simp_exp . '/' simp_exp
  128         | simp_exp . '%' simp_exp
  129         | simp_exp . '+' simp_exp
  130         | simp_exp . '-' simp_exp

    '+'  shift, and go to state 91
    '-'  shift, and go to state 92
    '*'  shift, and go to state 93
    '/'  shift, and go to state 94
    '%'  shift, and go to state 95
    '^'  shift, and go to state 96

    '+'       [reduce using rule 121 (common_exp)]
    '-'       [reduce using rule 121 (common_exp)]
    '/'       [reduce using rule 121 (common_exp)]
    $default  reduce using rule 121 (common_exp)


state 37

  122 common_exp: simp_exp_nc .
  136 simp_exp_nc: simp_exp_nc . '^' simp_exp
  137            | simp_exp_nc . '*' simp_exp
  138            | simp_exp_nc . '/' simp_exp
  139            | simp_exp_nc . '%' simp_exp
  140            | simp_exp_nc . '+' simp_exp
  141            | simp_exp_nc . '-' simp_exp

    '+'  shift, and go to state 97
    '-'  shift, and go to state 98
    '*'  shift, and go to state 99
    '/'  shift, and go to state 100
    '%'  shift, and go to state 101
    '^'  shift, and go to state 102

    '+'       [reduce using rule 122 (common_exp)]
    '-'       [reduce using rule 122 (common_exp)]
    '/'       [reduce using rule 122 (common_exp)]
    $default  reduce using rule 122 (common_exp)


state 38

  124 simp_exp: non_post_simp_exp .

    $default  reduce using rule 124 (simp_exp)


state 39

  148 non_post_simp_exp: func_call .

    $default  reduce using rule 148 (non_post_simp_exp)


state 40

  156 func_call: direct_func_call .

    $default  reduce using rule 156 (func_call)


state 41

  172 variable: simple_variable .

    $default  reduce using rule 172 (variable)


state 42

  106 exp: variable . assign_operator exp
  132 simp_exp: variable . INCREMENT
  133         | variable . DECREMENT
  149 non_post_simp_exp: variable .

    ASSIGNOP            shift, and go to state 103
    ASSIGN              shift, and go to state 104
    INCREMENT           shift, and go to state 105
    DECREMENT           shift, and go to state 106
    SLASH_BEFORE_EQUAL  shift, and go to state 107

    INCREMENT           [reduce using rule 149 (non_post_simp_exp)]
    DECREMENT           [reduce using rule 149 (non_post_simp_exp)]
    SLASH_BEFORE_EQUAL  [reduce using rule 149 (non_post_simp_exp)]
    $default            reduce using rule 149 (non_post_simp_exp)

    assign_operator  go to state 108


state 43

  158 direct_func_call: FUNC_CALL '(' . opt_expression_list r_paren

    error               shift, and go to state 63
    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    ')'  reduce using rule 98 (opt_expression_list)

    regexp               go to state 31
    a_slash              go to state 32
    opt_expression_list  go to state 109
    expression_list      go to state 110
    exp                  go to state 111
    common_exp           go to state 35
    simp_exp             go to state 36
    simp_exp_nc          go to state 37
    non_post_simp_exp    go to state 38
    func_call            go to state 39
    direct_func_call     go to state 40
    simple_variable      go to state 41
    variable             go to state 42


state 44

  166 bracketed_exp_list: '[' . expression_list ']'

    error               shift, and go to state 63
    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    regexp             go to state 31
    a_slash            go to state 32
    expression_list    go to state 112
    exp                go to state 111
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 45

  167 subscript: bracketed_exp_list .

    $default  reduce using rule 167 (subscript)


state 46

  168 subscript: subscript . bracketed_exp_list
  169 subscript_list: subscript . SUBSCRIPT

    SUBSCRIPT  shift, and go to state 113
    '['        shift, and go to state 44

    bracketed_exp_list  go to state 114


state 47

  171 simple_variable: NAME subscript_list .

    $default  reduce using rule 171 (simple_variable)


state 48

   28 function_prologue: LEX_FUNCTION $@1 . func_name '(' opt_param_list r_paren opt_nls

    FUNC_CALL    shift, and go to state 115
    NAME         shift, and go to state 116
    LEX_BUILTIN  shift, and go to state 117
    LEX_LENGTH   shift, and go to state 118
    '@'          shift, and go to state 119

    func_name    go to state 120
    lex_builtin  go to state 121


state 49

  131 simp_exp: LEX_GETLINE opt_variable . input_redir

    '<'  shift, and go to state 122

    '<'       [reduce using rule 87 (input_redir)]
    $default  reduce using rule 87 (input_redir)

    input_redir  go to state 123


state 50

  160 opt_variable: variable .

    $default  reduce using rule 160 (opt_variable)


state 51

  150 non_post_simp_exp: INCREMENT variable .

    $default  reduce using rule 150 (non_post_simp_exp)


state 52

  151 non_post_simp_exp: DECREMENT variable .

    $default  reduce using rule 151 (non_post_simp_exp)


state 53

  145 non_post_simp_exp: LEX_BUILTIN '(' . opt_expression_list r_paren

    error               shift, and go to state 63
    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    ')'  reduce using rule 98 (opt_expression_list)

    regexp               go to state 31
    a_slash              go to state 32
    opt_expression_list  go to state 124
    expression_list      go to state 110
    exp                  go to state 111
    common_exp           go to state 35
    simp_exp             go to state 36
    simp_exp_nc          go to state 37
    non_post_simp_exp    go to state 38
    func_call            go to state 39
    direct_func_call     go to state 40
    simple_variable      go to state 41
    variable             go to state 42


state 54

  146 non_post_simp_exp: LEX_LENGTH '(' . opt_expression_list r_paren

    error               shift, and go to state 63
    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    ')'  reduce using rule 98 (opt_expression_list)

    regexp               go to state 31
    a_slash              go to state 32
    opt_expression_list  go to state 125
    expression_list      go to state 110
    exp                  go to state 111
    common_exp           go to state 35
    simp_exp             go to state 36
    simp_exp_nc          go to state 37
    non_post_simp_exp    go to state 38
    func_call            go to state 39
    direct_func_call     go to state 40
    simple_variable      go to state 41
    variable             go to state 42


state 55

  157 func_call: '@' . direct_func_call

    FUNC_CALL  shift, and go to state 4

    direct_func_call  go to state 67


state 56

  125 simp_exp: simp_exp . '^' simp_exp
  126         | simp_exp . '*' simp_exp
  127         | simp_exp . '/' simp_exp
  128         | simp_exp . '%' simp_exp
  129         | simp_exp . '+' simp_exp
  130         | simp_exp . '-' simp_exp
  155 non_post_simp_exp: '+' simp_exp .

    '^'  shift, and go to state 96

    $default  reduce using rule 155 (non_post_simp_exp)


state 57

  132 simp_exp: variable . INCREMENT
  133         | variable . DECREMENT
  149 non_post_simp_exp: variable .

    INCREMENT  shift, and go to state 105
    DECREMENT  shift, and go to state 106

    INCREMENT  [reduce using rule 149 (non_post_simp_exp)]
    DECREMENT  [reduce using rule 149 (non_post_simp_exp)]
    $default   reduce using rule 149 (non_post_simp_exp)


state 58

  125 simp_exp: simp_exp . '^' simp_exp
  126         | simp_exp . '*' simp_exp
  127         | simp_exp . '/' simp_exp
  128         | simp_exp . '%' simp_exp
  129         | simp_exp . '+' simp_exp
  130         | simp_exp . '-' simp_exp
  154 non_post_simp_exp: '-' simp_exp .

    '^'  shift, and go to state 96

    $default  reduce using rule 154 (non_post_simp_exp)


state 59

  125 simp_exp: simp_exp . '^' simp_exp
  126         | simp_exp . '*' simp_exp
  127         | simp_exp . '/' simp_exp
  128         | simp_exp . '%' simp_exp
  129         | simp_exp . '+' simp_exp
  130         | simp_exp . '-' simp_exp
  143 non_post_simp_exp: '!' simp_exp .

    '^'  shift, and go to state 96

    $default  reduce using rule 143 (non_post_simp_exp)


state 60

  144 non_post_simp_exp: '(' . exp r_paren

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    regexp             go to state 31
    a_slash            go to state 32
    exp                go to state 126
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 61

  173 variable: '$' non_post_simp_exp . opt_incdec

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128

    INCREMENT  [reduce using rule 176 (opt_incdec)]
    DECREMENT  [reduce using rule 176 (opt_incdec)]
    $default   reduce using rule 176 (opt_incdec)

    opt_incdec  go to state 129


state 62

  149 non_post_simp_exp: variable .

    $default  reduce using rule 149 (non_post_simp_exp)


state 63

  102 expression_list: error .

    $default  reduce using rule 102 (expression_list)


state 64

  101 expression_list: expression_list . comma exp
  103                | expression_list . error
  104                | expression_list . error exp
  105                | expression_list . comma error
  134 simp_exp: '(' expression_list . r_paren LEX_IN simple_variable

    error  shift, and go to state 130
    ','    shift, and go to state 131
    ')'    shift, and go to state 132

    r_paren  go to state 133
    comma    go to state 134


state 65

  100 expression_list: exp .
  107 exp: exp . LEX_AND exp
  108    | exp . LEX_OR exp
  109    | exp . MATCHOP exp
  110    | exp . LEX_IN simple_variable
  111    | exp . a_relop exp
  112    | exp . '?' exp ':' exp
  144 non_post_simp_exp: '(' exp . r_paren

    RELOP    shift, and go to state 78
    MATCHOP  shift, and go to state 79
    LEX_IN   shift, and go to state 80
    LEX_AND  shift, and go to state 81
    LEX_OR   shift, and go to state 82
    '?'      shift, and go to state 83
    '<'      shift, and go to state 85
    '>'      shift, and go to state 86
    ')'      shift, and go to state 132

    ')'       [reduce using rule 100 (expression_list)]
    $default  reduce using rule 100 (expression_list)

    relop_or_less  go to state 87
    a_relop        go to state 88
    r_paren        go to state 135


state 66

    9 rule: '@' LEX_INCLUDE . source statement_term

    error     shift, and go to state 136
    FILENAME  shift, and go to state 137

    source  go to state 138


state 67

  157 func_call: '@' direct_func_call .

    $default  reduce using rule 157 (func_call)


state 68

  177 l_brace: '{' . opt_nls

    NEWLINE  shift, and go to state 19

    NEWLINE   [reduce using rule 85 (opt_nls)]
    $default  reduce using rule 85 (opt_nls)

    nls      go to state 139
    opt_nls  go to state 140


state 69

  182 semi: ';' .

    $default  reduce using rule 182 (semi)


state 70

    6 rule: pattern action .

    $default  reduce using rule 6 (rule)


state 71

    7 rule: pattern statement_term .

    $default  reduce using rule 7 (rule)


state 72

   36 statement_term: nls .
   84 nls: nls . NEWLINE

    NEWLINE  shift, and go to state 77

    NEWLINE   [reduce using rule 36 (statement_term)]
    $default  reduce using rule 36 (statement_term)


state 73

   20 action: l_brace . statements r_brace opt_semi opt_nls

    $default  reduce using rule 33 (statements)

    statements  go to state 141


state 74

   37 statement_term: semi . opt_nls

    NEWLINE  shift, and go to state 19

    NEWLINE   [reduce using rule 85 (opt_nls)]
    $default  reduce using rule 85 (opt_nls)

    nls      go to state 139
    opt_nls  go to state 142


state 75

    8 rule: function_prologue action .

    $default  reduce using rule 8 (rule)


state 76

   30 regexp: a_slash $@2 . REGEXP

    REGEXP  shift, and go to state 143


state 77

   84 nls: nls NEWLINE .

    $default  reduce using rule 84 (nls)


state 78

  117 relop_or_less: RELOP .

    $default  reduce using rule 117 (relop_or_less)


state 79

  109 exp: exp MATCHOP . exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    regexp             go to state 31
    a_slash            go to state 32
    exp                go to state 144
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 80

  110 exp: exp LEX_IN . simple_variable

    NAME  shift, and go to state 5

    simple_variable  go to state 145


state 81

  107 exp: exp LEX_AND . exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    regexp             go to state 31
    a_slash            go to state 32
    exp                go to state 146
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 82

  108 exp: exp LEX_OR . exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    regexp             go to state 31
    a_slash            go to state 32
    exp                go to state 147
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 83

  112 exp: exp '?' . exp ':' exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    regexp             go to state 31
    a_slash            go to state 32
    exp                go to state 148
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 84

   15 pattern: exp ',' . opt_nls exp

    NEWLINE  shift, and go to state 19

    $default  reduce using rule 85 (opt_nls)

    nls      go to state 139
    opt_nls  go to state 149


state 85

  118 relop_or_less: '<' .

    $default  reduce using rule 118 (relop_or_less)


state 86

  120 a_relop: '>' .

    $default  reduce using rule 120 (a_relop)


state 87

  119 a_relop: relop_or_less .

    $default  reduce using rule 119 (a_relop)


state 88

  111 exp: exp a_relop . exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    regexp             go to state 31
    a_slash            go to state 32
    exp                go to state 150
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 89

  135 simp_exp_nc: common_exp IO_IN . LEX_GETLINE opt_variable

    LEX_GETLINE  shift, and go to state 151


state 90

  123 common_exp: common_exp simp_exp .
  125 simp_exp: simp_exp . '^' simp_exp
  126         | simp_exp . '*' simp_exp
  127         | simp_exp . '/' simp_exp
  128         | simp_exp . '%' simp_exp
  129         | simp_exp . '+' simp_exp
  130         | simp_exp . '-' simp_exp

    '+'  shift, and go to state 91
    '-'  shift, and go to state 92
    '*'  shift, and go to state 93
    '/'  shift, and go to state 94
    '%'  shift, and go to state 95
    '^'  shift, and go to state 96

    $default  reduce using rule 123 (common_exp)


state 91

  129 simp_exp: simp_exp '+' . simp_exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    regexp             go to state 31
    a_slash            go to state 32
    simp_exp           go to state 152
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 57


state 92

  130 simp_exp: simp_exp '-' . simp_exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    regexp             go to state 31
    a_slash            go to state 32
    simp_exp           go to state 153
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 57


state 93

  126 simp_exp: simp_exp '*' . simp_exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    regexp             go to state 31
    a_slash            go to state 32
    simp_exp           go to state 154
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 57


state 94

  127 simp_exp: simp_exp '/' . simp_exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    regexp             go to state 31
    a_slash            go to state 32
    simp_exp           go to state 155
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 57


state 95

  128 simp_exp: simp_exp '%' . simp_exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    regexp             go to state 31
    a_slash            go to state 32
    simp_exp           go to state 156
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 57


state 96

  125 simp_exp: simp_exp '^' . simp_exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    regexp             go to state 31
    a_slash            go to state 32
    simp_exp           go to state 157
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 57


state 97

  140 simp_exp_nc: simp_exp_nc '+' . simp_exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    regexp             go to state 31
    a_slash            go to state 32
    simp_exp           go to state 158
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 57


state 98

  141 simp_exp_nc: simp_exp_nc '-' . simp_exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    regexp             go to state 31
    a_slash            go to state 32
    simp_exp           go to state 159
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 57


state 99

  137 simp_exp_nc: simp_exp_nc '*' . simp_exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    regexp             go to state 31
    a_slash            go to state 32
    simp_exp           go to state 160
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 57


state 100

  138 simp_exp_nc: simp_exp_nc '/' . simp_exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    regexp             go to state 31
    a_slash            go to state 32
    simp_exp           go to state 161
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 57


state 101

  139 simp_exp_nc: simp_exp_nc '%' . simp_exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    regexp             go to state 31
    a_slash            go to state 32
    simp_exp           go to state 162
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 57


state 102

  136 simp_exp_nc: simp_exp_nc '^' . simp_exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    regexp             go to state 31
    a_slash            go to state 32
    simp_exp           go to state 163
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 57


state 103

  115 assign_operator: ASSIGNOP .

    $default  reduce using rule 115 (assign_operator)


state 104

  114 assign_operator: ASSIGN .

    $default  reduce using rule 114 (assign_operator)


state 105

  132 simp_exp: variable INCREMENT .

    $default  reduce using rule 132 (simp_exp)


state 106

  133 simp_exp: variable DECREMENT .

    $default  reduce using rule 133 (simp_exp)


state 107

  116 assign_operator: SLASH_BEFORE_EQUAL . ASSIGN

    ASSIGN  shift, and go to state 164


state 108

  106 exp: variable assign_operator . exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    regexp             go to state 31
    a_slash            go to state 32
    exp                go to state 165
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 109

  158 direct_func_call: FUNC_CALL '(' opt_expression_list . r_paren

    ')'  shift, and go to state 132

    r_paren  go to state 166


state 110

   99 opt_expression_list: expression_list .
  101 expression_list: expression_list . comma exp
  103                | expression_list . error
  104                | expression_list . error exp
  105                | expression_list . comma error

    error  shift, and go to state 130
    ','    shift, and go to state 131

    IO_OUT   reduce using rule 99 (opt_expression_list)
    NEWLINE  reduce using rule 99 (opt_expression_list)
    ')'      reduce using rule 99 (opt_expression_list)
    ';'      reduce using rule 99 (opt_expression_list)

    comma  go to state 134


state 111

  100 expression_list: exp .
  107 exp: exp . LEX_AND exp
  108    | exp . LEX_OR exp
  109    | exp . MATCHOP exp
  110    | exp . LEX_IN simple_variable
  111    | exp . a_relop exp
  112    | exp . '?' exp ':' exp

    RELOP    shift, and go to state 78
    MATCHOP  shift, and go to state 79
    LEX_IN   shift, and go to state 80
    LEX_AND  shift, and go to state 81
    LEX_OR   shift, and go to state 82
    '?'      shift, and go to state 83
    '<'      shift, and go to state 85
    '>'      shift, and go to state 86

    $default  reduce using rule 100 (expression_list)

    relop_or_less  go to state 87
    a_relop        go to state 88


state 112

  101 expression_list: expression_list . comma exp
  103                | expression_list . error
  104                | expression_list . error exp
  105                | expression_list . comma error
  166 bracketed_exp_list: '[' expression_list . ']'

    error  shift, and go to state 130
    ','    shift, and go to state 131
    ']'    shift, and go to state 167

    comma  go to state 134


state 113

  169 subscript_list: subscript SUBSCRIPT .

    $default  reduce using rule 169 (subscript_list)


state 114

  168 subscript: subscript bracketed_exp_list .

    $default  reduce using rule 168 (subscript)


state 115

   22 func_name: FUNC_CALL .

    $default  reduce using rule 22 (func_name)


state 116

   21 func_name: NAME .

    $default  reduce using rule 21 (func_name)


state 117

   25 lex_builtin: LEX_BUILTIN .

    $default  reduce using rule 25 (lex_builtin)


state 118

   26 lex_builtin: LEX_LENGTH .

    $default  reduce using rule 26 (lex_builtin)


state 119

   24 func_name: '@' . LEX_EVAL

    LEX_EVAL  shift, and go to state 168


state 120

   28 function_prologue: LEX_FUNCTION $@1 func_name . '(' opt_param_list r_paren opt_nls

    '('  shift, and go to state 169


state 121

   23 func_name: lex_builtin .

    $default  reduce using rule 23 (func_name)


state 122

   88 input_redir: '<' . simp_exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    regexp             go to state 31
    a_slash            go to state 32
    simp_exp           go to state 170
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 57


state 123

  131 simp_exp: LEX_GETLINE opt_variable input_redir .

    $default  reduce using rule 131 (simp_exp)


state 124

  145 non_post_simp_exp: LEX_BUILTIN '(' opt_expression_list . r_paren

    ')'  shift, and go to state 132

    r_paren  go to state 171


state 125

  146 non_post_simp_exp: LEX_LENGTH '(' opt_expression_list . r_paren

    ')'  shift, and go to state 132

    r_paren  go to state 172


state 126

  107 exp: exp . LEX_AND exp
  108    | exp . LEX_OR exp
  109    | exp . MATCHOP exp
  110    | exp . LEX_IN simple_variable
  111    | exp . a_relop exp
  112    | exp . '?' exp ':' exp
  144 non_post_simp_exp: '(' exp . r_paren

    RELOP    shift, and go to state 78
    MATCHOP  shift, and go to state 79
    LEX_IN   shift, and go to state 80
    LEX_AND  shift, and go to state 81
    LEX_OR   shift, and go to state 82
    '?'      shift, and go to state 83
    '<'      shift, and go to state 85
    '>'      shift, and go to state 86
    ')'      shift, and go to state 132

    relop_or_less  go to state 87
    a_relop        go to state 88
    r_paren        go to state 135


state 127

  174 opt_incdec: INCREMENT .

    $default  reduce using rule 174 (opt_incdec)


state 128

  175 opt_incdec: DECREMENT .

    $default  reduce using rule 175 (opt_incdec)


state 129

  173 variable: '$' non_post_simp_exp opt_incdec .

    $default  reduce using rule 173 (variable)


state 130

  103 expression_list: expression_list error .
  104                | expression_list error . exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    $default  reduce using rule 103 (expression_list)

    regexp             go to state 31
    a_slash            go to state 32
    exp                go to state 173
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 131

  184 comma: ',' . opt_nls

    NEWLINE  shift, and go to state 19

    $default  reduce using rule 85 (opt_nls)

    nls      go to state 139
    opt_nls  go to state 174


state 132

  179 r_paren: ')' .

    $default  reduce using rule 179 (r_paren)


state 133

  134 simp_exp: '(' expression_list r_paren . LEX_IN simple_variable

    LEX_IN  shift, and go to state 175


state 134

  101 expression_list: expression_list comma . exp
  105                | expression_list comma . error

    error               shift, and go to state 176
    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    regexp             go to state 31
    a_slash            go to state 32
    exp                go to state 177
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 135

  144 non_post_simp_exp: '(' exp r_paren .

    $default  reduce using rule 144 (non_post_simp_exp)


state 136

   12 source: error .

    $default  reduce using rule 12 (source)


state 137

   10 source: FILENAME .
   11       | FILENAME . error

    error  shift, and go to state 178

    NEWLINE  reduce using rule 10 (source)
    ';'      reduce using rule 10 (source)


state 138

    9 rule: '@' LEX_INCLUDE source . statement_term

    NEWLINE  shift, and go to state 19
    ';'      shift, and go to state 69

    statement_term  go to state 179
    nls             go to state 72
    semi            go to state 74


state 139

   84 nls: nls . NEWLINE
   86 opt_nls: nls .

    NEWLINE  shift, and go to state 77

    NEWLINE   [reduce using rule 86 (opt_nls)]
    $default  reduce using rule 86 (opt_nls)


state 140

  177 l_brace: '{' opt_nls .

    $default  reduce using rule 177 (l_brace)


state 141

   20 action: l_brace statements . r_brace opt_semi opt_nls
   34 statements: statements . statement
   35           | statements . error

    error               shift, and go to state 180
    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_IF              shift, and go to state 181
    LEX_RETURN          shift, and go to state 182
    LEX_DELETE          shift, and go to state 183
    LEX_SWITCH          shift, and go to state 184
    LEX_WHILE           shift, and go to state 185
    LEX_DO              shift, and go to state 186
    LEX_FOR             shift, and go to state 187
    LEX_BREAK           shift, and go to state 188
    LEX_CONTINUE        shift, and go to state 189
    LEX_PRINT           shift, and go to state 190
    LEX_PRINTF          shift, and go to state 191
    LEX_NEXT            shift, and go to state 192
    LEX_EXIT            shift, and go to state 193
    LEX_GETLINE         shift, and go to state 13
    LEX_NEXTFILE        shift, and go to state 194
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55
    '{'                 shift, and go to state 68
    '}'                 shift, and go to state 195
    ';'                 shift, and go to state 69

    regexp             go to state 31
    a_slash            go to state 32
    statement          go to state 196
    non_compound_stmt  go to state 197
    simple_stmt        go to state 198
    print              go to state 199
    if_statement       go to state 200
    exp                go to state 201
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42
    l_brace            go to state 202
    r_brace            go to state 203
    semi               go to state 204


state 142

   37 statement_term: semi opt_nls .

    $default  reduce using rule 37 (statement_term)


state 143

   30 regexp: a_slash $@2 REGEXP .

    $default  reduce using rule 30 (regexp)


state 144

  107 exp: exp . LEX_AND exp
  108    | exp . LEX_OR exp
  109    | exp . MATCHOP exp
  109    | exp MATCHOP exp .
  110    | exp . LEX_IN simple_variable
  111    | exp . a_relop exp
  112    | exp . '?' exp ':' exp

    RELOP  shift, and go to state 78
    '<'    shift, and go to state 85
    '>'    shift, and go to state 86

    $default  reduce using rule 109 (exp)

    relop_or_less  go to state 87
    a_relop        go to state 88


state 145

  110 exp: exp LEX_IN simple_variable .

    $default  reduce using rule 110 (exp)


state 146

  107 exp: exp . LEX_AND exp
  107    | exp LEX_AND exp .
  108    | exp . LEX_OR exp
  109    | exp . MATCHOP exp
  110    | exp . LEX_IN simple_variable
  111    | exp . a_relop exp
  112    | exp . '?' exp ':' exp

    RELOP    shift, and go to state 78
    MATCHOP  shift, and go to state 79
    LEX_IN   shift, and go to state 80
    '<'      shift, and go to state 85
    '>'      shift, and go to state 86

    $default  reduce using rule 107 (exp)

    relop_or_less  go to state 87
    a_relop        go to state 88


state 147

  107 exp: exp . LEX_AND exp
  108    | exp . LEX_OR exp
  108    | exp LEX_OR exp .
  109    | exp . MATCHOP exp
  110    | exp . LEX_IN simple_variable
  111    | exp . a_relop exp
  112    | exp . '?' exp ':' exp

    RELOP    shift, and go to state 78
    MATCHOP  shift, and go to state 79
    LEX_IN   shift, and go to state 80
    LEX_AND  shift, and go to state 81
    '<'      shift, and go to state 85
    '>'      shift, and go to state 86

    $default  reduce using rule 108 (exp)

    relop_or_less  go to state 87
    a_relop        go to state 88


state 148

  107 exp: exp . LEX_AND exp
  108    | exp . LEX_OR exp
  109    | exp . MATCHOP exp
  110    | exp . LEX_IN simple_variable
  111    | exp . a_relop exp
  112    | exp . '?' exp ':' exp
  112    | exp '?' exp . ':' exp

    RELOP    shift, and go to state 78
    MATCHOP  shift, and go to state 79
    LEX_IN   shift, and go to state 80
    LEX_AND  shift, and go to state 81
    LEX_OR   shift, and go to state 82
    '?'      shift, and go to state 83
    ':'      shift, and go to state 205
    '<'      shift, and go to state 85
    '>'      shift, and go to state 86

    relop_or_less  go to state 87
    a_relop        go to state 88


state 149

   15 pattern: exp ',' opt_nls . exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    regexp             go to state 31
    a_slash            go to state 32
    exp                go to state 206
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 150

  107 exp: exp . LEX_AND exp
  108    | exp . LEX_OR exp
  109    | exp . MATCHOP exp
  110    | exp . LEX_IN simple_variable
  111    | exp . a_relop exp
  111    | exp a_relop exp .
  112    | exp . '?' exp ':' exp

    RELOP  error (nonassociative)
    '<'    error (nonassociative)
    '>'    error (nonassociative)

    $default  reduce using rule 111 (exp)

    relop_or_less  go to state 87
    a_relop        go to state 88


state 151

  135 simp_exp_nc: common_exp IO_IN LEX_GETLINE . opt_variable

    NAME  shift, and go to state 5
    '$'   shift, and go to state 25

    NAME      [reduce using rule 159 (opt_variable)]
    '$'       [reduce using rule 159 (opt_variable)]
    $default  reduce using rule 159 (opt_variable)

    opt_variable     go to state 207
    simple_variable  go to state 41
    variable         go to state 50


state 152

  125 simp_exp: simp_exp . '^' simp_exp
  126         | simp_exp . '*' simp_exp
  127         | simp_exp . '/' simp_exp
  128         | simp_exp . '%' simp_exp
  129         | simp_exp . '+' simp_exp
  129         | simp_exp '+' simp_exp .
  130         | simp_exp . '-' simp_exp

    '*'  shift, and go to state 93
    '/'  shift, and go to state 94
    '%'  shift, and go to state 95
    '^'  shift, and go to state 96

    $default  reduce using rule 129 (simp_exp)


state 153

  125 simp_exp: simp_exp . '^' simp_exp
  126         | simp_exp . '*' simp_exp
  127         | simp_exp . '/' simp_exp
  128         | simp_exp . '%' simp_exp
  129         | simp_exp . '+' simp_exp
  130         | simp_exp . '-' simp_exp
  130         | simp_exp '-' simp_exp .

    '*'  shift, and go to state 93
    '/'  shift, and go to state 94
    '%'  shift, and go to state 95
    '^'  shift, and go to state 96

    $default  reduce using rule 130 (simp_exp)


state 154

  125 simp_exp: simp_exp . '^' simp_exp
  126         | simp_exp . '*' simp_exp
  126         | simp_exp '*' simp_exp .
  127         | simp_exp . '/' simp_exp
  128         | simp_exp . '%' simp_exp
  129         | simp_exp . '+' simp_exp
  130         | simp_exp . '-' simp_exp

    '^'  shift, and go to state 96

    $default  reduce using rule 126 (simp_exp)


state 155

  125 simp_exp: simp_exp . '^' simp_exp
  126         | simp_exp . '*' simp_exp
  127         | simp_exp . '/' simp_exp
  127         | simp_exp '/' simp_exp .
  128         | simp_exp . '%' simp_exp
  129         | simp_exp . '+' simp_exp
  130         | simp_exp . '-' simp_exp

    '^'  shift, and go to state 96

    $default  reduce using rule 127 (simp_exp)


state 156

  125 simp_exp: simp_exp . '^' simp_exp
  126         | simp_exp . '*' simp_exp
  127         | simp_exp . '/' simp_exp
  128         | simp_exp . '%' simp_exp
  128         | simp_exp '%' simp_exp .
  129         | simp_exp . '+' simp_exp
  130         | simp_exp . '-' simp_exp

    '^'  shift, and go to state 96

    $default  reduce using rule 128 (simp_exp)


state 157

  125 simp_exp: simp_exp . '^' simp_exp
  125         | simp_exp '^' simp_exp .
  126         | simp_exp . '*' simp_exp
  127         | simp_exp . '/' simp_exp
  128         | simp_exp . '%' simp_exp
  129         | simp_exp . '+' simp_exp
  130         | simp_exp . '-' simp_exp

    '^'  shift, and go to state 96

    $default  reduce using rule 125 (simp_exp)


state 158

  125 simp_exp: simp_exp . '^' simp_exp
  126         | simp_exp . '*' simp_exp
  127         | simp_exp . '/' simp_exp
  128         | simp_exp . '%' simp_exp
  129         | simp_exp . '+' simp_exp
  130         | simp_exp . '-' simp_exp
  140 simp_exp_nc: simp_exp_nc '+' simp_exp .

    '*'  shift, and go to state 93
    '/'  shift, and go to state 94
    '%'  shift, and go to state 95
    '^'  shift, and go to state 96

    $default  reduce using rule 140 (simp_exp_nc)


state 159

  125 simp_exp: simp_exp . '^' simp_exp
  126         | simp_exp . '*' simp_exp
  127         | simp_exp . '/' simp_exp
  128         | simp_exp . '%' simp_exp
  129         | simp_exp . '+' simp_exp
  130         | simp_exp . '-' simp_exp
  141 simp_exp_nc: simp_exp_nc '-' simp_exp .

    '*'  shift, and go to state 93
    '/'  shift, and go to state 94
    '%'  shift, and go to state 95
    '^'  shift, and go to state 96

    $default  reduce using rule 141 (simp_exp_nc)


state 160

  125 simp_exp: simp_exp . '^' simp_exp
  126         | simp_exp . '*' simp_exp
  127         | simp_exp . '/' simp_exp
  128         | simp_exp . '%' simp_exp
  129         | simp_exp . '+' simp_exp
  130         | simp_exp . '-' simp_exp
  137 simp_exp_nc: simp_exp_nc '*' simp_exp .

    '^'  shift, and go to state 96

    $default  reduce using rule 137 (simp_exp_nc)


state 161

  125 simp_exp: simp_exp . '^' simp_exp
  126         | simp_exp . '*' simp_exp
  127         | simp_exp . '/' simp_exp
  128         | simp_exp . '%' simp_exp
  129         | simp_exp . '+' simp_exp
  130         | simp_exp . '-' simp_exp
  138 simp_exp_nc: simp_exp_nc '/' simp_exp .

    '^'  shift, and go to state 96

    $default  reduce using rule 138 (simp_exp_nc)


state 162

  125 simp_exp: simp_exp . '^' simp_exp
  126         | simp_exp . '*' simp_exp
  127         | simp_exp . '/' simp_exp
  128         | simp_exp . '%' simp_exp
  129         | simp_exp . '+' simp_exp
  130         | simp_exp . '-' simp_exp
  139 simp_exp_nc: simp_exp_nc '%' simp_exp .

    '^'  shift, and go to state 96

    $default  reduce using rule 139 (simp_exp_nc)


state 163

  125 simp_exp: simp_exp . '^' simp_exp
  126         | simp_exp . '*' simp_exp
  127         | simp_exp . '/' simp_exp
  128         | simp_exp . '%' simp_exp
  129         | simp_exp . '+' simp_exp
  130         | simp_exp . '-' simp_exp
  136 simp_exp_nc: simp_exp_nc '^' simp_exp .

    '^'  shift, and go to state 96

    $default  reduce using rule 136 (simp_exp_nc)


state 164

  116 assign_operator: SLASH_BEFORE_EQUAL ASSIGN .

    $default  reduce using rule 116 (assign_operator)


state 165

  106 exp: variable assign_operator exp .
  107    | exp . LEX_AND exp
  108    | exp . LEX_OR exp
  109    | exp . MATCHOP exp
  110    | exp . LEX_IN simple_variable
  111    | exp . a_relop exp
  112    | exp . '?' exp ':' exp

    RELOP    shift, and go to state 78
    MATCHOP  shift, and go to state 79
    LEX_IN   shift, and go to state 80
    LEX_AND  shift, and go to state 81
    LEX_OR   shift, and go to state 82
    '?'      shift, and go to state 83
    '<'      shift, and go to state 85
    '>'      shift, and go to state 86

    $default  reduce using rule 106 (exp)

    relop_or_less  go to state 87
    a_relop        go to state 88


state 166

  158 direct_func_call: FUNC_CALL '(' opt_expression_list r_paren .

    $default  reduce using rule 158 (direct_func_call)


state 167

  166 bracketed_exp_list: '[' expression_list ']' .

    $default  reduce using rule 166 (bracketed_exp_list)


state 168

   24 func_name: '@' LEX_EVAL .

    $default  reduce using rule 24 (func_name)


state 169

   28 function_prologue: LEX_FUNCTION $@1 func_name '(' . opt_param_list r_paren opt_nls

    error  shift, and go to state 208
    NAME   shift, and go to state 209

    ')'  reduce using rule 89 (opt_param_list)

    opt_param_list  go to state 210
    param_list      go to state 211


state 170

   88 input_redir: '<' simp_exp .
  125 simp_exp: simp_exp . '^' simp_exp
  126         | simp_exp . '*' simp_exp
  127         | simp_exp . '/' simp_exp
  128         | simp_exp . '%' simp_exp
  129         | simp_exp . '+' simp_exp
  130         | simp_exp . '-' simp_exp

    '+'  shift, and go to state 91
    '-'  shift, and go to state 92
    '*'  shift, and go to state 93
    '/'  shift, and go to state 94
    '%'  shift, and go to state 95
    '^'  shift, and go to state 96

    $default  reduce using rule 88 (input_redir)


state 171

  145 non_post_simp_exp: LEX_BUILTIN '(' opt_expression_list r_paren .

    $default  reduce using rule 145 (non_post_simp_exp)


state 172

  146 non_post_simp_exp: LEX_LENGTH '(' opt_expression_list r_paren .

    $default  reduce using rule 146 (non_post_simp_exp)


state 173

  104 expression_list: expression_list error exp .
  107 exp: exp . LEX_AND exp
  108    | exp . LEX_OR exp
  109    | exp . MATCHOP exp
  110    | exp . LEX_IN simple_variable
  111    | exp . a_relop exp
  112    | exp . '?' exp ':' exp

    RELOP    shift, and go to state 78
    MATCHOP  shift, and go to state 79
    LEX_IN   shift, and go to state 80
    LEX_AND  shift, and go to state 81
    LEX_OR   shift, and go to state 82
    '?'      shift, and go to state 83
    '<'      shift, and go to state 85
    '>'      shift, and go to state 86

    $default  reduce using rule 104 (expression_list)

    relop_or_less  go to state 87
    a_relop        go to state 88


state 174

  184 comma: ',' opt_nls .

    $default  reduce using rule 184 (comma)


state 175

  134 simp_exp: '(' expression_list r_paren LEX_IN . simple_variable

    NAME  shift, and go to state 5

    simple_variable  go to state 212


state 176

  105 expression_list: expression_list comma error .

    $default  reduce using rule 105 (expression_list)


state 177

  101 expression_list: expression_list comma exp .
  107 exp: exp . LEX_AND exp
  108    | exp . LEX_OR exp
  109    | exp . MATCHOP exp
  110    | exp . LEX_IN simple_variable
  111    | exp . a_relop exp
  112    | exp . '?' exp ':' exp

    RELOP    shift, and go to state 78
    MATCHOP  shift, and go to state 79
    LEX_IN   shift, and go to state 80
    LEX_AND  shift, and go to state 81
    LEX_OR   shift, and go to state 82
    '?'      shift, and go to state 83
    '<'      shift, and go to state 85
    '>'      shift, and go to state 86

    $default  reduce using rule 101 (expression_list)

    relop_or_less  go to state 87
    a_relop        go to state 88


state 178

   11 source: FILENAME error .

    $default  reduce using rule 11 (source)


state 179

    9 rule: '@' LEX_INCLUDE source statement_term .

    $default  reduce using rule 9 (rule)


state 180

   35 statements: statements error .

    $default  reduce using rule 35 (statements)


state 181

   81 if_statement: LEX_IF . '(' exp r_paren opt_nls statement
   82             | LEX_IF . '(' exp r_paren opt_nls statement LEX_ELSE opt_nls statement

    '('  shift, and go to state 213


state 182

   54 non_compound_stmt: LEX_RETURN . $@3 opt_exp statement_term

    $default  reduce using rule 53 ($@3)

    $@3  go to state 214


state 183

   59 simple_stmt: LEX_DELETE . NAME $@5 delete_subscript_list
   60            | LEX_DELETE . '(' NAME ')'

    NAME  shift, and go to state 215
    '('   shift, and go to state 216


state 184

   41 statement: LEX_SWITCH . '(' exp r_paren opt_nls l_brace case_statements opt_nls r_brace

    '('  shift, and go to state 217


state 185

   42 statement: LEX_WHILE . '(' exp r_paren opt_nls statement

    '('  shift, and go to state 218


state 186

   43 statement: LEX_DO . opt_nls statement LEX_WHILE '(' exp r_paren opt_nls

    NEWLINE  shift, and go to state 19

    $default  reduce using rule 85 (opt_nls)

    nls      go to state 139
    opt_nls  go to state 219


state 187

   44 statement: LEX_FOR . '(' NAME LEX_IN simple_variable r_paren opt_nls statement
   45          | LEX_FOR . '(' opt_simple_stmt semi opt_nls exp semi opt_nls opt_simple_stmt r_paren opt_nls statement
   46          | LEX_FOR . '(' opt_simple_stmt semi opt_nls semi opt_nls opt_simple_stmt r_paren opt_nls statement

    '('  shift, and go to state 220


state 188

   48 non_compound_stmt: LEX_BREAK . statement_term

    NEWLINE  shift, and go to state 19
    ';'      shift, and go to state 69

    statement_term  go to state 221
    nls             go to state 72
    semi            go to state 74


state 189

   49 non_compound_stmt: LEX_CONTINUE . statement_term

    NEWLINE  shift, and go to state 19
    ';'      shift, and go to state 69

    statement_term  go to state 222
    nls             go to state 72
    semi            go to state 74


state 190

   74 print: LEX_PRINT .

    $default  reduce using rule 74 (print)


state 191

   75 print: LEX_PRINTF .

    $default  reduce using rule 75 (print)


state 192

   50 non_compound_stmt: LEX_NEXT . statement_term

    NEWLINE  shift, and go to state 19
    ';'      shift, and go to state 69

    statement_term  go to state 223
    nls             go to state 72
    semi            go to state 74


state 193

   52 non_compound_stmt: LEX_EXIT . opt_exp statement_term

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    $default  reduce using rule 96 (opt_exp)

    regexp             go to state 31
    a_slash            go to state 32
    opt_exp            go to state 224
    exp                go to state 225
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 194

   51 non_compound_stmt: LEX_NEXTFILE . statement_term

    NEWLINE  shift, and go to state 19
    ';'      shift, and go to state 69

    statement_term  go to state 226
    nls             go to state 72
    semi            go to state 74


state 195

  178 r_brace: '}' . opt_nls

    NEWLINE  shift, and go to state 19

    NEWLINE   [reduce using rule 85 (opt_nls)]
    $default  reduce using rule 85 (opt_nls)

    nls      go to state 139
    opt_nls  go to state 227


state 196

   34 statements: statements statement .

    $default  reduce using rule 34 (statements)


state 197

   47 statement: non_compound_stmt .

    $default  reduce using rule 47 (statement)


state 198

   55 non_compound_stmt: simple_stmt . statement_term

    NEWLINE  shift, and go to state 19
    ';'      shift, and go to state 69

    statement_term  go to state 228
    nls             go to state 72
    semi            go to state 74


state 199

   57 simple_stmt: print . $@4 print_expression_list output_redir

    $default  reduce using rule 56 ($@4)

    $@4  go to state 229


state 200

   40 statement: if_statement .

    $default  reduce using rule 40 (statement)


state 201

   61 simple_stmt: exp .
  107 exp: exp . LEX_AND exp
  108    | exp . LEX_OR exp
  109    | exp . MATCHOP exp
  110    | exp . LEX_IN simple_variable
  111    | exp . a_relop exp
  112    | exp . '?' exp ':' exp

    RELOP    shift, and go to state 78
    MATCHOP  shift, and go to state 79
    LEX_IN   shift, and go to state 80
    LEX_AND  shift, and go to state 81
    LEX_OR   shift, and go to state 82
    '?'      shift, and go to state 83
    '<'      shift, and go to state 85
    '>'      shift, and go to state 86

    $default  reduce using rule 61 (simple_stmt)

    relop_or_less  go to state 87
    a_relop        go to state 88


state 202

   39 statement: l_brace . statements r_brace

    $default  reduce using rule 33 (statements)

    statements  go to state 230


state 203

   20 action: l_brace statements r_brace . opt_semi opt_nls

    ';'  shift, and go to state 69

    ';'       [reduce using rule 180 (opt_semi)]
    $default  reduce using rule 180 (opt_semi)

    opt_semi  go to state 231
    semi      go to state 232


state 204

   38 statement: semi . opt_nls

    NEWLINE  shift, and go to state 19

    NEWLINE   [reduce using rule 85 (opt_nls)]
    $default  reduce using rule 85 (opt_nls)

    nls      go to state 139
    opt_nls  go to state 233


state 205

  112 exp: exp '?' exp ':' . exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    regexp             go to state 31
    a_slash            go to state 32
    exp                go to state 234
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 206

   15 pattern: exp ',' opt_nls exp .
  107 exp: exp . LEX_AND exp
  108    | exp . LEX_OR exp
  109    | exp . MATCHOP exp
  110    | exp . LEX_IN simple_variable
  111    | exp . a_relop exp
  112    | exp . '?' exp ':' exp

    RELOP    shift, and go to state 78
    MATCHOP  shift, and go to state 79
    LEX_IN   shift, and go to state 80
    LEX_AND  shift, and go to state 81
    LEX_OR   shift, and go to state 82
    '?'      shift, and go to state 83
    '<'      shift, and go to state 85
    '>'      shift, and go to state 86

    $default  reduce using rule 15 (pattern)

    relop_or_less  go to state 87
    a_relop        go to state 88


state 207

  135 simp_exp_nc: common_exp IO_IN LEX_GETLINE opt_variable .

    $default  reduce using rule 135 (simp_exp_nc)


state 208

   93 param_list: error .

    $default  reduce using rule 93 (param_list)


state 209

   91 param_list: NAME .

    $default  reduce using rule 91 (param_list)


state 210

   28 function_prologue: LEX_FUNCTION $@1 func_name '(' opt_param_list . r_paren opt_nls

    ')'  shift, and go to state 132

    r_paren  go to state 235


state 211

   90 opt_param_list: param_list .
   92 param_list: param_list . comma NAME
   94           | param_list . error
   95           | param_list . comma error

    error  shift, and go to state 236
    ','    shift, and go to state 131

    ')'  reduce using rule 90 (opt_param_list)

    comma  go to state 237


state 212

  134 simp_exp: '(' expression_list r_paren LEX_IN simple_variable .

    $default  reduce using rule 134 (simp_exp)


state 213

   81 if_statement: LEX_IF '(' . exp r_paren opt_nls statement
   82             | LEX_IF '(' . exp r_paren opt_nls statement LEX_ELSE opt_nls statement

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    regexp             go to state 31
    a_slash            go to state 32
    exp                go to state 238
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 214

   54 non_compound_stmt: LEX_RETURN $@3 . opt_exp statement_term

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    $default  reduce using rule 96 (opt_exp)

    regexp             go to state 31
    a_slash            go to state 32
    opt_exp            go to state 239
    exp                go to state 225
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 215

   59 simple_stmt: LEX_DELETE NAME . $@5 delete_subscript_list

    $default  reduce using rule 58 ($@5)

    $@5  go to state 240


state 216

   60 simple_stmt: LEX_DELETE '(' . NAME ')'

    NAME  shift, and go to state 241


state 217

   41 statement: LEX_SWITCH '(' . exp r_paren opt_nls l_brace case_statements opt_nls r_brace

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    regexp             go to state 31
    a_slash            go to state 32
    exp                go to state 242
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 218

   42 statement: LEX_WHILE '(' . exp r_paren opt_nls statement

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    regexp             go to state 31
    a_slash            go to state 32
    exp                go to state 243
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 219

   43 statement: LEX_DO opt_nls . statement LEX_WHILE '(' exp r_paren opt_nls

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_IF              shift, and go to state 181
    LEX_RETURN          shift, and go to state 182
    LEX_DELETE          shift, and go to state 183
    LEX_SWITCH          shift, and go to state 184
    LEX_WHILE           shift, and go to state 185
    LEX_DO              shift, and go to state 186
    LEX_FOR             shift, and go to state 187
    LEX_BREAK           shift, and go to state 188
    LEX_CONTINUE        shift, and go to state 189
    LEX_PRINT           shift, and go to state 190
    LEX_PRINTF          shift, and go to state 191
    LEX_NEXT            shift, and go to state 192
    LEX_EXIT            shift, and go to state 193
    LEX_GETLINE         shift, and go to state 13
    LEX_NEXTFILE        shift, and go to state 194
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55
    '{'                 shift, and go to state 68
    ';'                 shift, and go to state 69

    regexp             go to state 31
    a_slash            go to state 32
    statement          go to state 244
    non_compound_stmt  go to state 197
    simple_stmt        go to state 198
    print              go to state 199
    if_statement       go to state 200
    exp                go to state 201
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42
    l_brace            go to state 202
    semi               go to state 204


state 220

   44 statement: LEX_FOR '(' . NAME LEX_IN simple_variable r_paren opt_nls statement
   45          | LEX_FOR '(' . opt_simple_stmt semi opt_nls exp semi opt_nls opt_simple_stmt r_paren opt_nls statement
   46          | LEX_FOR '(' . opt_simple_stmt semi opt_nls semi opt_nls opt_simple_stmt r_paren opt_nls statement

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 245
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_DELETE          shift, and go to state 183
    LEX_PRINT           shift, and go to state 190
    LEX_PRINTF          shift, and go to state 191
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    $default  reduce using rule 62 (opt_simple_stmt)

    regexp             go to state 31
    a_slash            go to state 32
    simple_stmt        go to state 246
    opt_simple_stmt    go to state 247
    print              go to state 199
    exp                go to state 201
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 221

   48 non_compound_stmt: LEX_BREAK statement_term .

    $default  reduce using rule 48 (non_compound_stmt)


state 222

   49 non_compound_stmt: LEX_CONTINUE statement_term .

    $default  reduce using rule 49 (non_compound_stmt)


state 223

   50 non_compound_stmt: LEX_NEXT statement_term .

    $default  reduce using rule 50 (non_compound_stmt)


state 224

   52 non_compound_stmt: LEX_EXIT opt_exp . statement_term

    NEWLINE  shift, and go to state 19
    ';'      shift, and go to state 69

    statement_term  go to state 248
    nls             go to state 72
    semi            go to state 74


state 225

   97 opt_exp: exp .
  107 exp: exp . LEX_AND exp
  108    | exp . LEX_OR exp
  109    | exp . MATCHOP exp
  110    | exp . LEX_IN simple_variable
  111    | exp . a_relop exp
  112    | exp . '?' exp ':' exp

    RELOP    shift, and go to state 78
    MATCHOP  shift, and go to state 79
    LEX_IN   shift, and go to state 80
    LEX_AND  shift, and go to state 81
    LEX_OR   shift, and go to state 82
    '?'      shift, and go to state 83
    '<'      shift, and go to state 85
    '>'      shift, and go to state 86

    $default  reduce using rule 97 (opt_exp)

    relop_or_less  go to state 87
    a_relop        go to state 88


state 226

   51 non_compound_stmt: LEX_NEXTFILE statement_term .

    $default  reduce using rule 51 (non_compound_stmt)


state 227

  178 r_brace: '}' opt_nls .

    $default  reduce using rule 178 (r_brace)


state 228

   55 non_compound_stmt: simple_stmt statement_term .

    $default  reduce using rule 55 (non_compound_stmt)


state 229

   57 simple_stmt: print $@4 . print_expression_list output_redir

    error               shift, and go to state 63
    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 249
    '@'                 shift, and go to state 55

    IO_OUT   reduce using rule 98 (opt_expression_list)
    NEWLINE  reduce using rule 98 (opt_expression_list)
    ')'      reduce using rule 98 (opt_expression_list)
    ';'      reduce using rule 98 (opt_expression_list)

    regexp                 go to state 31
    a_slash                go to state 32
    print_expression_list  go to state 250
    opt_expression_list    go to state 251
    expression_list        go to state 110
    exp                    go to state 111
    common_exp             go to state 35
    simp_exp               go to state 36
    simp_exp_nc            go to state 37
    non_post_simp_exp      go to state 38
    func_call              go to state 39
    direct_func_call       go to state 40
    simple_variable        go to state 41
    variable               go to state 42


state 230

   34 statements: statements . statement
   35           | statements . error
   39 statement: l_brace statements . r_brace

    error               shift, and go to state 180
    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_IF              shift, and go to state 181
    LEX_RETURN          shift, and go to state 182
    LEX_DELETE          shift, and go to state 183
    LEX_SWITCH          shift, and go to state 184
    LEX_WHILE           shift, and go to state 185
    LEX_DO              shift, and go to state 186
    LEX_FOR             shift, and go to state 187
    LEX_BREAK           shift, and go to state 188
    LEX_CONTINUE        shift, and go to state 189
    LEX_PRINT           shift, and go to state 190
    LEX_PRINTF          shift, and go to state 191
    LEX_NEXT            shift, and go to state 192
    LEX_EXIT            shift, and go to state 193
    LEX_GETLINE         shift, and go to state 13
    LEX_NEXTFILE        shift, and go to state 194
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55
    '{'                 shift, and go to state 68
    '}'                 shift, and go to state 195
    ';'                 shift, and go to state 69

    regexp             go to state 31
    a_slash            go to state 32
    statement          go to state 196
    non_compound_stmt  go to state 197
    simple_stmt        go to state 198
    print              go to state 199
    if_statement       go to state 200
    exp                go to state 201
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42
    l_brace            go to state 202
    r_brace            go to state 252
    semi               go to state 204


state 231

   20 action: l_brace statements r_brace opt_semi . opt_nls

    NEWLINE  shift, and go to state 19

    NEWLINE   [reduce using rule 85 (opt_nls)]
    $default  reduce using rule 85 (opt_nls)

    nls      go to state 139
    opt_nls  go to state 253


state 232

  181 opt_semi: semi .

    $default  reduce using rule 181 (opt_semi)


state 233

   38 statement: semi opt_nls .

    $default  reduce using rule 38 (statement)


state 234

  107 exp: exp . LEX_AND exp
  108    | exp . LEX_OR exp
  109    | exp . MATCHOP exp
  110    | exp . LEX_IN simple_variable
  111    | exp . a_relop exp
  112    | exp . '?' exp ':' exp
  112    | exp '?' exp ':' exp .

    RELOP    shift, and go to state 78
    MATCHOP  shift, and go to state 79
    LEX_IN   shift, and go to state 80
    LEX_AND  shift, and go to state 81
    LEX_OR   shift, and go to state 82
    '?'      shift, and go to state 83
    '<'      shift, and go to state 85
    '>'      shift, and go to state 86

    $default  reduce using rule 112 (exp)

    relop_or_less  go to state 87
    a_relop        go to state 88


state 235

   28 function_prologue: LEX_FUNCTION $@1 func_name '(' opt_param_list r_paren . opt_nls

    NEWLINE  shift, and go to state 19

    $default  reduce using rule 85 (opt_nls)

    nls      go to state 139
    opt_nls  go to state 254


state 236

   94 param_list: param_list error .

    $default  reduce using rule 94 (param_list)


state 237

   92 param_list: param_list comma . NAME
   95           | param_list comma . error

    error  shift, and go to state 255
    NAME   shift, and go to state 256


state 238

   81 if_statement: LEX_IF '(' exp . r_paren opt_nls statement
   82             | LEX_IF '(' exp . r_paren opt_nls statement LEX_ELSE opt_nls statement
  107 exp: exp . LEX_AND exp
  108    | exp . LEX_OR exp
  109    | exp . MATCHOP exp
  110    | exp . LEX_IN simple_variable
  111    | exp . a_relop exp
  112    | exp . '?' exp ':' exp

    RELOP    shift, and go to state 78
    MATCHOP  shift, and go to state 79
    LEX_IN   shift, and go to state 80
    LEX_AND  shift, and go to state 81
    LEX_OR   shift, and go to state 82
    '?'      shift, and go to state 83
    '<'      shift, and go to state 85
    '>'      shift, and go to state 86
    ')'      shift, and go to state 132

    relop_or_less  go to state 87
    a_relop        go to state 88
    r_paren        go to state 257


state 239

   54 non_compound_stmt: LEX_RETURN $@3 opt_exp . statement_term

    NEWLINE  shift, and go to state 19
    ';'      shift, and go to state 69

    statement_term  go to state 258
    nls             go to state 72
    semi            go to state 74


state 240

   59 simple_stmt: LEX_DELETE NAME $@5 . delete_subscript_list

    '['  shift, and go to state 44

    $default  reduce using rule 161 (delete_subscript_list)

    delete_subscript_list  go to state 259
    delete_subscript       go to state 260
    delete_exp_list        go to state 261
    bracketed_exp_list     go to state 262


state 241

   60 simple_stmt: LEX_DELETE '(' NAME . ')'

    ')'  shift, and go to state 263


state 242

   41 statement: LEX_SWITCH '(' exp . r_paren opt_nls l_brace case_statements opt_nls r_brace
  107 exp: exp . LEX_AND exp
  108    | exp . LEX_OR exp
  109    | exp . MATCHOP exp
  110    | exp . LEX_IN simple_variable
  111    | exp . a_relop exp
  112    | exp . '?' exp ':' exp

    RELOP    shift, and go to state 78
    MATCHOP  shift, and go to state 79
    LEX_IN   shift, and go to state 80
    LEX_AND  shift, and go to state 81
    LEX_OR   shift, and go to state 82
    '?'      shift, and go to state 83
    '<'      shift, and go to state 85
    '>'      shift, and go to state 86
    ')'      shift, and go to state 132

    relop_or_less  go to state 87
    a_relop        go to state 88
    r_paren        go to state 264


state 243

   42 statement: LEX_WHILE '(' exp . r_paren opt_nls statement
  107 exp: exp . LEX_AND exp
  108    | exp . LEX_OR exp
  109    | exp . MATCHOP exp
  110    | exp . LEX_IN simple_variable
  111    | exp . a_relop exp
  112    | exp . '?' exp ':' exp

    RELOP    shift, and go to state 78
    MATCHOP  shift, and go to state 79
    LEX_IN   shift, and go to state 80
    LEX_AND  shift, and go to state 81
    LEX_OR   shift, and go to state 82
    '?'      shift, and go to state 83
    '<'      shift, and go to state 85
    '>'      shift, and go to state 86
    ')'      shift, and go to state 132

    relop_or_less  go to state 87
    a_relop        go to state 88
    r_paren        go to state 265


state 244

   43 statement: LEX_DO opt_nls statement . LEX_WHILE '(' exp r_paren opt_nls

    LEX_WHILE  shift, and go to state 266


state 245

   44 statement: LEX_FOR '(' NAME . LEX_IN simple_variable r_paren opt_nls statement
  170 simple_variable: NAME .
  171                | NAME . subscript_list

    LEX_IN  shift, and go to state 267
    '['     shift, and go to state 44

    LEX_IN    [reduce using rule 170 (simple_variable)]
    $default  reduce using rule 170 (simple_variable)

    bracketed_exp_list  go to state 45
    subscript           go to state 46
    subscript_list      go to state 47


state 246

   63 opt_simple_stmt: simple_stmt .

    $default  reduce using rule 63 (opt_simple_stmt)


state 247

   45 statement: LEX_FOR '(' opt_simple_stmt . semi opt_nls exp semi opt_nls opt_simple_stmt r_paren opt_nls statement
   46          | LEX_FOR '(' opt_simple_stmt . semi opt_nls semi opt_nls opt_simple_stmt r_paren opt_nls statement

    ';'  shift, and go to state 69

    semi  go to state 268


state 248

   52 non_compound_stmt: LEX_EXIT opt_exp statement_term .

    $default  reduce using rule 52 (non_compound_stmt)


state 249

   77 print_expression_list: '(' . expression_list r_paren
  134 simp_exp: '(' . expression_list r_paren LEX_IN simple_variable
  144 non_post_simp_exp: '(' . exp r_paren

    error               shift, and go to state 63
    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    regexp             go to state 31
    a_slash            go to state 32
    expression_list    go to state 269
    exp                go to state 65
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 250

   57 simple_stmt: print $@4 print_expression_list . output_redir

    IO_OUT  shift, and go to state 270

    $default  reduce using rule 78 (output_redir)

    output_redir  go to state 271


state 251

   76 print_expression_list: opt_expression_list .

    $default  reduce using rule 76 (print_expression_list)


state 252

   39 statement: l_brace statements r_brace .

    $default  reduce using rule 39 (statement)


state 253

   20 action: l_brace statements r_brace opt_semi opt_nls .

    $default  reduce using rule 20 (action)


state 254

   28 function_prologue: LEX_FUNCTION $@1 func_name '(' opt_param_list r_paren opt_nls .

    $default  reduce using rule 28 (function_prologue)


state 255

   95 param_list: param_list comma error .

    $default  reduce using rule 95 (param_list)


state 256

   92 param_list: param_list comma NAME .

    $default  reduce using rule 92 (param_list)


state 257

   81 if_statement: LEX_IF '(' exp r_paren . opt_nls statement
   82             | LEX_IF '(' exp r_paren . opt_nls statement LEX_ELSE opt_nls statement

    NEWLINE  shift, and go to state 19

    $default  reduce using rule 85 (opt_nls)

    nls      go to state 139
    opt_nls  go to state 272


state 258

   54 non_compound_stmt: LEX_RETURN $@3 opt_exp statement_term .

    $default  reduce using rule 54 (non_compound_stmt)


state 259

   59 simple_stmt: LEX_DELETE NAME $@5 delete_subscript_list .

    $default  reduce using rule 59 (simple_stmt)


state 260

  162 delete_subscript_list: delete_subscript . SUBSCRIPT
  164 delete_subscript: delete_subscript . delete_exp_list

    SUBSCRIPT  shift, and go to state 273
    '['        shift, and go to state 44

    delete_exp_list     go to state 274
    bracketed_exp_list  go to state 262


state 261

  163 delete_subscript: delete_exp_list .

    $default  reduce using rule 163 (delete_subscript)


state 262

  165 delete_exp_list: bracketed_exp_list .

    $default  reduce using rule 165 (delete_exp_list)


state 263

   60 simple_stmt: LEX_DELETE '(' NAME ')' .

    $default  reduce using rule 60 (simple_stmt)


state 264

   41 statement: LEX_SWITCH '(' exp r_paren . opt_nls l_brace case_statements opt_nls r_brace

    NEWLINE  shift, and go to state 19

    $default  reduce using rule 85 (opt_nls)

    nls      go to state 139
    opt_nls  go to state 275


state 265

   42 statement: LEX_WHILE '(' exp r_paren . opt_nls statement

    NEWLINE  shift, and go to state 19

    $default  reduce using rule 85 (opt_nls)

    nls      go to state 139
    opt_nls  go to state 276


state 266

   43 statement: LEX_DO opt_nls statement LEX_WHILE . '(' exp r_paren opt_nls

    '('  shift, and go to state 277


state 267

   44 statement: LEX_FOR '(' NAME LEX_IN . simple_variable r_paren opt_nls statement

    NAME  shift, and go to state 5

    simple_variable  go to state 278


state 268

   45 statement: LEX_FOR '(' opt_simple_stmt semi . opt_nls exp semi opt_nls opt_simple_stmt r_paren opt_nls statement
   46          | LEX_FOR '(' opt_simple_stmt semi . opt_nls semi opt_nls opt_simple_stmt r_paren opt_nls statement

    NEWLINE  shift, and go to state 19

    $default  reduce using rule 85 (opt_nls)

    nls      go to state 139
    opt_nls  go to state 279


state 269

   77 print_expression_list: '(' expression_list . r_paren
  101 expression_list: expression_list . comma exp
  103                | expression_list . error
  104                | expression_list . error exp
  105                | expression_list . comma error
  134 simp_exp: '(' expression_list . r_paren LEX_IN simple_variable

    error  shift, and go to state 130
    ','    shift, and go to state 131
    ')'    shift, and go to state 132

    r_paren  go to state 280
    comma    go to state 134


state 270

   80 output_redir: IO_OUT . $@6 common_exp

    $default  reduce using rule 79 ($@6)

    $@6  go to state 281


state 271

   57 simple_stmt: print $@4 print_expression_list output_redir .

    $default  reduce using rule 57 (simple_stmt)


state 272

   81 if_statement: LEX_IF '(' exp r_paren opt_nls . statement
   82             | LEX_IF '(' exp r_paren opt_nls . statement LEX_ELSE opt_nls statement

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_IF              shift, and go to state 181
    LEX_RETURN          shift, and go to state 182
    LEX_DELETE          shift, and go to state 183
    LEX_SWITCH          shift, and go to state 184
    LEX_WHILE           shift, and go to state 185
    LEX_DO              shift, and go to state 186
    LEX_FOR             shift, and go to state 187
    LEX_BREAK           shift, and go to state 188
    LEX_CONTINUE        shift, and go to state 189
    LEX_PRINT           shift, and go to state 190
    LEX_PRINTF          shift, and go to state 191
    LEX_NEXT            shift, and go to state 192
    LEX_EXIT            shift, and go to state 193
    LEX_GETLINE         shift, and go to state 13
    LEX_NEXTFILE        shift, and go to state 194
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55
    '{'                 shift, and go to state 68
    ';'                 shift, and go to state 69

    regexp             go to state 31
    a_slash            go to state 32
    statement          go to state 282
    non_compound_stmt  go to state 197
    simple_stmt        go to state 198
    print              go to state 199
    if_statement       go to state 200
    exp                go to state 201
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42
    l_brace            go to state 202
    semi               go to state 204


state 273

  162 delete_subscript_list: delete_subscript SUBSCRIPT .

    $default  reduce using rule 162 (delete_subscript_list)


state 274

  164 delete_subscript: delete_subscript delete_exp_list .

    $default  reduce using rule 164 (delete_subscript)


state 275

   41 statement: LEX_SWITCH '(' exp r_paren opt_nls . l_brace case_statements opt_nls r_brace

    '{'  shift, and go to state 68

    l_brace  go to state 283


state 276

   42 statement: LEX_WHILE '(' exp r_paren opt_nls . statement

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_IF              shift, and go to state 181
    LEX_RETURN          shift, and go to state 182
    LEX_DELETE          shift, and go to state 183
    LEX_SWITCH          shift, and go to state 184
    LEX_WHILE           shift, and go to state 185
    LEX_DO              shift, and go to state 186
    LEX_FOR             shift, and go to state 187
    LEX_BREAK           shift, and go to state 188
    LEX_CONTINUE        shift, and go to state 189
    LEX_PRINT           shift, and go to state 190
    LEX_PRINTF          shift, and go to state 191
    LEX_NEXT            shift, and go to state 192
    LEX_EXIT            shift, and go to state 193
    LEX_GETLINE         shift, and go to state 13
    LEX_NEXTFILE        shift, and go to state 194
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55
    '{'                 shift, and go to state 68
    ';'                 shift, and go to state 69

    regexp             go to state 31
    a_slash            go to state 32
    statement          go to state 284
    non_compound_stmt  go to state 197
    simple_stmt        go to state 198
    print              go to state 199
    if_statement       go to state 200
    exp                go to state 201
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42
    l_brace            go to state 202
    semi               go to state 204


state 277

   43 statement: LEX_DO opt_nls statement LEX_WHILE '(' . exp r_paren opt_nls

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    regexp             go to state 31
    a_slash            go to state 32
    exp                go to state 285
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 278

   44 statement: LEX_FOR '(' NAME LEX_IN simple_variable . r_paren opt_nls statement

    ')'  shift, and go to state 132

    r_paren  go to state 286


state 279

   45 statement: LEX_FOR '(' opt_simple_stmt semi opt_nls . exp semi opt_nls opt_simple_stmt r_paren opt_nls statement
   46          | LEX_FOR '(' opt_simple_stmt semi opt_nls . semi opt_nls opt_simple_stmt r_paren opt_nls statement

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55
    ';'                 shift, and go to state 69

    regexp             go to state 31
    a_slash            go to state 32
    exp                go to state 287
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42
    semi               go to state 288


state 280

   77 print_expression_list: '(' expression_list r_paren .
  134 simp_exp: '(' expression_list r_paren . LEX_IN simple_variable

    LEX_IN  shift, and go to state 175

    $default  reduce using rule 77 (print_expression_list)


state 281

   80 output_redir: IO_OUT $@6 . common_exp

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    regexp             go to state 31
    a_slash            go to state 32
    common_exp         go to state 289
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 57


state 282

   81 if_statement: LEX_IF '(' exp r_paren opt_nls statement .
   82             | LEX_IF '(' exp r_paren opt_nls statement . LEX_ELSE opt_nls statement

    LEX_ELSE  shift, and go to state 290

    LEX_ELSE  [reduce using rule 81 (if_statement)]
    $default  reduce using rule 81 (if_statement)


state 283

   41 statement: LEX_SWITCH '(' exp r_paren opt_nls l_brace . case_statements opt_nls r_brace

    $default  reduce using rule 64 (case_statements)

    case_statements  go to state 291


state 284

   42 statement: LEX_WHILE '(' exp r_paren opt_nls statement .

    $default  reduce using rule 42 (statement)


state 285

   43 statement: LEX_DO opt_nls statement LEX_WHILE '(' exp . r_paren opt_nls
  107 exp: exp . LEX_AND exp
  108    | exp . LEX_OR exp
  109    | exp . MATCHOP exp
  110    | exp . LEX_IN simple_variable
  111    | exp . a_relop exp
  112    | exp . '?' exp ':' exp

    RELOP    shift, and go to state 78
    MATCHOP  shift, and go to state 79
    LEX_IN   shift, and go to state 80
    LEX_AND  shift, and go to state 81
    LEX_OR   shift, and go to state 82
    '?'      shift, and go to state 83
    '<'      shift, and go to state 85
    '>'      shift, and go to state 86
    ')'      shift, and go to state 132

    relop_or_less  go to state 87
    a_relop        go to state 88
    r_paren        go to state 292


state 286

   44 statement: LEX_FOR '(' NAME LEX_IN simple_variable r_paren . opt_nls statement

    NEWLINE  shift, and go to state 19

    $default  reduce using rule 85 (opt_nls)

    nls      go to state 139
    opt_nls  go to state 293


state 287

   45 statement: LEX_FOR '(' opt_simple_stmt semi opt_nls exp . semi opt_nls opt_simple_stmt r_paren opt_nls statement
  107 exp: exp . LEX_AND exp
  108    | exp . LEX_OR exp
  109    | exp . MATCHOP exp
  110    | exp . LEX_IN simple_variable
  111    | exp . a_relop exp
  112    | exp . '?' exp ':' exp

    RELOP    shift, and go to state 78
    MATCHOP  shift, and go to state 79
    LEX_IN   shift, and go to state 80
    LEX_AND  shift, and go to state 81
    LEX_OR   shift, and go to state 82
    '?'      shift, and go to state 83
    '<'      shift, and go to state 85
    '>'      shift, and go to state 86
    ';'      shift, and go to state 69

    relop_or_less  go to state 87
    a_relop        go to state 88
    semi           go to state 294


state 288

   46 statement: LEX_FOR '(' opt_simple_stmt semi opt_nls semi . opt_nls opt_simple_stmt r_paren opt_nls statement

    NEWLINE  shift, and go to state 19

    $default  reduce using rule 85 (opt_nls)

    nls      go to state 139
    opt_nls  go to state 295


state 289

   80 output_redir: IO_OUT $@6 common_exp .
  123 common_exp: common_exp . simp_exp
  135 simp_exp_nc: common_exp . IO_IN LEX_GETLINE opt_variable

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    IO_IN               shift, and go to state 89
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    $default  reduce using rule 80 (output_redir)

    regexp             go to state 31
    a_slash            go to state 32
    simp_exp           go to state 90
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 57


state 290

   82 if_statement: LEX_IF '(' exp r_paren opt_nls statement LEX_ELSE . opt_nls statement

    NEWLINE  shift, and go to state 19

    $default  reduce using rule 85 (opt_nls)

    nls      go to state 139
    opt_nls  go to state 296


state 291

   41 statement: LEX_SWITCH '(' exp r_paren opt_nls l_brace case_statements . opt_nls r_brace
   65 case_statements: case_statements . case_statement
   66                | case_statements . error

    error        shift, and go to state 297
    LEX_CASE     shift, and go to state 298
    LEX_DEFAULT  shift, and go to state 299
    NEWLINE      shift, and go to state 19

    '}'  reduce using rule 85 (opt_nls)

    case_statement  go to state 300
    nls             go to state 139
    opt_nls         go to state 301


state 292

   43 statement: LEX_DO opt_nls statement LEX_WHILE '(' exp r_paren . opt_nls

    NEWLINE  shift, and go to state 19

    NEWLINE   [reduce using rule 85 (opt_nls)]
    $default  reduce using rule 85 (opt_nls)

    nls      go to state 139
    opt_nls  go to state 302


state 293

   44 statement: LEX_FOR '(' NAME LEX_IN simple_variable r_paren opt_nls . statement

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_IF              shift, and go to state 181
    LEX_RETURN          shift, and go to state 182
    LEX_DELETE          shift, and go to state 183
    LEX_SWITCH          shift, and go to state 184
    LEX_WHILE           shift, and go to state 185
    LEX_DO              shift, and go to state 186
    LEX_FOR             shift, and go to state 187
    LEX_BREAK           shift, and go to state 188
    LEX_CONTINUE        shift, and go to state 189
    LEX_PRINT           shift, and go to state 190
    LEX_PRINTF          shift, and go to state 191
    LEX_NEXT            shift, and go to state 192
    LEX_EXIT            shift, and go to state 193
    LEX_GETLINE         shift, and go to state 13
    LEX_NEXTFILE        shift, and go to state 194
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55
    '{'                 shift, and go to state 68
    ';'                 shift, and go to state 69

    regexp             go to state 31
    a_slash            go to state 32
    statement          go to state 303
    non_compound_stmt  go to state 197
    simple_stmt        go to state 198
    print              go to state 199
    if_statement       go to state 200
    exp                go to state 201
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42
    l_brace            go to state 202
    semi               go to state 204


state 294

   45 statement: LEX_FOR '(' opt_simple_stmt semi opt_nls exp semi . opt_nls opt_simple_stmt r_paren opt_nls statement

    NEWLINE  shift, and go to state 19

    $default  reduce using rule 85 (opt_nls)

    nls      go to state 139
    opt_nls  go to state 304


state 295

   46 statement: LEX_FOR '(' opt_simple_stmt semi opt_nls semi opt_nls . opt_simple_stmt r_paren opt_nls statement

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_DELETE          shift, and go to state 183
    LEX_PRINT           shift, and go to state 190
    LEX_PRINTF          shift, and go to state 191
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    $default  reduce using rule 62 (opt_simple_stmt)

    regexp             go to state 31
    a_slash            go to state 32
    simple_stmt        go to state 246
    opt_simple_stmt    go to state 305
    print              go to state 199
    exp                go to state 201
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 296

   82 if_statement: LEX_IF '(' exp r_paren opt_nls statement LEX_ELSE opt_nls . statement

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_IF              shift, and go to state 181
    LEX_RETURN          shift, and go to state 182
    LEX_DELETE          shift, and go to state 183
    LEX_SWITCH          shift, and go to state 184
    LEX_WHILE           shift, and go to state 185
    LEX_DO              shift, and go to state 186
    LEX_FOR             shift, and go to state 187
    LEX_BREAK           shift, and go to state 188
    LEX_CONTINUE        shift, and go to state 189
    LEX_PRINT           shift, and go to state 190
    LEX_PRINTF          shift, and go to state 191
    LEX_NEXT            shift, and go to state 192
    LEX_EXIT            shift, and go to state 193
    LEX_GETLINE         shift, and go to state 13
    LEX_NEXTFILE        shift, and go to state 194
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55
    '{'                 shift, and go to state 68
    ';'                 shift, and go to state 69

    regexp             go to state 31
    a_slash            go to state 32
    statement          go to state 306
    non_compound_stmt  go to state 197
    simple_stmt        go to state 198
    print              go to state 199
    if_statement       go to state 200
    exp                go to state 201
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42
    l_brace            go to state 202
    semi               go to state 204


state 297

   66 case_statements: case_statements error .

    $default  reduce using rule 66 (case_statements)


state 298

   67 case_statement: LEX_CASE . case_value colon opt_nls statements

    YNUMBER             shift, and go to state 307
    YSTRING             shift, and go to state 308
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 309
    '-'                 shift, and go to state 310
    '/'                 shift, and go to state 23

    regexp      go to state 311
    a_slash     go to state 32
    case_value  go to state 312


state 299

   68 case_statement: LEX_DEFAULT . colon opt_nls statements

    ':'  shift, and go to state 313

    colon  go to state 314


state 300

   65 case_statements: case_statements case_statement .

    $default  reduce using rule 65 (case_statements)


state 301

   41 statement: LEX_SWITCH '(' exp r_paren opt_nls l_brace case_statements opt_nls . r_brace

    '}'  shift, and go to state 195

    r_brace  go to state 315


state 302

   43 statement: LEX_DO opt_nls statement LEX_WHILE '(' exp r_paren opt_nls .

    $default  reduce using rule 43 (statement)


state 303

   44 statement: LEX_FOR '(' NAME LEX_IN simple_variable r_paren opt_nls statement .

    $default  reduce using rule 44 (statement)


state 304

   45 statement: LEX_FOR '(' opt_simple_stmt semi opt_nls exp semi opt_nls . opt_simple_stmt r_paren opt_nls statement

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_DELETE          shift, and go to state 183
    LEX_PRINT           shift, and go to state 190
    LEX_PRINTF          shift, and go to state 191
    LEX_GETLINE         shift, and go to state 13
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55

    $default  reduce using rule 62 (opt_simple_stmt)

    regexp             go to state 31
    a_slash            go to state 32
    simple_stmt        go to state 246
    opt_simple_stmt    go to state 316
    print              go to state 199
    exp                go to state 201
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42


state 305

   46 statement: LEX_FOR '(' opt_simple_stmt semi opt_nls semi opt_nls opt_simple_stmt . r_paren opt_nls statement

    ')'  shift, and go to state 132

    r_paren  go to state 317


state 306

   82 if_statement: LEX_IF '(' exp r_paren opt_nls statement LEX_ELSE opt_nls statement .

    $default  reduce using rule 82 (if_statement)


state 307

   69 case_value: YNUMBER .

    $default  reduce using rule 69 (case_value)


state 308

   72 case_value: YSTRING .

    $default  reduce using rule 72 (case_value)


state 309

   71 case_value: '+' . YNUMBER

    YNUMBER  shift, and go to state 318


state 310

   70 case_value: '-' . YNUMBER

    YNUMBER  shift, and go to state 319


state 311

   73 case_value: regexp .

    $default  reduce using rule 73 (case_value)


state 312

   67 case_statement: LEX_CASE case_value . colon opt_nls statements

    ':'  shift, and go to state 313

    colon  go to state 320


state 313

  183 colon: ':' .

    $default  reduce using rule 183 (colon)


state 314

   68 case_statement: LEX_DEFAULT colon . opt_nls statements

    NEWLINE  shift, and go to state 19

    NEWLINE   [reduce using rule 85 (opt_nls)]
    $default  reduce using rule 85 (opt_nls)

    nls      go to state 139
    opt_nls  go to state 321


state 315

   41 statement: LEX_SWITCH '(' exp r_paren opt_nls l_brace case_statements opt_nls r_brace .

    $default  reduce using rule 41 (statement)


state 316

   45 statement: LEX_FOR '(' opt_simple_stmt semi opt_nls exp semi opt_nls opt_simple_stmt . r_paren opt_nls statement

    ')'  shift, and go to state 132

    r_paren  go to state 322


state 317

   46 statement: LEX_FOR '(' opt_simple_stmt semi opt_nls semi opt_nls opt_simple_stmt r_paren . opt_nls statement

    NEWLINE  shift, and go to state 19

    $default  reduce using rule 85 (opt_nls)

    nls      go to state 139
    opt_nls  go to state 323


state 318

   71 case_value: '+' YNUMBER .

    $default  reduce using rule 71 (case_value)


state 319

   70 case_value: '-' YNUMBER .

    $default  reduce using rule 70 (case_value)


state 320

   67 case_statement: LEX_CASE case_value colon . opt_nls statements

    NEWLINE  shift, and go to state 19

    NEWLINE   [reduce using rule 85 (opt_nls)]
    $default  reduce using rule 85 (opt_nls)

    nls      go to state 139
    opt_nls  go to state 324


state 321

   68 case_statement: LEX_DEFAULT colon opt_nls . statements

    $default  reduce using rule 33 (statements)

    statements  go to state 325


state 322

   45 statement: LEX_FOR '(' opt_simple_stmt semi opt_nls exp semi opt_nls opt_simple_stmt r_paren . opt_nls statement

    NEWLINE  shift, and go to state 19

    $default  reduce using rule 85 (opt_nls)

    nls      go to state 139
    opt_nls  go to state 326


state 323

   46 statement: LEX_FOR '(' opt_simple_stmt semi opt_nls semi opt_nls opt_simple_stmt r_paren opt_nls . statement

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_IF              shift, and go to state 181
    LEX_RETURN          shift, and go to state 182
    LEX_DELETE          shift, and go to state 183
    LEX_SWITCH          shift, and go to state 184
    LEX_WHILE           shift, and go to state 185
    LEX_DO              shift, and go to state 186
    LEX_FOR             shift, and go to state 187
    LEX_BREAK           shift, and go to state 188
    LEX_CONTINUE        shift, and go to state 189
    LEX_PRINT           shift, and go to state 190
    LEX_PRINTF          shift, and go to state 191
    LEX_NEXT            shift, and go to state 192
    LEX_EXIT            shift, and go to state 193
    LEX_GETLINE         shift, and go to state 13
    LEX_NEXTFILE        shift, and go to state 194
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55
    '{'                 shift, and go to state 68
    ';'                 shift, and go to state 69

    regexp             go to state 31
    a_slash            go to state 32
    statement          go to state 327
    non_compound_stmt  go to state 197
    simple_stmt        go to state 198
    print              go to state 199
    if_statement       go to state 200
    exp                go to state 201
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42
    l_brace            go to state 202
    semi               go to state 204


state 324

   67 case_statement: LEX_CASE case_value colon opt_nls . statements

    $default  reduce using rule 33 (statements)

    statements  go to state 328


state 325

   34 statements: statements . statement
   35           | statements . error
   68 case_statement: LEX_DEFAULT colon opt_nls statements .

    error               shift, and go to state 180
    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_IF              shift, and go to state 181
    LEX_RETURN          shift, and go to state 182
    LEX_DELETE          shift, and go to state 183
    LEX_SWITCH          shift, and go to state 184
    LEX_WHILE           shift, and go to state 185
    LEX_DO              shift, and go to state 186
    LEX_FOR             shift, and go to state 187
    LEX_BREAK           shift, and go to state 188
    LEX_CONTINUE        shift, and go to state 189
    LEX_PRINT           shift, and go to state 190
    LEX_PRINTF          shift, and go to state 191
    LEX_NEXT            shift, and go to state 192
    LEX_EXIT            shift, and go to state 193
    LEX_GETLINE         shift, and go to state 13
    LEX_NEXTFILE        shift, and go to state 194
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55
    '{'                 shift, and go to state 68
    ';'                 shift, and go to state 69

    error        [reduce using rule 68 (case_statement)]
    LEX_CASE     reduce using rule 68 (case_statement)
    LEX_DEFAULT  reduce using rule 68 (case_statement)
    NEWLINE      reduce using rule 68 (case_statement)
    '}'          reduce using rule 68 (case_statement)

    regexp             go to state 31
    a_slash            go to state 32
    statement          go to state 196
    non_compound_stmt  go to state 197
    simple_stmt        go to state 198
    print              go to state 199
    if_statement       go to state 200
    exp                go to state 201
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42
    l_brace            go to state 202
    semi               go to state 204


state 326

   45 statement: LEX_FOR '(' opt_simple_stmt semi opt_nls exp semi opt_nls opt_simple_stmt r_paren opt_nls . statement

    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_IF              shift, and go to state 181
    LEX_RETURN          shift, and go to state 182
    LEX_DELETE          shift, and go to state 183
    LEX_SWITCH          shift, and go to state 184
    LEX_WHILE           shift, and go to state 185
    LEX_DO              shift, and go to state 186
    LEX_FOR             shift, and go to state 187
    LEX_BREAK           shift, and go to state 188
    LEX_CONTINUE        shift, and go to state 189
    LEX_PRINT           shift, and go to state 190
    LEX_PRINTF          shift, and go to state 191
    LEX_NEXT            shift, and go to state 192
    LEX_EXIT            shift, and go to state 193
    LEX_GETLINE         shift, and go to state 13
    LEX_NEXTFILE        shift, and go to state 194
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55
    '{'                 shift, and go to state 68
    ';'                 shift, and go to state 69

    regexp             go to state 31
    a_slash            go to state 32
    statement          go to state 329
    non_compound_stmt  go to state 197
    simple_stmt        go to state 198
    print              go to state 199
    if_statement       go to state 200
    exp                go to state 201
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42
    l_brace            go to state 202
    semi               go to state 204


state 327

   46 statement: LEX_FOR '(' opt_simple_stmt semi opt_nls semi opt_nls opt_simple_stmt r_paren opt_nls statement .

    $default  reduce using rule 46 (statement)


state 328

   34 statements: statements . statement
   35           | statements . error
   67 case_statement: LEX_CASE case_value colon opt_nls statements .

    error               shift, and go to state 180
    FUNC_CALL           shift, and go to state 4
    NAME                shift, and go to state 5
    YNUMBER             shift, and go to state 6
    YSTRING             shift, and go to state 7
    LEX_IF              shift, and go to state 181
    LEX_RETURN          shift, and go to state 182
    LEX_DELETE          shift, and go to state 183
    LEX_SWITCH          shift, and go to state 184
    LEX_WHILE           shift, and go to state 185
    LEX_DO              shift, and go to state 186
    LEX_FOR             shift, and go to state 187
    LEX_BREAK           shift, and go to state 188
    LEX_CONTINUE        shift, and go to state 189
    LEX_PRINT           shift, and go to state 190
    LEX_PRINTF          shift, and go to state 191
    LEX_NEXT            shift, and go to state 192
    LEX_EXIT            shift, and go to state 193
    LEX_GETLINE         shift, and go to state 13
    LEX_NEXTFILE        shift, and go to state 194
    INCREMENT           shift, and go to state 14
    DECREMENT           shift, and go to state 15
    LEX_BUILTIN         shift, and go to state 16
    LEX_LENGTH          shift, and go to state 17
    SLASH_BEFORE_EQUAL  shift, and go to state 20
    '+'                 shift, and go to state 21
    '-'                 shift, and go to state 22
    '/'                 shift, and go to state 23
    '!'                 shift, and go to state 24
    '$'                 shift, and go to state 25
    '('                 shift, and go to state 26
    '@'                 shift, and go to state 55
    '{'                 shift, and go to state 68
    ';'                 shift, and go to state 69

    error        [reduce using rule 67 (case_statement)]
    LEX_CASE     reduce using rule 67 (case_statement)
    LEX_DEFAULT  reduce using rule 67 (case_statement)
    NEWLINE      reduce using rule 67 (case_statement)
    '}'          reduce using rule 67 (case_statement)

    regexp             go to state 31
    a_slash            go to state 32
    statement          go to state 196
    non_compound_stmt  go to state 197
    simple_stmt        go to state 198
    print              go to state 199
    if_statement       go to state 200
    exp                go to state 201
    common_exp         go to state 35
    simp_exp           go to state 36
    simp_exp_nc        go to state 37
    non_post_simp_exp  go to state 38
    func_call          go to state 39
    direct_func_call   go to state 40
    simple_variable    go to state 41
    variable           go to state 42
    l_brace            go to state 202
    semi               go to state 204


state 329

   45 statement: LEX_FOR '(' opt_simple_stmt semi opt_nls exp semi opt_nls opt_simple_stmt r_paren opt_nls statement .

    $default  reduce using rule 45 (statement)
